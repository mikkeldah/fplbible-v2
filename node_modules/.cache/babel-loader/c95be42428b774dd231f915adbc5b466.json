{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikke\\\\VSC\\\\fantasy-django-react\\\\fantasy-django\\\\fantasy-react-app\\\\src\\\\components\\\\statpage\\\\RadioButtonGroup.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RadioButtonGroup(props) {\n  _s();\n\n  //For the show name radio buttons\n  const [selectedValue2, setSelectedValue2] = useState('Always');\n\n  const handleChange2 = event => {\n    setSelectedValue2(event.target.value);\n    const newPref = getPreferencesChange();\n    props.prefChange(newPref);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"radio-buttons\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Always\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GreenRadio, {\n        checked: selectedValue2 === props.value1,\n        onChange: handleChange2,\n        value: props.value1,\n        name: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-button-group\",\n      id: \"radio-margin-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"On hover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GreenRadio, {\n        checked: selectedValue2 === props.value2,\n        onChange: handleChange2,\n        value: props.value2,\n        name: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RadioButtonGroup, \"uDfoxL1QKpHK2O1r/GLd3LC16Qg=\");\n\n_c = RadioButtonGroup;\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Radio, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 17\n}, this));\n\nfunction getPreferencesChange() {\n  const hAxisInput = document.getElementById('select-h-ax').value;\n  const vAxisInput = document.getElementById('select-v-ax').value;\n  const isCheckedGKP = document.getElementById('GKP-CB').checked;\n  const isCheckedDEF = document.getElementById('DEF-CB').checked;\n  const isCheckedMID = document.getElementById('MID-CB').checked;\n  const isCheckedFWD = document.getElementById('FWD-CB').checked;\n  const minutesPlayed = document.getElementById('minutes-slider').value;\n  const maxPrice = document.getElementById('max-price').value;\n  const selectTeam = document.getElementById('select-team').value;\n  const radiosAvail = document.getElementsByName('radio-availability');\n  let radioAvail;\n\n  for (let i = 0; i < radiosAvail.length; i++) {\n    if (radiosAvail[i].checked) {\n      radioAvail = radiosAvail[i].value;\n    }\n  }\n\n  const radiosShow = document.getElementsByName('radio-show');\n  let radioShow;\n\n  for (let i = 0; i < radiosShow.length; i++) {\n    if (radiosShow[i].checked) {\n      radioShow = radiosShow[i].value;\n    }\n  }\n\n  return [hAxisInput, vAxisInput, isCheckedGKP, isCheckedDEF, isCheckedMID, isCheckedFWD, minutesPlayed, maxPrice, selectTeam, radioAvail, radioShow];\n}\n\nexport default RadioButtonGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioButtonGroup\");","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/src/components/statpage/RadioButtonGroup.js"],"names":["useState","withStyles","green","Radio","RadioButtonGroup","props","selectedValue2","setSelectedValue2","handleChange2","event","target","value","newPref","getPreferencesChange","prefChange","value1","name","value2","GreenRadio","root","color","checked","hAxisInput","document","getElementById","vAxisInput","isCheckedGKP","isCheckedDEF","isCheckedMID","isCheckedFWD","minutesPlayed","maxPrice","selectTeam","radiosAvail","getElementsByName","radioAvail","i","length","radiosShow","radioShow"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nfunction RadioButtonGroup(props) {\r\n\r\n      //For the show name radio buttons\r\n      const [selectedValue2, setSelectedValue2] = useState('Always');\r\n\r\n      const handleChange2 = (event) => {\r\n          setSelectedValue2(event.target.value);\r\n          const newPref = getPreferencesChange();\r\n          props.prefChange(newPref);\r\n      };\r\n  \r\n    return (\r\n        <div className=\"radio-buttons\">\r\n            <div className=\"radio-button-group\">\r\n                <p>Always</p>\r\n                    <GreenRadio \r\n                        checked={selectedValue2 === props.value1}\r\n                        onChange={handleChange2}\r\n                        value={props.value1}\r\n                        name={props.name}\r\n                    />\r\n            </div>\r\n            <div className=\"radio-button-group\" id=\"radio-margin-left\">\r\n                <p>On hover</p>\r\n                    <GreenRadio\r\n                        checked={selectedValue2 === props.value2}\r\n                        onChange={handleChange2}\r\n                        value={props.value2}\r\n                        name={props.name}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GreenRadio = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Radio color=\"default\" {...props} />);\r\n  \r\n\r\n  function getPreferencesChange() {\r\n    const hAxisInput = document.getElementById('select-h-ax').value;\r\n    const vAxisInput = document.getElementById('select-v-ax').value;\r\n\r\n    const isCheckedGKP = document.getElementById('GKP-CB').checked;\r\n    const isCheckedDEF = document.getElementById('DEF-CB').checked;\r\n    const isCheckedMID = document.getElementById('MID-CB').checked;\r\n    const isCheckedFWD = document.getElementById('FWD-CB').checked;\r\n\r\n    const minutesPlayed = document.getElementById('minutes-slider').value;\r\n\r\n    const maxPrice = document.getElementById('max-price').value;\r\n   \r\n\r\n    const selectTeam = document.getElementById('select-team').value;\r\n\r\n    const radiosAvail = document.getElementsByName('radio-availability');\r\n    let radioAvail;\r\n\r\n    for (let i = 0; i < radiosAvail.length; i++) {\r\n        if(radiosAvail[i].checked) {\r\n            radioAvail = radiosAvail[i].value;\r\n        }\r\n    }\r\n\r\n    const radiosShow = document.getElementsByName('radio-show');\r\n    let radioShow;\r\n\r\n    for (let i = 0; i < radiosShow.length; i++) {\r\n        if(radiosShow[i].checked) {\r\n            radioShow = radiosShow[i].value;\r\n        }\r\n    }\r\n\r\n    return [hAxisInput, vAxisInput, isCheckedGKP, isCheckedDEF, isCheckedMID, isCheckedFWD, minutesPlayed, maxPrice, selectTeam, radioAvail, radioShow]\r\n\r\n}\r\n\r\n  export default RadioButtonGroup;"]},"metadata":{},"sourceType":"module"}