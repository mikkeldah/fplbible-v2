{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikke\\\\vsc\\\\Django\\\\fantasy-django\\\\fantasy-react-app\\\\src\\\\components\\\\statpage\\\\Statsboard.js\",\n    _s = $RefreshSig$();\n\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport { useState, useEffect } from 'react';\nimport setTheme from \"../../utils/Themes\";\nimport OptionsContainer from \"./OptionsContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Plot = createPlotlyComponent(Plotly);\n_c = Plot;\n\nfunction Statsboard() {\n  _s();\n\n  const rawData = [{\n    \"name\": \"Bernd Leno\",\n    \"price\": 5.0,\n    \"total_points\": 131,\n    \"minutes\": 3131,\n    \"ppm\": 0.04183966783775152,\n    \"ppp\": 26.2,\n    \"ppppm\": 0.008367933567550303\n  }, {\n    \"name\": \"Rúnar Alex Rúnarsson\",\n    \"price\": 4.0,\n    \"total_points\": 1,\n    \"minutes\": 15,\n    \"ppm\": 0.06666666666666667,\n    \"ppp\": 0.25,\n    \"ppppm\": 0.016666666666666666\n  }, {\n    \"name\": \"Willian Borges Da Silva\",\n    \"price\": 6.5,\n    \"total_points\": 78,\n    \"minutes\": 1398,\n    \"ppm\": 0.055793991416309016,\n    \"ppp\": 12.0,\n    \"ppppm\": 0.008583690987124463\n  }, {\n    \"name\": \"Pierre-Emerick Aubameyang\",\n    \"price\": 10.0,\n    \"total_points\": 131,\n    \"minutes\": 2330,\n    \"ppm\": 0.056223175965665236,\n    \"ppp\": 13.1,\n    \"ppppm\": 0.0056223175965665236\n  }, {\n    \"name\": \"Cédric Soares\",\n    \"price\": 4.5,\n    \"total_points\": 28,\n    \"minutes\": 744,\n    \"ppm\": 0.03763440860215054,\n    \"ppp\": 6.222222222222222,\n    \"ppppm\": 0.008363201911589008\n  }, {\n    \"name\": \"Alexandre Lacazette\",\n    \"price\": 8.5,\n    \"total_points\": 129,\n    \"minutes\": 1916,\n    \"ppm\": 0.06732776617954071,\n    \"ppp\": 15.176470588235293,\n    \"ppppm\": 0.00792091366818126\n  }, {\n    \"name\": \"Bernd Leno\",\n    \"price\": 5.0,\n    \"total_points\": 131,\n    \"minutes\": 3131,\n    \"ppm\": 0.04183966783775152,\n    \"ppp\": 26.2,\n    \"ppppm\": 0.008367933567550303\n  }, {\n    \"name\": \"Rúnar Alex Rúnarsson\",\n    \"price\": 4.0,\n    \"total_points\": 1,\n    \"minutes\": 15,\n    \"ppm\": 0.06666666666666667,\n    \"ppp\": 0.25,\n    \"ppppm\": 0.016666666666666666\n  }, {\n    \"name\": \"Willian Borges Da Silva\",\n    \"price\": 6.5,\n    \"total_points\": 78,\n    \"minutes\": 1398,\n    \"ppm\": 0.055793991416309016,\n    \"ppp\": 12.0,\n    \"ppppm\": 0.008583690987124463\n  }, {\n    \"name\": \"Pierre-Emerick Aubameyang\",\n    \"price\": 10.0,\n    \"total_points\": 131,\n    \"minutes\": 2330,\n    \"ppm\": 0.056223175965665236,\n    \"ppp\": 13.1,\n    \"ppppm\": 0.0056223175965665236\n  }, {\n    \"name\": \"Cédric Soares\",\n    \"price\": 4.5,\n    \"total_points\": 28,\n    \"minutes\": 744,\n    \"ppm\": 0.03763440860215054,\n    \"ppp\": 6.222222222222222,\n    \"ppppm\": 0.008363201911589008\n  }, {\n    \"name\": \"Alexandre Lacazette\",\n    \"price\": 8.5,\n    \"total_points\": 129,\n    \"minutes\": 1916,\n    \"ppm\": 0.06732776617954071,\n    \"ppp\": 15.176470588235293,\n    \"ppppm\": 0.00792091366818126\n  }];\n  const [data, setData] = useState(rawData); // useEffect(() => {\n  //     fetch('http://127.0.0.1:8000/api/app/')\n  //     .then(res => res.json())\n  //     .then(data => {\n  //         setData(data);\n  //     })\n  //     .catch(err => {\n  //         console.log(err);\n  //     });\n  // }, []); \n  //Set theme to black when rendering the Statboard\n\n  useEffect(() => {\n    setTheme('black', 'grey');\n  });\n  const [preferences, setPreferences] = useState([]);\n  const hAxisPref = preferences[0];\n  const vAxisPref = preferences[1];\n  const [xData, yData, names] = getXYData(data, hAxisPref, vAxisPref);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"statsboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"statsboard-options-title\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"options-button\",\n        onClick: showOrHideMenu,\n        children: \"+Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OptionsContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"plot-container\",\n      children: /*#__PURE__*/_jsxDEV(Plot, {\n        data: [{\n          x: xData,\n          y: yData,\n          type: 'scatter',\n          text: names,\n          mode: 'markers+text',\n          textposition: 'top center',\n          marker: {\n            size: 8\n          }\n        }],\n        layout: {\n          xaxis: {\n            title: hAxisPref,\n            autorange: true,\n            gridcolor: 'grey',\n            linecolor: '#636363',\n            linewidth: 2\n          },\n          yaxis: {\n            title: vAxisPref,\n            autorange: true,\n            gridcolor: 'grey',\n            linecolor: '#636363',\n            linewidth: 2\n          },\n          hovermode: 'closest',\n          plot_bgcolor: \"#222\",\n          paper_bgcolor: \"#222\",\n          font: {\n            color: \"white\"\n          }\n        },\n        config: {\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Statsboard, \"tJwr94P66UfcCHXQ/ooaOCX964I=\");\n\n_c2 = Statsboard;\n;\n\nfunction getPreferencesChange() {\n  const hAxisInput = document.getElementById('select-h-ax').value;\n  const vAxisInput = document.getElementById('select-v-ax').value;\n  const isCheckedGKP = document.getElementById('GKP-CB').checked;\n  const isCheckedDEF = document.getElementById('DEF-CB').checked;\n  const isCheckedMID = document.getElementById('MID-CB').checked;\n  const isCheckedFWD = document.getElementById('FWD-CB').checked;\n  return [hAxisInput, vAxisInput, isCheckedGKP, isCheckedDEF, isCheckedMID, isCheckedFWD];\n}\n\nlet optionsClicked = false;\n\nfunction showOrHideMenu() {\n  const dropDownMenu = document.getElementById('statsboard-options-container');\n  const optionsButton = document.getElementById('options-button');\n\n  if (!optionsClicked) {\n    dropDownMenu.style.display = 'flex';\n    optionsButton.innerHTML = 'Close';\n  } else {\n    dropDownMenu.style.display = 'none';\n    optionsButton.innerHTML = '+Options';\n  }\n\n  optionsClicked = !optionsClicked;\n}\n\nfunction getXYData(JSONdata, xLabel, yLabel) {\n  let xData = [];\n  let yData = [];\n  let names = [];\n\n  for (let i = 0; i < JSONdata.length; i++) {\n    if (JSONdata[i]['minutes'] > 1000) {\n      xData.push(JSONdata[i][xLabel]);\n      yData.push(JSONdata[i][yLabel]);\n      names.push(JSONdata[i]['name']);\n    }\n  }\n\n  return [xData, yData, names];\n}\n\nexport default Statsboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c2, \"Statsboard\");","map":{"version":3,"sources":["C:/Users/mikke/vsc/Django/fantasy-django/fantasy-react-app/src/components/statpage/Statsboard.js"],"names":["Plotly","createPlotlyComponent","useState","useEffect","setTheme","OptionsContainer","Plot","Statsboard","rawData","data","setData","preferences","setPreferences","hAxisPref","vAxisPref","xData","yData","names","getXYData","showOrHideMenu","x","y","type","text","mode","textposition","marker","size","xaxis","title","autorange","gridcolor","linecolor","linewidth","yaxis","hovermode","plot_bgcolor","paper_bgcolor","font","color","responsive","getPreferencesChange","hAxisInput","document","getElementById","value","vAxisInput","isCheckedGKP","checked","isCheckedDEF","isCheckedMID","isCheckedFWD","optionsClicked","dropDownMenu","optionsButton","style","display","innerHTML","JSONdata","xLabel","yLabel","i","length","push"],"mappings":"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","sourcesContent":["import Plotly from \"plotly.js\";\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport { useState, useEffect } from 'react';\r\nimport setTheme from \"../../utils/Themes\";\r\nimport OptionsContainer from \"./OptionsContainer\";\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nfunction Statsboard() {\r\n\r\n    const rawData = [\r\n        {\r\n            \"name\": \"Bernd Leno\",\r\n            \"price\": 5.0,\r\n            \"total_points\": 131,\r\n            \"minutes\": 3131,\r\n            \"ppm\": 0.04183966783775152,\r\n            \"ppp\": 26.2,\r\n            \"ppppm\": 0.008367933567550303\r\n        },\r\n        {\r\n            \"name\": \"Rúnar Alex Rúnarsson\",\r\n            \"price\": 4.0,\r\n            \"total_points\": 1,\r\n            \"minutes\": 15,\r\n            \"ppm\": 0.06666666666666667,\r\n            \"ppp\": 0.25,\r\n            \"ppppm\": 0.016666666666666666\r\n        },\r\n        {\r\n            \"name\": \"Willian Borges Da Silva\",\r\n            \"price\": 6.5,\r\n            \"total_points\": 78,\r\n            \"minutes\": 1398,\r\n            \"ppm\": 0.055793991416309016,\r\n            \"ppp\": 12.0,\r\n            \"ppppm\": 0.008583690987124463\r\n        },\r\n        {\r\n            \"name\": \"Pierre-Emerick Aubameyang\",\r\n            \"price\": 10.0,\r\n            \"total_points\": 131,\r\n            \"minutes\": 2330,\r\n            \"ppm\": 0.056223175965665236,\r\n            \"ppp\": 13.1,\r\n            \"ppppm\": 0.0056223175965665236\r\n        },\r\n        {\r\n            \"name\": \"Cédric Soares\",\r\n            \"price\": 4.5,\r\n            \"total_points\": 28,\r\n            \"minutes\": 744,\r\n            \"ppm\": 0.03763440860215054,\r\n            \"ppp\": 6.222222222222222,\r\n            \"ppppm\": 0.008363201911589008\r\n        },\r\n        {\r\n            \"name\": \"Alexandre Lacazette\",\r\n            \"price\": 8.5,\r\n            \"total_points\": 129,\r\n            \"minutes\": 1916,\r\n            \"ppm\": 0.06732776617954071,\r\n            \"ppp\": 15.176470588235293,\r\n            \"ppppm\": 0.00792091366818126\r\n        },\r\n        {\r\n            \"name\": \"Bernd Leno\",\r\n            \"price\": 5.0,\r\n            \"total_points\": 131,\r\n            \"minutes\": 3131,\r\n            \"ppm\": 0.04183966783775152,\r\n            \"ppp\": 26.2,\r\n            \"ppppm\": 0.008367933567550303\r\n        },\r\n        {\r\n            \"name\": \"Rúnar Alex Rúnarsson\",\r\n            \"price\": 4.0,\r\n            \"total_points\": 1,\r\n            \"minutes\": 15,\r\n            \"ppm\": 0.06666666666666667,\r\n            \"ppp\": 0.25,\r\n            \"ppppm\": 0.016666666666666666\r\n        },\r\n        {\r\n            \"name\": \"Willian Borges Da Silva\",\r\n            \"price\": 6.5,\r\n            \"total_points\": 78,\r\n            \"minutes\": 1398,\r\n            \"ppm\": 0.055793991416309016,\r\n            \"ppp\": 12.0,\r\n            \"ppppm\": 0.008583690987124463\r\n        },\r\n        {\r\n            \"name\": \"Pierre-Emerick Aubameyang\",\r\n            \"price\": 10.0,\r\n            \"total_points\": 131,\r\n            \"minutes\": 2330,\r\n            \"ppm\": 0.056223175965665236,\r\n            \"ppp\": 13.1,\r\n            \"ppppm\": 0.0056223175965665236\r\n        },\r\n        {\r\n            \"name\": \"Cédric Soares\",\r\n            \"price\": 4.5,\r\n            \"total_points\": 28,\r\n            \"minutes\": 744,\r\n            \"ppm\": 0.03763440860215054,\r\n            \"ppp\": 6.222222222222222,\r\n            \"ppppm\": 0.008363201911589008\r\n        },\r\n        {\r\n            \"name\": \"Alexandre Lacazette\",\r\n            \"price\": 8.5,\r\n            \"total_points\": 129,\r\n            \"minutes\": 1916,\r\n            \"ppm\": 0.06732776617954071,\r\n            \"ppp\": 15.176470588235293,\r\n            \"ppppm\": 0.00792091366818126\r\n        },\r\n    ]\r\n\r\n    const [ data, setData ] = useState(rawData);\r\n\r\n    // useEffect(() => {\r\n    //     fetch('http://127.0.0.1:8000/api/app/')\r\n    //     .then(res => res.json())\r\n    //     .then(data => {\r\n    //         setData(data);\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err);\r\n    //     });\r\n    // }, []); \r\n\r\n    //Set theme to black when rendering the Statboard\r\n    useEffect(() => {\r\n        setTheme('black', 'grey');\r\n    })\r\n\r\n    const [ preferences, setPreferences ] = useState([]);   \r\n\r\n    const hAxisPref = preferences[0]\r\n    const vAxisPref = preferences[1]\r\n    const [ xData, yData, names] = getXYData(data, hAxisPref, vAxisPref)\r\n\r\n    return (\r\n        <div id=\"statsboard\">\r\n            <div id=\"statsboard-options-title\" >\r\n                <p id=\"options-button\" onClick={showOrHideMenu}>+Options</p>\r\n            </div>\r\n            <OptionsContainer/>\r\n            <div id=\"plot-container\">\r\n                <Plot \r\n                    data={[\r\n                        {\r\n                            x: xData,\r\n                            y: yData,\r\n                            type: 'scatter',\r\n                            text: names,\r\n                            mode: 'markers+text',\r\n                            textposition: 'top center',\r\n                            marker: { size: 8 },\r\n                        },\r\n                    ]}\r\n                    layout={ {\r\n                        xaxis: {\r\n                            title: hAxisPref,\r\n                            autorange: true,\r\n                            gridcolor: 'grey',\r\n                            linecolor: '#636363',\r\n                            linewidth: 2\r\n                        },\r\n                        yaxis: {\r\n                            title: vAxisPref,\r\n                            autorange: true,\r\n                            gridcolor: 'grey',\r\n                            linecolor: '#636363',\r\n                            linewidth: 2\r\n                        },\r\n                        hovermode: 'closest',\r\n                        plot_bgcolor:\"#222\",\r\n                        paper_bgcolor:\"#222\",\r\n                        font: {\r\n                            color: \"white\",\r\n                        }\r\n                    }}\r\n                    config = {{responsive: true}}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction getPreferencesChange() {\r\n    const hAxisInput = document.getElementById('select-h-ax').value;\r\n    const vAxisInput = document.getElementById('select-v-ax').value;\r\n\r\n    const isCheckedGKP = document.getElementById('GKP-CB').checked;\r\n    const isCheckedDEF = document.getElementById('DEF-CB').checked;\r\n    const isCheckedMID = document.getElementById('MID-CB').checked;\r\n    const isCheckedFWD = document.getElementById('FWD-CB').checked;\r\n\r\n    return [hAxisInput, vAxisInput, isCheckedGKP, isCheckedDEF, isCheckedMID, isCheckedFWD]\r\n\r\n}\r\n\r\nlet optionsClicked = false;\r\n\r\nfunction showOrHideMenu() {\r\n    const dropDownMenu = document.getElementById('statsboard-options-container');\r\n    const optionsButton = document.getElementById('options-button');\r\n\r\n    if (!optionsClicked) {\r\n        dropDownMenu.style.display = 'flex';\r\n        optionsButton.innerHTML = 'Close';\r\n\r\n    } \r\n    else {\r\n        dropDownMenu.style.display = 'none';\r\n        optionsButton.innerHTML = '+Options';\r\n    }\r\n    optionsClicked = !optionsClicked;\r\n}\r\n\r\nfunction getXYData(JSONdata, xLabel, yLabel) {\r\n    let xData = []\r\n    let yData = []\r\n    let names = []\r\n    for (let i = 0; i < JSONdata.length; i++) {\r\n        if (JSONdata[i]['minutes'] > 1000) {\r\n            xData.push(JSONdata[i][xLabel])\r\n            yData.push(JSONdata[i][yLabel])\r\n            names.push(JSONdata[i]['name'])\r\n        }\r\n    }\r\n\r\n    return [xData, yData, names];\r\n}\r\n\r\n\r\nexport default Statsboard;"]},"metadata":{},"sourceType":"module"}