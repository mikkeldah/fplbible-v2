{"ast":null,"code":"'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nmodule.exports = function (a) {\n  return minMax(a, 0);\n};\n\nfunction minMax(a, depth) {\n  // Limit to ten dimensional datasets. This seems *exceedingly* unlikely to\n  // ever cause problems or even be a concern. It's include strictly so that\n  // circular arrays could never cause this to loop.\n  if (!isArrayOrTypedArray(a) || depth >= 10) {\n    return null;\n  }\n\n  var min = Infinity;\n  var max = -Infinity;\n  var n = a.length;\n\n  for (var i = 0; i < n; i++) {\n    var datum = a[i];\n\n    if (isArrayOrTypedArray(datum)) {\n      var result = minMax(datum, depth + 1);\n\n      if (result) {\n        min = Math.min(result[0], min);\n        max = Math.max(result[1], max);\n      }\n    } else {\n      min = Math.min(datum, min);\n      max = Math.max(datum, max);\n    }\n  }\n\n  return [min, max];\n}","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/carpet/array_minmax.js"],"names":["isArrayOrTypedArray","require","module","exports","a","minMax","depth","min","Infinity","max","n","length","i","datum","result","Math"],"mappings":"AAAA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,mBAA/C;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,CAAT,EAAY;AACzB,SAAOC,MAAM,CAACD,CAAD,EAAI,CAAJ,CAAb;AACH,CAFD;;AAIA,SAASC,MAAT,CAAgBD,CAAhB,EAAmBE,KAAnB,EAA0B;AACtB;AACA;AACA;AACA,MAAG,CAACN,mBAAmB,CAACI,CAAD,CAApB,IAA2BE,KAAK,IAAI,EAAvC,EAA2C;AACvC,WAAO,IAAP;AACH;;AAED,MAAIC,GAAG,GAAGC,QAAV;AACA,MAAIC,GAAG,GAAG,CAACD,QAAX;AACA,MAAIE,CAAC,GAAGN,CAAC,CAACO,MAAV;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,CAAnB,EAAsBE,CAAC,EAAvB,EAA2B;AACvB,QAAIC,KAAK,GAAGT,CAAC,CAACQ,CAAD,CAAb;;AAEA,QAAGZ,mBAAmB,CAACa,KAAD,CAAtB,EAA+B;AAC3B,UAAIC,MAAM,GAAGT,MAAM,CAACQ,KAAD,EAAQP,KAAK,GAAG,CAAhB,CAAnB;;AAEA,UAAGQ,MAAH,EAAW;AACPP,QAAAA,GAAG,GAAGQ,IAAI,CAACR,GAAL,CAASO,MAAM,CAAC,CAAD,CAAf,EAAoBP,GAApB,CAAN;AACAE,QAAAA,GAAG,GAAGM,IAAI,CAACN,GAAL,CAASK,MAAM,CAAC,CAAD,CAAf,EAAoBL,GAApB,CAAN;AACH;AACJ,KAPD,MAOO;AACHF,MAAAA,GAAG,GAAGQ,IAAI,CAACR,GAAL,CAASM,KAAT,EAAgBN,GAAhB,CAAN;AACAE,MAAAA,GAAG,GAAGM,IAAI,CAACN,GAAL,CAASI,KAAT,EAAgBJ,GAAhB,CAAN;AACH;AACJ;;AAED,SAAO,CAACF,GAAD,EAAME,GAAN,CAAP;AACH","sourcesContent":["'use strict';\r\n\r\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\r\n\r\nmodule.exports = function(a) {\r\n    return minMax(a, 0);\r\n};\r\n\r\nfunction minMax(a, depth) {\r\n    // Limit to ten dimensional datasets. This seems *exceedingly* unlikely to\r\n    // ever cause problems or even be a concern. It's include strictly so that\r\n    // circular arrays could never cause this to loop.\r\n    if(!isArrayOrTypedArray(a) || depth >= 10) {\r\n        return null;\r\n    }\r\n\r\n    var min = Infinity;\r\n    var max = -Infinity;\r\n    var n = a.length;\r\n    for(var i = 0; i < n; i++) {\r\n        var datum = a[i];\r\n\r\n        if(isArrayOrTypedArray(datum)) {\r\n            var result = minMax(datum, depth + 1);\r\n\r\n            if(result) {\r\n                min = Math.min(result[0], min);\r\n                max = Math.max(result[1], max);\r\n            }\r\n        } else {\r\n            min = Math.min(datum, min);\r\n            max = Math.max(datum, max);\r\n        }\r\n    }\r\n\r\n    return [min, max];\r\n}\r\n"]},"metadata":{},"sourceType":"script"}