{"ast":null,"code":"'use strict';\n\nvar scatterglAttrs = require('../scatter/attributes');\n\nmodule.exports = {\n  x: scatterglAttrs.x,\n  y: scatterglAttrs.y,\n  xy: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Faster alternative to specifying `x` and `y` separately.', 'If supplied, it must be a typed `Float32Array` array that', 'represents points such that `xy[i * 2] = x[i]` and `xy[i * 2 + 1] = y[i]`'].join(' ')\n  },\n  indices: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['A sequential value, 0..n, supply it to avoid creating this array inside plotting.', 'If specified, it must be a typed `Int32Array` array.', 'Its length must be equal to or greater than the number of points.', 'For the best performance and memory use, create one large `indices` typed array', 'that is guaranteed to be at least as long as the largest number of points during', 'use, and reuse it on each `Plotly.restyle()` call.'].join(' ')\n  },\n  xbounds: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Specify `xbounds` in the shape of `[xMin, xMax] to avoid looping through', 'the `xy` typed array. Use it in conjunction with `xy` and `ybounds` for the performance benefits.'].join(' ')\n  },\n  ybounds: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Specify `ybounds` in the shape of `[yMin, yMax] to avoid looping through', 'the `xy` typed array. Use it in conjunction with `xy` and `xbounds` for the performance benefits.'].join(' ')\n  },\n  text: scatterglAttrs.text,\n  marker: {\n    color: {\n      valType: 'color',\n      arrayOk: false,\n      editType: 'calc',\n      description: ['Sets the marker fill color. It accepts a specific color.', 'If the color is not fully opaque and there are hundreds of thousands', 'of points, it may cause slower zooming and panning.'].join('')\n    },\n    opacity: {\n      valType: 'number',\n      min: 0,\n      max: 1,\n      dflt: 1,\n      arrayOk: false,\n      editType: 'calc',\n      description: ['Sets the marker opacity. The default value is `1` (fully opaque).', 'If the markers are not fully opaque and there are hundreds of thousands', 'of points, it may cause slower zooming and panning.', 'Opacity fades the color even if `blend` is left on `false` even if there', 'is no translucency effect in that case.'].join(' ')\n    },\n    blend: {\n      valType: 'boolean',\n      dflt: null,\n      editType: 'calc',\n      description: ['Determines if colors are blended together for a translucency effect', 'in case `opacity` is specified as a value less then `1`.', 'Setting `blend` to `true` reduces zoom/pan', 'speed if used with large numbers of points.'].join(' ')\n    },\n    sizemin: {\n      valType: 'number',\n      min: 0.1,\n      max: 2,\n      dflt: 0.5,\n      editType: 'calc',\n      description: ['Sets the minimum size (in px) of the rendered marker points, effective when', 'the `pointcloud` shows a million or more points.'].join(' ')\n    },\n    sizemax: {\n      valType: 'number',\n      min: 0.1,\n      dflt: 20,\n      editType: 'calc',\n      description: ['Sets the maximum size (in px) of the rendered marker points.', 'Effective when the `pointcloud` shows only few points.'].join(' ')\n    },\n    border: {\n      color: {\n        valType: 'color',\n        arrayOk: false,\n        editType: 'calc',\n        description: ['Sets the stroke color. It accepts a specific color.', 'If the color is not fully opaque and there are hundreds of thousands', 'of points, it may cause slower zooming and panning.'].join(' ')\n      },\n      arearatio: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 0,\n        editType: 'calc',\n        description: ['Specifies what fraction of the marker area is covered with the', 'border.'].join(' ')\n      },\n      editType: 'calc'\n    },\n    editType: 'calc'\n  },\n  transforms: undefined\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/pointcloud/attributes.js"],"names":["scatterglAttrs","require","module","exports","x","y","xy","valType","editType","description","join","indices","xbounds","ybounds","text","marker","color","arrayOk","opacity","min","max","dflt","blend","sizemin","sizemax","border","arearatio","transforms","undefined"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar scatterglAttrs = require('../scatter/attributes');\r\n\r\nmodule.exports = {\r\n    x: scatterglAttrs.x,\r\n    y: scatterglAttrs.y,\r\n    xy: {\r\n        valType: 'data_array',\r\n        editType: 'calc',\r\n        description: [\r\n            'Faster alternative to specifying `x` and `y` separately.',\r\n            'If supplied, it must be a typed `Float32Array` array that',\r\n            'represents points such that `xy[i * 2] = x[i]` and `xy[i * 2 + 1] = y[i]`'\r\n        ].join(' ')\r\n    },\r\n    indices: {\r\n        valType: 'data_array',\r\n        editType: 'calc',\r\n        description: [\r\n            'A sequential value, 0..n, supply it to avoid creating this array inside plotting.',\r\n            'If specified, it must be a typed `Int32Array` array.',\r\n            'Its length must be equal to or greater than the number of points.',\r\n            'For the best performance and memory use, create one large `indices` typed array',\r\n            'that is guaranteed to be at least as long as the largest number of points during',\r\n            'use, and reuse it on each `Plotly.restyle()` call.'\r\n        ].join(' ')\r\n    },\r\n    xbounds: {\r\n        valType: 'data_array',\r\n        editType: 'calc',\r\n        description: [\r\n            'Specify `xbounds` in the shape of `[xMin, xMax] to avoid looping through',\r\n            'the `xy` typed array. Use it in conjunction with `xy` and `ybounds` for the performance benefits.'\r\n        ].join(' ')\r\n    },\r\n    ybounds: {\r\n        valType: 'data_array',\r\n        editType: 'calc',\r\n        description: [\r\n            'Specify `ybounds` in the shape of `[yMin, yMax] to avoid looping through',\r\n            'the `xy` typed array. Use it in conjunction with `xy` and `xbounds` for the performance benefits.'\r\n        ].join(' ')\r\n    },\r\n    text: scatterglAttrs.text,\r\n    marker: {\r\n        color: {\r\n            valType: 'color',\r\n            arrayOk: false,\r\n\r\n            editType: 'calc',\r\n            description: [\r\n                'Sets the marker fill color. It accepts a specific color.',\r\n                'If the color is not fully opaque and there are hundreds of thousands',\r\n                'of points, it may cause slower zooming and panning.'\r\n            ].join('')\r\n        },\r\n        opacity: {\r\n            valType: 'number',\r\n            min: 0,\r\n            max: 1,\r\n            dflt: 1,\r\n            arrayOk: false,\r\n\r\n            editType: 'calc',\r\n            description: [\r\n                'Sets the marker opacity. The default value is `1` (fully opaque).',\r\n                'If the markers are not fully opaque and there are hundreds of thousands',\r\n                'of points, it may cause slower zooming and panning.',\r\n                'Opacity fades the color even if `blend` is left on `false` even if there',\r\n                'is no translucency effect in that case.'\r\n            ].join(' ')\r\n        },\r\n        blend: {\r\n            valType: 'boolean',\r\n            dflt: null,\r\n\r\n            editType: 'calc',\r\n            description: [\r\n                'Determines if colors are blended together for a translucency effect',\r\n                'in case `opacity` is specified as a value less then `1`.',\r\n                'Setting `blend` to `true` reduces zoom/pan',\r\n                'speed if used with large numbers of points.'\r\n            ].join(' ')\r\n        },\r\n        sizemin: {\r\n            valType: 'number',\r\n            min: 0.1,\r\n            max: 2,\r\n            dflt: 0.5,\r\n\r\n            editType: 'calc',\r\n            description: [\r\n                'Sets the minimum size (in px) of the rendered marker points, effective when',\r\n                'the `pointcloud` shows a million or more points.'\r\n            ].join(' ')\r\n        },\r\n        sizemax: {\r\n            valType: 'number',\r\n            min: 0.1,\r\n            dflt: 20,\r\n\r\n            editType: 'calc',\r\n            description: [\r\n                'Sets the maximum size (in px) of the rendered marker points.',\r\n                'Effective when the `pointcloud` shows only few points.'\r\n            ].join(' ')\r\n        },\r\n        border: {\r\n            color: {\r\n                valType: 'color',\r\n                arrayOk: false,\r\n\r\n                editType: 'calc',\r\n                description: [\r\n                    'Sets the stroke color. It accepts a specific color.',\r\n                    'If the color is not fully opaque and there are hundreds of thousands',\r\n                    'of points, it may cause slower zooming and panning.'\r\n                ].join(' ')\r\n            },\r\n            arearatio: {\r\n                valType: 'number',\r\n                min: 0,\r\n                max: 1,\r\n                dflt: 0,\r\n\r\n                editType: 'calc',\r\n                description: [\r\n                    'Specifies what fraction of the marker area is covered with the',\r\n                    'border.'\r\n                ].join(' ')\r\n            },\r\n            editType: 'calc'\r\n        },\r\n        editType: 'calc'\r\n    },\r\n    transforms: undefined\r\n};\r\n"]},"metadata":{},"sourceType":"script"}