{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  coerce('x');\n  coerce('y');\n  coerce('xbounds');\n  coerce('ybounds');\n\n  if (traceIn.xy && traceIn.xy instanceof Float32Array) {\n    traceOut.xy = traceIn.xy;\n  }\n\n  if (traceIn.indices && traceIn.indices instanceof Int32Array) {\n    traceOut.indices = traceIn.indices;\n  }\n\n  coerce('text');\n  coerce('marker.color', defaultColor);\n  coerce('marker.opacity');\n  coerce('marker.blend');\n  coerce('marker.sizemin');\n  coerce('marker.sizemax');\n  coerce('marker.border.color', defaultColor);\n  coerce('marker.border.arearatio'); // disable 1D transforms - that would defeat the purpose of this trace type, performance!\n\n  traceOut._length = null;\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/pointcloud/defaults.js"],"names":["Lib","require","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","coerce","attr","dflt","xy","Float32Array","indices","Int32Array","_length"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyD;AACtE,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOX,GAAG,CAACS,MAAJ,CAAWH,OAAX,EAAoBC,QAApB,EAA8BL,UAA9B,EAA0CQ,IAA1C,EAAgDC,IAAhD,CAAP;AACH;;AAEDF,EAAAA,MAAM,CAAC,GAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,GAAD,CAAN;AAEAA,EAAAA,MAAM,CAAC,SAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,SAAD,CAAN;;AAEA,MAAGH,OAAO,CAACM,EAAR,IAAcN,OAAO,CAACM,EAAR,YAAsBC,YAAvC,EAAqD;AACjDN,IAAAA,QAAQ,CAACK,EAAT,GAAcN,OAAO,CAACM,EAAtB;AACH;;AAED,MAAGN,OAAO,CAACQ,OAAR,IAAmBR,OAAO,CAACQ,OAAR,YAA2BC,UAAjD,EAA6D;AACzDR,IAAAA,QAAQ,CAACO,OAAT,GAAmBR,OAAO,CAACQ,OAA3B;AACH;;AAEDL,EAAAA,MAAM,CAAC,MAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,cAAD,EAAiBD,YAAjB,CAAN;AACAC,EAAAA,MAAM,CAAC,gBAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,cAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,gBAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,gBAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,qBAAD,EAAwBD,YAAxB,CAAN;AACAC,EAAAA,MAAM,CAAC,yBAAD,CAAN,CA1BsE,CA4BtE;;AACAF,EAAAA,QAAQ,CAACS,OAAT,GAAmB,IAAnB;AACH,CA9BD","sourcesContent":["'use strict';\r\n\r\nvar Lib = require('../../lib');\r\n\r\nvar attributes = require('./attributes');\r\n\r\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor) {\r\n    function coerce(attr, dflt) {\r\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\r\n    }\r\n\r\n    coerce('x');\r\n    coerce('y');\r\n\r\n    coerce('xbounds');\r\n    coerce('ybounds');\r\n\r\n    if(traceIn.xy && traceIn.xy instanceof Float32Array) {\r\n        traceOut.xy = traceIn.xy;\r\n    }\r\n\r\n    if(traceIn.indices && traceIn.indices instanceof Int32Array) {\r\n        traceOut.indices = traceIn.indices;\r\n    }\r\n\r\n    coerce('text');\r\n    coerce('marker.color', defaultColor);\r\n    coerce('marker.opacity');\r\n    coerce('marker.blend');\r\n    coerce('marker.sizemin');\r\n    coerce('marker.sizemax');\r\n    coerce('marker.border.color', defaultColor);\r\n    coerce('marker.border.arearatio');\r\n\r\n    // disable 1D transforms - that would defeat the purpose of this trace type, performance!\r\n    traceOut._length = null;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}