{"ast":null,"code":"'use strict';\n\nvar mouseChange = require('mouse-change');\n\nvar mouseWheel = require('mouse-wheel');\n\nvar mouseOffset = require('mouse-event-offset');\n\nvar cartesianConstants = require('../cartesian/constants');\n\nvar hasPassive = require('has-passive-events');\n\nmodule.exports = createCamera;\n\nfunction Camera2D(element, plot) {\n  this.element = element;\n  this.plot = plot;\n  this.mouseListener = null;\n  this.wheelListener = null;\n  this.lastInputTime = Date.now();\n  this.lastPos = [0, 0];\n  this.boxEnabled = false;\n  this.boxInited = false;\n  this.boxStart = [0, 0];\n  this.boxEnd = [0, 0];\n  this.dragStart = [0, 0];\n}\n\nfunction createCamera(scene) {\n  var element = scene.mouseContainer;\n  var plot = scene.glplot;\n  var result = new Camera2D(element, plot);\n\n  function unSetAutoRange() {\n    scene.xaxis.autorange = false;\n    scene.yaxis.autorange = false;\n  }\n\n  function getSubplotConstraint() {\n    // note: this assumes we only have one x and one y axis on this subplot\n    // when this constraint is lifted this block won't make sense\n    var constraints = scene.graphDiv._fullLayout._axisConstraintGroups;\n    var xaId = scene.xaxis._id;\n    var yaId = scene.yaxis._id;\n\n    for (var i = 0; i < constraints.length; i++) {\n      if (constraints[i][xaId] !== -1) {\n        if (constraints[i][yaId] !== -1) return true;\n        break;\n      }\n    }\n\n    return false;\n  }\n\n  result.mouseListener = mouseChange(element, handleInteraction); // enable simple touch interactions\n\n  element.addEventListener('touchstart', function (ev) {\n    var xy = mouseOffset(ev.changedTouches[0], element);\n    handleInteraction(0, xy[0], xy[1]);\n    handleInteraction(1, xy[0], xy[1]);\n    ev.preventDefault();\n  }, hasPassive ? {\n    passive: false\n  } : false);\n  element.addEventListener('touchmove', function (ev) {\n    ev.preventDefault();\n    var xy = mouseOffset(ev.changedTouches[0], element);\n    handleInteraction(1, xy[0], xy[1]);\n    ev.preventDefault();\n  }, hasPassive ? {\n    passive: false\n  } : false);\n  element.addEventListener('touchend', function (ev) {\n    handleInteraction(0, result.lastPos[0], result.lastPos[1]);\n    ev.preventDefault();\n  }, hasPassive ? {\n    passive: false\n  } : false);\n\n  function handleInteraction(buttons, x, y) {\n    var dataBox = scene.calcDataBox();\n    var viewBox = plot.viewBox;\n    var lastX = result.lastPos[0];\n    var lastY = result.lastPos[1];\n    var MINDRAG = cartesianConstants.MINDRAG * plot.pixelRatio;\n    var MINZOOM = cartesianConstants.MINZOOM * plot.pixelRatio;\n    var dx, dy;\n    x *= plot.pixelRatio;\n    y *= plot.pixelRatio; // mouseChange gives y about top; convert to about bottom\n\n    y = viewBox[3] - viewBox[1] - y;\n\n    function updateRange(i0, start, end) {\n      var range0 = Math.min(start, end);\n      var range1 = Math.max(start, end);\n\n      if (range0 !== range1) {\n        dataBox[i0] = range0;\n        dataBox[i0 + 2] = range1;\n        result.dataBox = dataBox;\n        scene.setRanges(dataBox);\n      } else {\n        scene.selectBox.selectBox = [0, 0, 1, 1];\n        scene.glplot.setDirty();\n      }\n    }\n\n    switch (scene.fullLayout.dragmode) {\n      case 'zoom':\n        if (buttons) {\n          var dataX = x / (viewBox[2] - viewBox[0]) * (dataBox[2] - dataBox[0]) + dataBox[0];\n          var dataY = y / (viewBox[3] - viewBox[1]) * (dataBox[3] - dataBox[1]) + dataBox[1];\n\n          if (!result.boxInited) {\n            result.boxStart[0] = dataX;\n            result.boxStart[1] = dataY;\n            result.dragStart[0] = x;\n            result.dragStart[1] = y;\n          }\n\n          result.boxEnd[0] = dataX;\n          result.boxEnd[1] = dataY; // we need to mark the box as initialized right away\n          // so that we can tell the start and end points apart\n\n          result.boxInited = true; // but don't actually enable the box until the cursor moves\n\n          if (!result.boxEnabled && (result.boxStart[0] !== result.boxEnd[0] || result.boxStart[1] !== result.boxEnd[1])) {\n            result.boxEnabled = true;\n          } // constrain aspect ratio if the axes require it\n\n\n          var smallDx = Math.abs(result.dragStart[0] - x) < MINZOOM;\n          var smallDy = Math.abs(result.dragStart[1] - y) < MINZOOM;\n\n          if (getSubplotConstraint() && !(smallDx && smallDy)) {\n            dx = result.boxEnd[0] - result.boxStart[0];\n            dy = result.boxEnd[1] - result.boxStart[1];\n            var dydx = (dataBox[3] - dataBox[1]) / (dataBox[2] - dataBox[0]);\n\n            if (Math.abs(dx * dydx) > Math.abs(dy)) {\n              result.boxEnd[1] = result.boxStart[1] + Math.abs(dx) * dydx * (dy >= 0 ? 1 : -1); // gl-select-box clips to the plot area bounds,\n              // which breaks the axis constraint, so don't allow\n              // this box to go out of bounds\n\n              if (result.boxEnd[1] < dataBox[1]) {\n                result.boxEnd[1] = dataBox[1];\n                result.boxEnd[0] = result.boxStart[0] + (dataBox[1] - result.boxStart[1]) / Math.abs(dydx);\n              } else if (result.boxEnd[1] > dataBox[3]) {\n                result.boxEnd[1] = dataBox[3];\n                result.boxEnd[0] = result.boxStart[0] + (dataBox[3] - result.boxStart[1]) / Math.abs(dydx);\n              }\n            } else {\n              result.boxEnd[0] = result.boxStart[0] + Math.abs(dy) / dydx * (dx >= 0 ? 1 : -1);\n\n              if (result.boxEnd[0] < dataBox[0]) {\n                result.boxEnd[0] = dataBox[0];\n                result.boxEnd[1] = result.boxStart[1] + (dataBox[0] - result.boxStart[0]) * Math.abs(dydx);\n              } else if (result.boxEnd[0] > dataBox[2]) {\n                result.boxEnd[0] = dataBox[2];\n                result.boxEnd[1] = result.boxStart[1] + (dataBox[2] - result.boxStart[0]) * Math.abs(dydx);\n              }\n            }\n          } else {\n            // otherwise clamp small changes to the origin so we get 1D zoom\n            if (smallDx) result.boxEnd[0] = result.boxStart[0];\n            if (smallDy) result.boxEnd[1] = result.boxStart[1];\n          }\n        } else if (result.boxEnabled) {\n          dx = result.boxStart[0] !== result.boxEnd[0];\n          dy = result.boxStart[1] !== result.boxEnd[1];\n\n          if (dx || dy) {\n            if (dx) {\n              updateRange(0, result.boxStart[0], result.boxEnd[0]);\n              scene.xaxis.autorange = false;\n            }\n\n            if (dy) {\n              updateRange(1, result.boxStart[1], result.boxEnd[1]);\n              scene.yaxis.autorange = false;\n            }\n\n            scene.relayoutCallback();\n          } else {\n            scene.glplot.setDirty();\n          }\n\n          result.boxEnabled = false;\n          result.boxInited = false;\n        } else if (result.boxInited) {\n          // if box was inited but button released then - reset the box\n          result.boxInited = false;\n        }\n\n        break;\n\n      case 'pan':\n        result.boxEnabled = false;\n        result.boxInited = false;\n\n        if (buttons) {\n          if (!result.panning) {\n            result.dragStart[0] = x;\n            result.dragStart[1] = y;\n          }\n\n          if (Math.abs(result.dragStart[0] - x) < MINDRAG) x = result.dragStart[0];\n          if (Math.abs(result.dragStart[1] - y) < MINDRAG) y = result.dragStart[1];\n          dx = (lastX - x) * (dataBox[2] - dataBox[0]) / (plot.viewBox[2] - plot.viewBox[0]);\n          dy = (lastY - y) * (dataBox[3] - dataBox[1]) / (plot.viewBox[3] - plot.viewBox[1]);\n          dataBox[0] += dx;\n          dataBox[2] += dx;\n          dataBox[1] += dy;\n          dataBox[3] += dy;\n          scene.setRanges(dataBox);\n          result.panning = true;\n          result.lastInputTime = Date.now();\n          unSetAutoRange();\n          scene.cameraChanged();\n          scene.handleAnnotations();\n        } else if (result.panning) {\n          result.panning = false;\n          scene.relayoutCallback();\n        }\n\n        break;\n    }\n\n    result.lastPos[0] = x;\n    result.lastPos[1] = y;\n  }\n\n  result.wheelListener = mouseWheel(element, function (dx, dy) {\n    if (!scene.scrollZoom) return false;\n    var dataBox = scene.calcDataBox();\n    var viewBox = plot.viewBox;\n    var lastX = result.lastPos[0];\n    var lastY = result.lastPos[1];\n    var scale = Math.exp(5.0 * dy / (viewBox[3] - viewBox[1]));\n    var cx = lastX / (viewBox[2] - viewBox[0]) * (dataBox[2] - dataBox[0]) + dataBox[0];\n    var cy = lastY / (viewBox[3] - viewBox[1]) * (dataBox[3] - dataBox[1]) + dataBox[1];\n    dataBox[0] = (dataBox[0] - cx) * scale + cx;\n    dataBox[2] = (dataBox[2] - cx) * scale + cx;\n    dataBox[1] = (dataBox[1] - cy) * scale + cy;\n    dataBox[3] = (dataBox[3] - cy) * scale + cy;\n    scene.setRanges(dataBox);\n    result.lastInputTime = Date.now();\n    unSetAutoRange();\n    scene.cameraChanged();\n    scene.handleAnnotations();\n    scene.relayoutCallback();\n    return true;\n  }, true);\n  return result;\n}","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/plots/gl2d/camera.js"],"names":["mouseChange","require","mouseWheel","mouseOffset","cartesianConstants","hasPassive","module","exports","createCamera","Camera2D","element","plot","mouseListener","wheelListener","lastInputTime","Date","now","lastPos","boxEnabled","boxInited","boxStart","boxEnd","dragStart","scene","mouseContainer","glplot","result","unSetAutoRange","xaxis","autorange","yaxis","getSubplotConstraint","constraints","graphDiv","_fullLayout","_axisConstraintGroups","xaId","_id","yaId","i","length","handleInteraction","addEventListener","ev","xy","changedTouches","preventDefault","passive","buttons","x","y","dataBox","calcDataBox","viewBox","lastX","lastY","MINDRAG","pixelRatio","MINZOOM","dx","dy","updateRange","i0","start","end","range0","Math","min","range1","max","setRanges","selectBox","setDirty","fullLayout","dragmode","dataX","dataY","smallDx","abs","smallDy","dydx","relayoutCallback","panning","cameraChanged","handleAnnotations","scrollZoom","scale","exp","cx","cy"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar mouseChange = require('mouse-change');\r\nvar mouseWheel = require('mouse-wheel');\r\nvar mouseOffset = require('mouse-event-offset');\r\nvar cartesianConstants = require('../cartesian/constants');\r\nvar hasPassive = require('has-passive-events');\r\n\r\nmodule.exports = createCamera;\r\n\r\nfunction Camera2D(element, plot) {\r\n    this.element = element;\r\n    this.plot = plot;\r\n    this.mouseListener = null;\r\n    this.wheelListener = null;\r\n    this.lastInputTime = Date.now();\r\n    this.lastPos = [0, 0];\r\n    this.boxEnabled = false;\r\n    this.boxInited = false;\r\n    this.boxStart = [0, 0];\r\n    this.boxEnd = [0, 0];\r\n    this.dragStart = [0, 0];\r\n}\r\n\r\n\r\nfunction createCamera(scene) {\r\n    var element = scene.mouseContainer;\r\n    var plot = scene.glplot;\r\n    var result = new Camera2D(element, plot);\r\n\r\n    function unSetAutoRange() {\r\n        scene.xaxis.autorange = false;\r\n        scene.yaxis.autorange = false;\r\n    }\r\n\r\n    function getSubplotConstraint() {\r\n        // note: this assumes we only have one x and one y axis on this subplot\r\n        // when this constraint is lifted this block won't make sense\r\n        var constraints = scene.graphDiv._fullLayout._axisConstraintGroups;\r\n        var xaId = scene.xaxis._id;\r\n        var yaId = scene.yaxis._id;\r\n        for(var i = 0; i < constraints.length; i++) {\r\n            if(constraints[i][xaId] !== -1) {\r\n                if(constraints[i][yaId] !== -1) return true;\r\n                break;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    result.mouseListener = mouseChange(element, handleInteraction);\r\n\r\n    // enable simple touch interactions\r\n    element.addEventListener('touchstart', function(ev) {\r\n        var xy = mouseOffset(ev.changedTouches[0], element);\r\n        handleInteraction(0, xy[0], xy[1]);\r\n        handleInteraction(1, xy[0], xy[1]);\r\n\r\n        ev.preventDefault();\r\n    }, hasPassive ? {passive: false} : false);\r\n    element.addEventListener('touchmove', function(ev) {\r\n        ev.preventDefault();\r\n        var xy = mouseOffset(ev.changedTouches[0], element);\r\n        handleInteraction(1, xy[0], xy[1]);\r\n\r\n        ev.preventDefault();\r\n    }, hasPassive ? {passive: false} : false);\r\n    element.addEventListener('touchend', function(ev) {\r\n        handleInteraction(0, result.lastPos[0], result.lastPos[1]);\r\n\r\n        ev.preventDefault();\r\n    }, hasPassive ? {passive: false} : false);\r\n\r\n    function handleInteraction(buttons, x, y) {\r\n        var dataBox = scene.calcDataBox();\r\n        var viewBox = plot.viewBox;\r\n\r\n        var lastX = result.lastPos[0];\r\n        var lastY = result.lastPos[1];\r\n\r\n        var MINDRAG = cartesianConstants.MINDRAG * plot.pixelRatio;\r\n        var MINZOOM = cartesianConstants.MINZOOM * plot.pixelRatio;\r\n\r\n        var dx, dy;\r\n\r\n        x *= plot.pixelRatio;\r\n        y *= plot.pixelRatio;\r\n\r\n        // mouseChange gives y about top; convert to about bottom\r\n        y = (viewBox[3] - viewBox[1]) - y;\r\n\r\n        function updateRange(i0, start, end) {\r\n            var range0 = Math.min(start, end);\r\n            var range1 = Math.max(start, end);\r\n\r\n            if(range0 !== range1) {\r\n                dataBox[i0] = range0;\r\n                dataBox[i0 + 2] = range1;\r\n                result.dataBox = dataBox;\r\n                scene.setRanges(dataBox);\r\n            } else {\r\n                scene.selectBox.selectBox = [0, 0, 1, 1];\r\n                scene.glplot.setDirty();\r\n            }\r\n        }\r\n\r\n        switch(scene.fullLayout.dragmode) {\r\n            case 'zoom':\r\n                if(buttons) {\r\n                    var dataX = x /\r\n                            (viewBox[2] - viewBox[0]) * (dataBox[2] - dataBox[0]) +\r\n                        dataBox[0];\r\n                    var dataY = y /\r\n                            (viewBox[3] - viewBox[1]) * (dataBox[3] - dataBox[1]) +\r\n                        dataBox[1];\r\n\r\n                    if(!result.boxInited) {\r\n                        result.boxStart[0] = dataX;\r\n                        result.boxStart[1] = dataY;\r\n                        result.dragStart[0] = x;\r\n                        result.dragStart[1] = y;\r\n                    }\r\n\r\n                    result.boxEnd[0] = dataX;\r\n                    result.boxEnd[1] = dataY;\r\n\r\n                    // we need to mark the box as initialized right away\r\n                    // so that we can tell the start and end points apart\r\n                    result.boxInited = true;\r\n\r\n                    // but don't actually enable the box until the cursor moves\r\n                    if(!result.boxEnabled && (\r\n                        result.boxStart[0] !== result.boxEnd[0] ||\r\n                        result.boxStart[1] !== result.boxEnd[1])\r\n                    ) {\r\n                        result.boxEnabled = true;\r\n                    }\r\n\r\n                    // constrain aspect ratio if the axes require it\r\n                    var smallDx = Math.abs(result.dragStart[0] - x) < MINZOOM;\r\n                    var smallDy = Math.abs(result.dragStart[1] - y) < MINZOOM;\r\n                    if(getSubplotConstraint() && !(smallDx && smallDy)) {\r\n                        dx = result.boxEnd[0] - result.boxStart[0];\r\n                        dy = result.boxEnd[1] - result.boxStart[1];\r\n                        var dydx = (dataBox[3] - dataBox[1]) / (dataBox[2] - dataBox[0]);\r\n\r\n                        if(Math.abs(dx * dydx) > Math.abs(dy)) {\r\n                            result.boxEnd[1] = result.boxStart[1] +\r\n                                Math.abs(dx) * dydx * (dy >= 0 ? 1 : -1);\r\n\r\n                            // gl-select-box clips to the plot area bounds,\r\n                            // which breaks the axis constraint, so don't allow\r\n                            // this box to go out of bounds\r\n                            if(result.boxEnd[1] < dataBox[1]) {\r\n                                result.boxEnd[1] = dataBox[1];\r\n                                result.boxEnd[0] = result.boxStart[0] +\r\n                                    (dataBox[1] - result.boxStart[1]) / Math.abs(dydx);\r\n                            } else if(result.boxEnd[1] > dataBox[3]) {\r\n                                result.boxEnd[1] = dataBox[3];\r\n                                result.boxEnd[0] = result.boxStart[0] +\r\n                                    (dataBox[3] - result.boxStart[1]) / Math.abs(dydx);\r\n                            }\r\n                        } else {\r\n                            result.boxEnd[0] = result.boxStart[0] +\r\n                                Math.abs(dy) / dydx * (dx >= 0 ? 1 : -1);\r\n\r\n                            if(result.boxEnd[0] < dataBox[0]) {\r\n                                result.boxEnd[0] = dataBox[0];\r\n                                result.boxEnd[1] = result.boxStart[1] +\r\n                                    (dataBox[0] - result.boxStart[0]) * Math.abs(dydx);\r\n                            } else if(result.boxEnd[0] > dataBox[2]) {\r\n                                result.boxEnd[0] = dataBox[2];\r\n                                result.boxEnd[1] = result.boxStart[1] +\r\n                                    (dataBox[2] - result.boxStart[0]) * Math.abs(dydx);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // otherwise clamp small changes to the origin so we get 1D zoom\r\n\r\n                        if(smallDx) result.boxEnd[0] = result.boxStart[0];\r\n                        if(smallDy) result.boxEnd[1] = result.boxStart[1];\r\n                    }\r\n                } else if(result.boxEnabled) {\r\n                    dx = result.boxStart[0] !== result.boxEnd[0];\r\n                    dy = result.boxStart[1] !== result.boxEnd[1];\r\n                    if(dx || dy) {\r\n                        if(dx) {\r\n                            updateRange(0, result.boxStart[0], result.boxEnd[0]);\r\n                            scene.xaxis.autorange = false;\r\n                        }\r\n                        if(dy) {\r\n                            updateRange(1, result.boxStart[1], result.boxEnd[1]);\r\n                            scene.yaxis.autorange = false;\r\n                        }\r\n                        scene.relayoutCallback();\r\n                    } else {\r\n                        scene.glplot.setDirty();\r\n                    }\r\n                    result.boxEnabled = false;\r\n                    result.boxInited = false;\r\n                } else if(result.boxInited) {\r\n                    // if box was inited but button released then - reset the box\r\n\r\n                    result.boxInited = false;\r\n                }\r\n                break;\r\n\r\n            case 'pan':\r\n                result.boxEnabled = false;\r\n                result.boxInited = false;\r\n\r\n                if(buttons) {\r\n                    if(!result.panning) {\r\n                        result.dragStart[0] = x;\r\n                        result.dragStart[1] = y;\r\n                    }\r\n\r\n                    if(Math.abs(result.dragStart[0] - x) < MINDRAG) x = result.dragStart[0];\r\n                    if(Math.abs(result.dragStart[1] - y) < MINDRAG) y = result.dragStart[1];\r\n\r\n                    dx = (lastX - x) * (dataBox[2] - dataBox[0]) /\r\n                        (plot.viewBox[2] - plot.viewBox[0]);\r\n                    dy = (lastY - y) * (dataBox[3] - dataBox[1]) /\r\n                        (plot.viewBox[3] - plot.viewBox[1]);\r\n\r\n                    dataBox[0] += dx;\r\n                    dataBox[2] += dx;\r\n                    dataBox[1] += dy;\r\n                    dataBox[3] += dy;\r\n\r\n                    scene.setRanges(dataBox);\r\n\r\n                    result.panning = true;\r\n                    result.lastInputTime = Date.now();\r\n                    unSetAutoRange();\r\n                    scene.cameraChanged();\r\n                    scene.handleAnnotations();\r\n                } else if(result.panning) {\r\n                    result.panning = false;\r\n                    scene.relayoutCallback();\r\n                }\r\n                break;\r\n        }\r\n\r\n        result.lastPos[0] = x;\r\n        result.lastPos[1] = y;\r\n    }\r\n\r\n    result.wheelListener = mouseWheel(element, function(dx, dy) {\r\n        if(!scene.scrollZoom) return false;\r\n\r\n        var dataBox = scene.calcDataBox();\r\n        var viewBox = plot.viewBox;\r\n\r\n        var lastX = result.lastPos[0];\r\n        var lastY = result.lastPos[1];\r\n\r\n        var scale = Math.exp(5.0 * dy / (viewBox[3] - viewBox[1]));\r\n\r\n        var cx = lastX /\r\n                (viewBox[2] - viewBox[0]) * (dataBox[2] - dataBox[0]) +\r\n            dataBox[0];\r\n        var cy = lastY /\r\n                (viewBox[3] - viewBox[1]) * (dataBox[3] - dataBox[1]) +\r\n            dataBox[1];\r\n\r\n        dataBox[0] = (dataBox[0] - cx) * scale + cx;\r\n        dataBox[2] = (dataBox[2] - cx) * scale + cx;\r\n        dataBox[1] = (dataBox[1] - cy) * scale + cy;\r\n        dataBox[3] = (dataBox[3] - cy) * scale + cy;\r\n\r\n        scene.setRanges(dataBox);\r\n\r\n        result.lastInputTime = Date.now();\r\n        unSetAutoRange();\r\n        scene.cameraChanged();\r\n        scene.handleAnnotations();\r\n        scene.relayoutCallback();\r\n\r\n        return true;\r\n    }, true);\r\n\r\n    return result;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}