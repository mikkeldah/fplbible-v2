{"ast":null,"code":"'use strict';\n\nvar getSubplotCalcData = require('../get_data').getSubplotCalcData;\n\nvar counterRegex = require('../../lib').counterRegex;\n\nvar createPolar = require('./polar');\n\nvar constants = require('./constants');\n\nvar attr = constants.attr;\nvar name = constants.name;\nvar counter = counterRegex(name);\nvar attributes = {};\nattributes[attr] = {\n  valType: 'subplotid',\n  dflt: name,\n  editType: 'calc',\n  description: ['Sets a reference between this trace\\'s data coordinates and', 'a polar subplot.', 'If *polar* (the default value), the data refer to `layout.polar`.', 'If *polar2*, the data refer to `layout.polar2`, and so on.'].join(' ')\n};\n\nfunction plot(gd) {\n  var fullLayout = gd._fullLayout;\n  var calcData = gd.calcdata;\n  var subplotIds = fullLayout._subplots[name];\n\n  for (var i = 0; i < subplotIds.length; i++) {\n    var id = subplotIds[i];\n    var subplotCalcData = getSubplotCalcData(calcData, name, id);\n    var subplot = fullLayout[id]._subplot;\n\n    if (!subplot) {\n      subplot = createPolar(gd, id);\n      fullLayout[id]._subplot = subplot;\n    }\n\n    subplot.plot(subplotCalcData, fullLayout, gd._promises);\n  }\n}\n\nfunction clean(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n  var oldIds = oldFullLayout._subplots[name] || [];\n\n  var hadGl = oldFullLayout._has && oldFullLayout._has('gl');\n\n  var hasGl = newFullLayout._has && newFullLayout._has('gl');\n\n  var mustCleanScene = hadGl && !hasGl;\n\n  for (var i = 0; i < oldIds.length; i++) {\n    var id = oldIds[i];\n    var oldSubplot = oldFullLayout[id]._subplot;\n\n    if (!newFullLayout[id] && !!oldSubplot) {\n      oldSubplot.framework.remove();\n      oldSubplot.layers['radial-axis-title'].remove();\n\n      for (var k in oldSubplot.clipPaths) {\n        oldSubplot.clipPaths[k].remove();\n      }\n    }\n\n    if (mustCleanScene && oldSubplot._scene) {\n      oldSubplot._scene.destroy();\n\n      oldSubplot._scene = null;\n    }\n  }\n}\n\nmodule.exports = {\n  attr: attr,\n  name: name,\n  idRoot: name,\n  idRegex: counter,\n  attrRegex: counter,\n  attributes: attributes,\n  layoutAttributes: require('./layout_attributes'),\n  supplyLayoutDefaults: require('./layout_defaults'),\n  plot: plot,\n  clean: clean,\n  toSVG: require('../cartesian').toSVG\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/plots/polar/index.js"],"names":["getSubplotCalcData","require","counterRegex","createPolar","constants","attr","name","counter","attributes","valType","dflt","editType","description","join","plot","gd","fullLayout","_fullLayout","calcData","calcdata","subplotIds","_subplots","i","length","id","subplotCalcData","subplot","_subplot","_promises","clean","newFullData","newFullLayout","oldFullData","oldFullLayout","oldIds","hadGl","_has","hasGl","mustCleanScene","oldSubplot","framework","remove","layers","k","clipPaths","_scene","destroy","module","exports","idRoot","idRegex","attrRegex","layoutAttributes","supplyLayoutDefaults","toSVG"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar getSubplotCalcData = require('../get_data').getSubplotCalcData;\r\nvar counterRegex = require('../../lib').counterRegex;\r\n\r\nvar createPolar = require('./polar');\r\nvar constants = require('./constants');\r\n\r\nvar attr = constants.attr;\r\nvar name = constants.name;\r\nvar counter = counterRegex(name);\r\n\r\nvar attributes = {};\r\nattributes[attr] = {\r\n    valType: 'subplotid',\r\n    dflt: name,\r\n    editType: 'calc',\r\n    description: [\r\n        'Sets a reference between this trace\\'s data coordinates and',\r\n        'a polar subplot.',\r\n        'If *polar* (the default value), the data refer to `layout.polar`.',\r\n        'If *polar2*, the data refer to `layout.polar2`, and so on.'\r\n    ].join(' ')\r\n};\r\n\r\nfunction plot(gd) {\r\n    var fullLayout = gd._fullLayout;\r\n    var calcData = gd.calcdata;\r\n    var subplotIds = fullLayout._subplots[name];\r\n\r\n    for(var i = 0; i < subplotIds.length; i++) {\r\n        var id = subplotIds[i];\r\n        var subplotCalcData = getSubplotCalcData(calcData, name, id);\r\n        var subplot = fullLayout[id]._subplot;\r\n\r\n        if(!subplot) {\r\n            subplot = createPolar(gd, id);\r\n            fullLayout[id]._subplot = subplot;\r\n        }\r\n\r\n        subplot.plot(subplotCalcData, fullLayout, gd._promises);\r\n    }\r\n}\r\n\r\nfunction clean(newFullData, newFullLayout, oldFullData, oldFullLayout) {\r\n    var oldIds = oldFullLayout._subplots[name] || [];\r\n    var hadGl = (oldFullLayout._has && oldFullLayout._has('gl'));\r\n    var hasGl = (newFullLayout._has && newFullLayout._has('gl'));\r\n    var mustCleanScene = hadGl && !hasGl;\r\n\r\n    for(var i = 0; i < oldIds.length; i++) {\r\n        var id = oldIds[i];\r\n        var oldSubplot = oldFullLayout[id]._subplot;\r\n\r\n        if(!newFullLayout[id] && !!oldSubplot) {\r\n            oldSubplot.framework.remove();\r\n            oldSubplot.layers['radial-axis-title'].remove();\r\n\r\n            for(var k in oldSubplot.clipPaths) {\r\n                oldSubplot.clipPaths[k].remove();\r\n            }\r\n        }\r\n\r\n        if(mustCleanScene && oldSubplot._scene) {\r\n            oldSubplot._scene.destroy();\r\n            oldSubplot._scene = null;\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    attr: attr,\r\n    name: name,\r\n    idRoot: name,\r\n    idRegex: counter,\r\n    attrRegex: counter,\r\n    attributes: attributes,\r\n    layoutAttributes: require('./layout_attributes'),\r\n    supplyLayoutDefaults: require('./layout_defaults'),\r\n    plot: plot,\r\n    clean: clean,\r\n    toSVG: require('../cartesian').toSVG\r\n};\r\n"]},"metadata":{},"sourceType":"script"}