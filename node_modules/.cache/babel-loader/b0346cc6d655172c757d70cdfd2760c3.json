{"ast":null,"code":"'use strict';\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar domainAttrs = require('../../plots/domain').attributes;\n\nvar pieAttrs = require('../pie/attributes');\n\nvar sunburstAttrs = require('../sunburst/attributes');\n\nvar treemapAttrs = require('../treemap/attributes');\n\nvar constants = require('../treemap/constants');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nmodule.exports = {\n  labels: sunburstAttrs.labels,\n  parents: sunburstAttrs.parents,\n  values: sunburstAttrs.values,\n  branchvalues: sunburstAttrs.branchvalues,\n  count: sunburstAttrs.count,\n  level: sunburstAttrs.level,\n  maxdepth: sunburstAttrs.maxdepth,\n  tiling: {\n    orientation: {\n      valType: 'enumerated',\n      values: ['v', 'h'],\n      dflt: 'h',\n      editType: 'plot',\n      description: ['When set in conjunction with `tiling.flip`, determines on', 'which side the root nodes are drawn in the chart. If', '`tiling.orientation` is *v* and `tiling.flip` is **, the root', 'nodes appear at the top. If `tiling.orientation` is *v* and', '`tiling.flip` is *y*, the root nodes appear at the bottom. If', '`tiling.orientation` is *h* and `tiling.flip` is **, the', 'root nodes appear at the left. If `tiling.orientation` is *h*', 'and `tiling.flip` is *x*, the root nodes appear at the right.'].join(' ')\n    },\n    flip: treemapAttrs.tiling.flip,\n    pad: {\n      valType: 'number',\n      min: 0,\n      dflt: 0,\n      editType: 'plot',\n      description: ['Sets the inner padding (in px).'].join(' ')\n    },\n    editType: 'calc'\n  },\n  marker: extendFlat({\n    colors: sunburstAttrs.marker.colors,\n    line: sunburstAttrs.marker.line,\n    editType: 'calc'\n  }, colorScaleAttrs('marker', {\n    colorAttr: 'colors',\n    anim: false // TODO: set to anim: true?\n\n  })),\n  leaf: sunburstAttrs.leaf,\n  pathbar: treemapAttrs.pathbar,\n  text: pieAttrs.text,\n  textinfo: sunburstAttrs.textinfo,\n  // TODO: incorporate `label` and `value` in the eventData\n  texttemplate: texttemplateAttrs({\n    editType: 'plot'\n  }, {\n    keys: constants.eventDataKeys.concat(['label', 'value'])\n  }),\n  hovertext: pieAttrs.hovertext,\n  hoverinfo: sunburstAttrs.hoverinfo,\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: constants.eventDataKeys\n  }),\n  textfont: pieAttrs.textfont,\n  insidetextfont: pieAttrs.insidetextfont,\n  outsidetextfont: treemapAttrs.outsidetextfont,\n  textposition: treemapAttrs.textposition,\n  sort: pieAttrs.sort,\n  root: sunburstAttrs.root,\n  domain: domainAttrs({\n    name: 'icicle',\n    trace: true,\n    editType: 'calc'\n  })\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/icicle/attributes.js"],"names":["hovertemplateAttrs","require","texttemplateAttrs","colorScaleAttrs","domainAttrs","attributes","pieAttrs","sunburstAttrs","treemapAttrs","constants","extendFlat","module","exports","labels","parents","values","branchvalues","count","level","maxdepth","tiling","orientation","valType","dflt","editType","description","join","flip","pad","min","marker","colors","line","colorAttr","anim","leaf","pathbar","text","textinfo","texttemplate","keys","eventDataKeys","concat","hovertext","hoverinfo","hovertemplate","textfont","insidetextfont","outsidetextfont","textposition","sort","root","domain","name","trace"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\r\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\r\n\r\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\r\nvar domainAttrs = require('../../plots/domain').attributes;\r\nvar pieAttrs = require('../pie/attributes');\r\nvar sunburstAttrs = require('../sunburst/attributes');\r\nvar treemapAttrs = require('../treemap/attributes');\r\nvar constants = require('../treemap/constants');\r\nvar extendFlat = require('../../lib/extend').extendFlat;\r\n\r\nmodule.exports = {\r\n    labels: sunburstAttrs.labels,\r\n    parents: sunburstAttrs.parents,\r\n\r\n    values: sunburstAttrs.values,\r\n    branchvalues: sunburstAttrs.branchvalues,\r\n    count: sunburstAttrs.count,\r\n\r\n    level: sunburstAttrs.level,\r\n    maxdepth: sunburstAttrs.maxdepth,\r\n\r\n    tiling: {\r\n        orientation: {\r\n            valType: 'enumerated',\r\n            values: ['v', 'h'],\r\n            dflt: 'h',\r\n            editType: 'plot',\r\n            description: [\r\n                'When set in conjunction with `tiling.flip`, determines on',\r\n                'which side the root nodes are drawn in the chart. If',\r\n                '`tiling.orientation` is *v* and `tiling.flip` is **, the root',\r\n                'nodes appear at the top. If `tiling.orientation` is *v* and',\r\n                '`tiling.flip` is *y*, the root nodes appear at the bottom. If',\r\n                '`tiling.orientation` is *h* and `tiling.flip` is **, the',\r\n                'root nodes appear at the left. If `tiling.orientation` is *h*',\r\n                'and `tiling.flip` is *x*, the root nodes appear at the right.',\r\n            ].join(' ')\r\n        },\r\n\r\n        flip: treemapAttrs.tiling.flip,\r\n\r\n        pad: {\r\n            valType: 'number',\r\n            min: 0,\r\n            dflt: 0,\r\n            editType: 'plot',\r\n            description: [\r\n                'Sets the inner padding (in px).'\r\n            ].join(' ')\r\n        },\r\n\r\n\r\n        editType: 'calc',\r\n    },\r\n\r\n    marker: extendFlat({\r\n        colors: sunburstAttrs.marker.colors,\r\n\r\n        line: sunburstAttrs.marker.line,\r\n\r\n        editType: 'calc'\r\n    },\r\n        colorScaleAttrs('marker', {\r\n            colorAttr: 'colors',\r\n            anim: false // TODO: set to anim: true?\r\n        })\r\n    ),\r\n\r\n    leaf: sunburstAttrs.leaf,\r\n\r\n    pathbar: treemapAttrs.pathbar,\r\n\r\n    text: pieAttrs.text,\r\n    textinfo: sunburstAttrs.textinfo,\r\n    // TODO: incorporate `label` and `value` in the eventData\r\n    texttemplate: texttemplateAttrs({editType: 'plot'}, {\r\n        keys: constants.eventDataKeys.concat(['label', 'value'])\r\n    }),\r\n\r\n    hovertext: pieAttrs.hovertext,\r\n    hoverinfo: sunburstAttrs.hoverinfo,\r\n    hovertemplate: hovertemplateAttrs({}, {\r\n        keys: constants.eventDataKeys\r\n    }),\r\n\r\n    textfont: pieAttrs.textfont,\r\n    insidetextfont: pieAttrs.insidetextfont,\r\n    outsidetextfont: treemapAttrs.outsidetextfont,\r\n\r\n    textposition: treemapAttrs.textposition,\r\n    sort: pieAttrs.sort,\r\n    root: sunburstAttrs.root,\r\n\r\n    domain: domainAttrs({name: 'icicle', trace: true, editType: 'calc'}),\r\n};\r\n"]},"metadata":{},"sourceType":"script"}