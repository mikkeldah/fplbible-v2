{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../color');\n\nvar isUnifiedHover = require('./helpers').isUnifiedHover;\n\nmodule.exports = function handleHoverLabelDefaults(contIn, contOut, coerce, opts) {\n  opts = opts || {};\n\n  function inheritFontAttr(attr) {\n    if (!opts.font[attr]) {\n      opts.font[attr] = contOut.legend ? contOut.legend.font[attr] : contOut.font[attr];\n    }\n  } // In unified hover, inherit from layout.legend if available or layout\n\n\n  if (contOut && isUnifiedHover(contOut.hovermode)) {\n    if (!opts.font) opts.font = {};\n    inheritFontAttr('size');\n    inheritFontAttr('family');\n    inheritFontAttr('color');\n\n    if (contOut.legend) {\n      if (!opts.bgcolor) opts.bgcolor = Color.combine(contOut.legend.bgcolor, contOut.paper_bgcolor);\n      if (!opts.bordercolor) opts.bordercolor = contOut.legend.bordercolor;\n    } else {\n      if (!opts.bgcolor) opts.bgcolor = contOut.paper_bgcolor;\n    }\n  }\n\n  coerce('hoverlabel.bgcolor', opts.bgcolor);\n  coerce('hoverlabel.bordercolor', opts.bordercolor);\n  coerce('hoverlabel.namelength', opts.namelength);\n  Lib.coerceFont(coerce, 'hoverlabel.font', opts.font);\n  coerce('hoverlabel.align', opts.align);\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/components/fx/hoverlabel_defaults.js"],"names":["Lib","require","Color","isUnifiedHover","module","exports","handleHoverLabelDefaults","contIn","contOut","coerce","opts","inheritFontAttr","attr","font","legend","hovermode","bgcolor","combine","paper_bgcolor","bordercolor","namelength","coerceFont","align"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBE,cAA1C;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,wBAAT,CAAkCC,MAAlC,EAA0CC,OAA1C,EAAmDC,MAAnD,EAA2DC,IAA3D,EAAiE;AAC9EA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AAEA,WAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,QAAG,CAACF,IAAI,CAACG,IAAL,CAAUD,IAAV,CAAJ,EAAqB;AACjBF,MAAAA,IAAI,CAACG,IAAL,CAAUD,IAAV,IAAkBJ,OAAO,CAACM,MAAR,GAAiBN,OAAO,CAACM,MAAR,CAAeD,IAAf,CAAoBD,IAApB,CAAjB,GAA6CJ,OAAO,CAACK,IAAR,CAAaD,IAAb,CAA/D;AACH;AACJ,GAP6E,CAS9E;;;AACA,MAAGJ,OAAO,IAAIL,cAAc,CAACK,OAAO,CAACO,SAAT,CAA5B,EAAiD;AAC7C,QAAG,CAACL,IAAI,CAACG,IAAT,EAAeH,IAAI,CAACG,IAAL,GAAY,EAAZ;AACfF,IAAAA,eAAe,CAAC,MAAD,CAAf;AACAA,IAAAA,eAAe,CAAC,QAAD,CAAf;AACAA,IAAAA,eAAe,CAAC,OAAD,CAAf;;AAEA,QAAGH,OAAO,CAACM,MAAX,EAAmB;AACf,UAAG,CAACJ,IAAI,CAACM,OAAT,EAAkBN,IAAI,CAACM,OAAL,GAAed,KAAK,CAACe,OAAN,CAAcT,OAAO,CAACM,MAAR,CAAeE,OAA7B,EAAsCR,OAAO,CAACU,aAA9C,CAAf;AAClB,UAAG,CAACR,IAAI,CAACS,WAAT,EAAsBT,IAAI,CAACS,WAAL,GAAmBX,OAAO,CAACM,MAAR,CAAeK,WAAlC;AACzB,KAHD,MAGO;AACH,UAAG,CAACT,IAAI,CAACM,OAAT,EAAkBN,IAAI,CAACM,OAAL,GAAeR,OAAO,CAACU,aAAvB;AACrB;AACJ;;AAEDT,EAAAA,MAAM,CAAC,oBAAD,EAAuBC,IAAI,CAACM,OAA5B,CAAN;AACAP,EAAAA,MAAM,CAAC,wBAAD,EAA2BC,IAAI,CAACS,WAAhC,CAAN;AACAV,EAAAA,MAAM,CAAC,uBAAD,EAA0BC,IAAI,CAACU,UAA/B,CAAN;AACApB,EAAAA,GAAG,CAACqB,UAAJ,CAAeZ,MAAf,EAAuB,iBAAvB,EAA0CC,IAAI,CAACG,IAA/C;AACAJ,EAAAA,MAAM,CAAC,kBAAD,EAAqBC,IAAI,CAACY,KAA1B,CAAN;AACH,CA7BD","sourcesContent":["'use strict';\r\n\r\nvar Lib = require('../../lib');\r\nvar Color = require('../color');\r\nvar isUnifiedHover = require('./helpers').isUnifiedHover;\r\n\r\nmodule.exports = function handleHoverLabelDefaults(contIn, contOut, coerce, opts) {\r\n    opts = opts || {};\r\n\r\n    function inheritFontAttr(attr) {\r\n        if(!opts.font[attr]) {\r\n            opts.font[attr] = contOut.legend ? contOut.legend.font[attr] : contOut.font[attr];\r\n        }\r\n    }\r\n\r\n    // In unified hover, inherit from layout.legend if available or layout\r\n    if(contOut && isUnifiedHover(contOut.hovermode)) {\r\n        if(!opts.font) opts.font = {};\r\n        inheritFontAttr('size');\r\n        inheritFontAttr('family');\r\n        inheritFontAttr('color');\r\n\r\n        if(contOut.legend) {\r\n            if(!opts.bgcolor) opts.bgcolor = Color.combine(contOut.legend.bgcolor, contOut.paper_bgcolor);\r\n            if(!opts.bordercolor) opts.bordercolor = contOut.legend.bordercolor;\r\n        } else {\r\n            if(!opts.bgcolor) opts.bgcolor = contOut.paper_bgcolor;\r\n        }\r\n    }\r\n\r\n    coerce('hoverlabel.bgcolor', opts.bgcolor);\r\n    coerce('hoverlabel.bordercolor', opts.bordercolor);\r\n    coerce('hoverlabel.namelength', opts.namelength);\r\n    Lib.coerceFont(coerce, 'hoverlabel.font', opts.font);\r\n    coerce('hoverlabel.align', opts.align);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}