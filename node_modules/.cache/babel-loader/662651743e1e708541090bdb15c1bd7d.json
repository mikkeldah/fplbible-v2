{"ast":null,"code":"module.exports = equals;\n\nvar EPSILON = require('./epsilon');\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0];\n  var a1 = a[1];\n  var a2 = a[2];\n  var b0 = b[0];\n  var b1 = b[1];\n  var b2 = b[2];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/gl-vec3/equals.js"],"names":["module","exports","equals","EPSILON","require","a","b","a0","a1","a2","b0","b1","b2","Math","abs","max"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,MAAT,CAAgBG,CAAhB,EAAmBC,CAAnB,EAAsB;AACpB,MAAIC,EAAE,GAAGF,CAAC,CAAC,CAAD,CAAV;AACA,MAAIG,EAAE,GAAGH,CAAC,CAAC,CAAD,CAAV;AACA,MAAII,EAAE,GAAGJ,CAAC,CAAC,CAAD,CAAV;AACA,MAAIK,EAAE,GAAGJ,CAAC,CAAC,CAAD,CAAV;AACA,MAAIK,EAAE,GAAGL,CAAC,CAAC,CAAD,CAAV;AACA,MAAIM,EAAE,GAAGN,CAAC,CAAC,CAAD,CAAV;AACA,SAAQO,IAAI,CAACC,GAAL,CAASP,EAAE,GAAGG,EAAd,KAAqBP,OAAO,GAAGU,IAAI,CAACE,GAAL,CAAS,GAAT,EAAcF,IAAI,CAACC,GAAL,CAASP,EAAT,CAAd,EAA4BM,IAAI,CAACC,GAAL,CAASJ,EAAT,CAA5B,CAA/B,IACAG,IAAI,CAACC,GAAL,CAASN,EAAE,GAAGG,EAAd,KAAqBR,OAAO,GAAGU,IAAI,CAACE,GAAL,CAAS,GAAT,EAAcF,IAAI,CAACC,GAAL,CAASN,EAAT,CAAd,EAA4BK,IAAI,CAACC,GAAL,CAASH,EAAT,CAA5B,CAD/B,IAEAE,IAAI,CAACC,GAAL,CAASL,EAAE,GAAGG,EAAd,KAAqBT,OAAO,GAAGU,IAAI,CAACE,GAAL,CAAS,GAAT,EAAcF,IAAI,CAACC,GAAL,CAASL,EAAT,CAAd,EAA4BI,IAAI,CAACC,GAAL,CAASF,EAAT,CAA5B,CAFvC;AAGD","sourcesContent":["module.exports = equals\r\n\r\nvar EPSILON = require('./epsilon')\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nfunction equals(a, b) {\r\n  var a0 = a[0]\r\n  var a1 = a[1]\r\n  var a2 = a[2]\r\n  var b0 = b[0]\r\n  var b1 = b[1]\r\n  var b2 = b[2]\r\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)))\r\n}\r\n"]},"metadata":{},"sourceType":"script"}