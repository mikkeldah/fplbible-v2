{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikke\\\\VSC\\\\fantasy-django-react\\\\fantasy-django\\\\fantasy-react-app\\\\src\\\\components\\\\statpage\\\\CheckboxGroup.js\",\n    _s = $RefreshSig$();\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckBoxGroup(props) {\n  _s();\n\n  //For the checkboxes\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    const newPref = props.getPrefFunction();\n    props.prefChange(newPref);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"stats-checkbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n        checked: state.checkedA,\n        onChange: handleChange,\n        name: \"checkedA\",\n        id: \"GKP-CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 26\n      }, this),\n      label: \"GKP\",\n      labelPlacement: \"top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n        checked: state.checkedB,\n        onChange: handleChange,\n        name: \"checkedB\",\n        id: \"DEF-CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 26\n      }, this),\n      label: \"DEF\",\n      labelPlacement: \"top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n        checked: state.checkedF,\n        onChange: handleChange,\n        name: \"checkedF\",\n        id: \"MID-CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }, this),\n      label: \"MID\",\n      labelPlacement: \"top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n      checked: state.checkedG,\n      onChange: handleChange,\n      name: \"checkedG\",\n      id: \"FWD-CB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckBoxGroup, \"VTJqYwfplfVCHKNsB+LDLr2tnXM=\");\n\n_c = CheckBoxGroup;\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 17\n}, this));\nexport default CheckBoxGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxGroup\");","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/src/components/statpage/CheckboxGroup.js"],"names":["Checkbox","FormControlLabel","useState","withStyles","green","CheckBoxGroup","props","state","setState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name","checked","newPref","getPrefFunction","prefChange","GreenCheckbox","root","color"],"mappings":"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","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useState } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nfunction CheckBoxGroup( props ) {\r\n\r\n    \r\n    //For the checkboxes\r\n    const [state, setState] = useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n        checkedG: true,\r\n      });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        const newPref = props.getPrefFunction();\r\n        props.prefChange(newPref);\r\n    };\r\n\r\n    return (\r\n        <div id=\"stats-checkbox-container\">\r\n            <FormControlLabel\r\n                control={<GreenCheckbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" id=\"GKP-CB\" />}\r\n                label=\"GKP\"\r\n                labelPlacement=\"top\"\r\n            />\r\n            <FormControlLabel\r\n                control={<GreenCheckbox checked={state.checkedB} onChange={handleChange} name=\"checkedB\" id=\"DEF-CB\" />}\r\n                label=\"DEF\"\r\n                labelPlacement=\"top\"\r\n            />\r\n            <FormControlLabel\r\n                control={<GreenCheckbox checked={state.checkedF} onChange={handleChange} name=\"checkedF\" id=\"MID-CB\" />}\r\n                label=\"MID\"\r\n                labelPlacement=\"top\"\r\n            />\r\n            <GreenCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" id=\"FWD-CB\" />\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default CheckBoxGroup;"]},"metadata":{},"sourceType":"module"}