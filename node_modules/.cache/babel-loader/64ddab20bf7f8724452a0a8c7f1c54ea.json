{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar getTraceColor = require('../scatter/get_trace_color');\n\nfunction hoverPoints(pointData, xval, yval, hovermode) {\n  var cd = pointData.cd;\n  var stash = cd[0].t;\n  var trace = cd[0].trace;\n  var xa = pointData.xa;\n  var ya = pointData.ya;\n  var x = stash.x;\n  var y = stash.y;\n  var xpx = xa.c2p(xval);\n  var ypx = ya.c2p(yval);\n  var maxDistance = pointData.distance;\n  var ids; // FIXME: make sure this is a proper way to calc search radius\n\n  if (stash.tree) {\n    var xl = xa.p2c(xpx - maxDistance);\n    var xr = xa.p2c(xpx + maxDistance);\n    var yl = ya.p2c(ypx - maxDistance);\n    var yr = ya.p2c(ypx + maxDistance);\n\n    if (hovermode === 'x') {\n      ids = stash.tree.range(Math.min(xl, xr), Math.min(ya._rl[0], ya._rl[1]), Math.max(xl, xr), Math.max(ya._rl[0], ya._rl[1]));\n    } else {\n      ids = stash.tree.range(Math.min(xl, xr), Math.min(yl, yr), Math.max(xl, xr), Math.max(yl, yr));\n    }\n  } else {\n    ids = stash.ids;\n  } // pick the id closest to the point\n  // note that point possibly may not be found\n\n\n  var id, ptx, pty, i, dx, dy, dist, dxy;\n  var minDist = maxDistance;\n\n  if (hovermode === 'x') {\n    for (i = 0; i < ids.length; i++) {\n      ptx = x[ids[i]];\n      dx = Math.abs(xa.c2p(ptx) - xpx);\n      if (trace._origX && trace._origX[i] !== undefined) dx += xa.c2p(trace._origX[i]) - xa.c2p(ptx);\n\n      if (dx < minDist) {\n        minDist = dx;\n        dy = ya.c2p(y[ids[i]]) - ypx;\n        if (trace._origY && trace._origY[i] !== undefined) dy += ya.c2p(trace._origY[i]) - ya.c2p(pty);\n        dxy = Math.sqrt(dx * dx + dy * dy);\n        id = ids[i];\n      }\n    }\n  } else {\n    for (i = ids.length - 1; i > -1; i--) {\n      ptx = x[ids[i]];\n      pty = y[ids[i]];\n      dx = xa.c2p(ptx) - xpx;\n      dy = ya.c2p(pty) - ypx;\n      dist = Math.sqrt(dx * dx + dy * dy);\n\n      if (dist < minDist) {\n        minDist = dxy = dist;\n        id = ids[i];\n      }\n    }\n  }\n\n  pointData.index = id;\n  pointData.distance = minDist;\n  pointData.dxy = dxy;\n  if (id === undefined) return [pointData];\n  return [calcHover(pointData, x, y, trace)];\n}\n\nfunction calcHover(pointData, x, y, trace) {\n  var xa = pointData.xa;\n  var ya = pointData.ya;\n  var minDist = pointData.distance;\n  var dxy = pointData.dxy;\n  var id = pointData.index; // the closest data point\n\n  var di = {\n    pointNumber: id,\n    x: x[id],\n    y: y[id]\n  }; // that is single-item arrays_to_calcdata excerpt, since we are doing it for a single point and we don't have to do it beforehead for 1e6 points\n\n  di.tx = Array.isArray(trace.text) ? trace.text[id] : trace.text;\n  di.htx = Array.isArray(trace.hovertext) ? trace.hovertext[id] : trace.hovertext;\n  di.data = Array.isArray(trace.customdata) ? trace.customdata[id] : trace.customdata;\n  di.tp = Array.isArray(trace.textposition) ? trace.textposition[id] : trace.textposition;\n  var font = trace.textfont;\n\n  if (font) {\n    di.ts = Lib.isArrayOrTypedArray(font.size) ? font.size[id] : font.size;\n    di.tc = Array.isArray(font.color) ? font.color[id] : font.color;\n    di.tf = Array.isArray(font.family) ? font.family[id] : font.family;\n  }\n\n  var marker = trace.marker;\n\n  if (marker) {\n    di.ms = Lib.isArrayOrTypedArray(marker.size) ? marker.size[id] : marker.size;\n    di.mo = Lib.isArrayOrTypedArray(marker.opacity) ? marker.opacity[id] : marker.opacity;\n    di.mx = Lib.isArrayOrTypedArray(marker.symbol) ? marker.symbol[id] : marker.symbol;\n    di.mc = Lib.isArrayOrTypedArray(marker.color) ? marker.color[id] : marker.color;\n  }\n\n  var line = marker && marker.line;\n\n  if (line) {\n    di.mlc = Array.isArray(line.color) ? line.color[id] : line.color;\n    di.mlw = Lib.isArrayOrTypedArray(line.width) ? line.width[id] : line.width;\n  }\n\n  var grad = marker && marker.gradient;\n\n  if (grad && grad.type !== 'none') {\n    di.mgt = Array.isArray(grad.type) ? grad.type[id] : grad.type;\n    di.mgc = Array.isArray(grad.color) ? grad.color[id] : grad.color;\n  }\n\n  var xp = xa.c2p(di.x, true);\n  var yp = ya.c2p(di.y, true);\n  var rad = di.mrc || 1;\n  var hoverlabel = trace.hoverlabel;\n\n  if (hoverlabel) {\n    di.hbg = Array.isArray(hoverlabel.bgcolor) ? hoverlabel.bgcolor[id] : hoverlabel.bgcolor;\n    di.hbc = Array.isArray(hoverlabel.bordercolor) ? hoverlabel.bordercolor[id] : hoverlabel.bordercolor;\n    di.hts = Lib.isArrayOrTypedArray(hoverlabel.font.size) ? hoverlabel.font.size[id] : hoverlabel.font.size;\n    di.htc = Array.isArray(hoverlabel.font.color) ? hoverlabel.font.color[id] : hoverlabel.font.color;\n    di.htf = Array.isArray(hoverlabel.font.family) ? hoverlabel.font.family[id] : hoverlabel.font.family;\n    di.hnl = Lib.isArrayOrTypedArray(hoverlabel.namelength) ? hoverlabel.namelength[id] : hoverlabel.namelength;\n  }\n\n  var hoverinfo = trace.hoverinfo;\n\n  if (hoverinfo) {\n    di.hi = Array.isArray(hoverinfo) ? hoverinfo[id] : hoverinfo;\n  }\n\n  var hovertemplate = trace.hovertemplate;\n\n  if (hovertemplate) {\n    di.ht = Array.isArray(hovertemplate) ? hovertemplate[id] : hovertemplate;\n  }\n\n  var fakeCd = {};\n  fakeCd[pointData.index] = di;\n  var origX = trace._origX;\n  var origY = trace._origY;\n  var pointData2 = Lib.extendFlat({}, pointData, {\n    color: getTraceColor(trace, di),\n    x0: xp - rad,\n    x1: xp + rad,\n    xLabelVal: origX ? origX[id] : di.x,\n    y0: yp - rad,\n    y1: yp + rad,\n    yLabelVal: origY ? origY[id] : di.y,\n    cd: fakeCd,\n    distance: minDist,\n    spikeDistance: dxy,\n    hovertemplate: di.ht\n  });\n  if (di.htx) pointData2.text = di.htx;else if (di.tx) pointData2.text = di.tx;else if (trace.text) pointData2.text = trace.text;\n  Lib.fillText(di, trace, pointData2);\n  Registry.getComponentMethod('errorbars', 'hoverInfo')(di, trace, pointData2);\n  return pointData2;\n}\n\nmodule.exports = {\n  hoverPoints: hoverPoints,\n  calcHover: calcHover\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/scattergl/hover.js"],"names":["Registry","require","Lib","getTraceColor","hoverPoints","pointData","xval","yval","hovermode","cd","stash","t","trace","xa","ya","x","y","xpx","c2p","ypx","maxDistance","distance","ids","tree","xl","p2c","xr","yl","yr","range","Math","min","_rl","max","id","ptx","pty","i","dx","dy","dist","dxy","minDist","length","abs","_origX","undefined","_origY","sqrt","index","calcHover","di","pointNumber","tx","Array","isArray","text","htx","hovertext","data","customdata","tp","textposition","font","textfont","ts","isArrayOrTypedArray","size","tc","color","tf","family","marker","ms","mo","opacity","mx","symbol","mc","line","mlc","mlw","width","grad","gradient","type","mgt","mgc","xp","yp","rad","mrc","hoverlabel","hbg","bgcolor","hbc","bordercolor","hts","htc","htf","hnl","namelength","hoverinfo","hi","hovertemplate","ht","fakeCd","origX","origY","pointData2","extendFlat","x0","x1","xLabelVal","y0","y1","yLabelVal","spikeDistance","fillText","getComponentMethod","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Registry = require('../../registry');\r\nvar Lib = require('../../lib');\r\nvar getTraceColor = require('../scatter/get_trace_color');\r\n\r\nfunction hoverPoints(pointData, xval, yval, hovermode) {\r\n    var cd = pointData.cd;\r\n    var stash = cd[0].t;\r\n    var trace = cd[0].trace;\r\n    var xa = pointData.xa;\r\n    var ya = pointData.ya;\r\n    var x = stash.x;\r\n    var y = stash.y;\r\n    var xpx = xa.c2p(xval);\r\n    var ypx = ya.c2p(yval);\r\n    var maxDistance = pointData.distance;\r\n    var ids;\r\n\r\n    // FIXME: make sure this is a proper way to calc search radius\r\n    if(stash.tree) {\r\n        var xl = xa.p2c(xpx - maxDistance);\r\n        var xr = xa.p2c(xpx + maxDistance);\r\n        var yl = ya.p2c(ypx - maxDistance);\r\n        var yr = ya.p2c(ypx + maxDistance);\r\n\r\n        if(hovermode === 'x') {\r\n            ids = stash.tree.range(\r\n                Math.min(xl, xr), Math.min(ya._rl[0], ya._rl[1]),\r\n                Math.max(xl, xr), Math.max(ya._rl[0], ya._rl[1])\r\n            );\r\n        } else {\r\n            ids = stash.tree.range(\r\n                Math.min(xl, xr), Math.min(yl, yr),\r\n                Math.max(xl, xr), Math.max(yl, yr)\r\n            );\r\n        }\r\n    } else {\r\n        ids = stash.ids;\r\n    }\r\n\r\n    // pick the id closest to the point\r\n    // note that point possibly may not be found\r\n    var id, ptx, pty, i, dx, dy, dist, dxy;\r\n\r\n    var minDist = maxDistance;\r\n    if(hovermode === 'x') {\r\n        for(i = 0; i < ids.length; i++) {\r\n            ptx = x[ids[i]];\r\n            dx = Math.abs(xa.c2p(ptx) - xpx);\r\n            if(trace._origX && trace._origX[i] !== undefined) dx += xa.c2p(trace._origX[i]) - xa.c2p(ptx);\r\n            if(dx < minDist) {\r\n                minDist = dx;\r\n                dy = ya.c2p(y[ids[i]]) - ypx;\r\n                if(trace._origY && trace._origY[i] !== undefined) dy += ya.c2p(trace._origY[i]) - ya.c2p(pty);\r\n                dxy = Math.sqrt(dx * dx + dy * dy);\r\n                id = ids[i];\r\n            }\r\n        }\r\n    } else {\r\n        for(i = ids.length - 1; i > -1; i--) {\r\n            ptx = x[ids[i]];\r\n            pty = y[ids[i]];\r\n            dx = xa.c2p(ptx) - xpx;\r\n            dy = ya.c2p(pty) - ypx;\r\n\r\n            dist = Math.sqrt(dx * dx + dy * dy);\r\n            if(dist < minDist) {\r\n                minDist = dxy = dist;\r\n                id = ids[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    pointData.index = id;\r\n    pointData.distance = minDist;\r\n    pointData.dxy = dxy;\r\n\r\n    if(id === undefined) return [pointData];\r\n\r\n    return [calcHover(pointData, x, y, trace)];\r\n}\r\n\r\nfunction calcHover(pointData, x, y, trace) {\r\n    var xa = pointData.xa;\r\n    var ya = pointData.ya;\r\n    var minDist = pointData.distance;\r\n    var dxy = pointData.dxy;\r\n    var id = pointData.index;\r\n\r\n    // the closest data point\r\n    var di = {\r\n        pointNumber: id,\r\n        x: x[id],\r\n        y: y[id]\r\n    };\r\n\r\n    // that is single-item arrays_to_calcdata excerpt, since we are doing it for a single point and we don't have to do it beforehead for 1e6 points\r\n    di.tx = Array.isArray(trace.text) ? trace.text[id] : trace.text;\r\n    di.htx = Array.isArray(trace.hovertext) ? trace.hovertext[id] : trace.hovertext;\r\n    di.data = Array.isArray(trace.customdata) ? trace.customdata[id] : trace.customdata;\r\n    di.tp = Array.isArray(trace.textposition) ? trace.textposition[id] : trace.textposition;\r\n\r\n    var font = trace.textfont;\r\n    if(font) {\r\n        di.ts = Lib.isArrayOrTypedArray(font.size) ? font.size[id] : font.size;\r\n        di.tc = Array.isArray(font.color) ? font.color[id] : font.color;\r\n        di.tf = Array.isArray(font.family) ? font.family[id] : font.family;\r\n    }\r\n\r\n    var marker = trace.marker;\r\n    if(marker) {\r\n        di.ms = Lib.isArrayOrTypedArray(marker.size) ? marker.size[id] : marker.size;\r\n        di.mo = Lib.isArrayOrTypedArray(marker.opacity) ? marker.opacity[id] : marker.opacity;\r\n        di.mx = Lib.isArrayOrTypedArray(marker.symbol) ? marker.symbol[id] : marker.symbol;\r\n        di.mc = Lib.isArrayOrTypedArray(marker.color) ? marker.color[id] : marker.color;\r\n    }\r\n\r\n    var line = marker && marker.line;\r\n    if(line) {\r\n        di.mlc = Array.isArray(line.color) ? line.color[id] : line.color;\r\n        di.mlw = Lib.isArrayOrTypedArray(line.width) ? line.width[id] : line.width;\r\n    }\r\n\r\n    var grad = marker && marker.gradient;\r\n    if(grad && grad.type !== 'none') {\r\n        di.mgt = Array.isArray(grad.type) ? grad.type[id] : grad.type;\r\n        di.mgc = Array.isArray(grad.color) ? grad.color[id] : grad.color;\r\n    }\r\n\r\n    var xp = xa.c2p(di.x, true);\r\n    var yp = ya.c2p(di.y, true);\r\n    var rad = di.mrc || 1;\r\n\r\n    var hoverlabel = trace.hoverlabel;\r\n\r\n    if(hoverlabel) {\r\n        di.hbg = Array.isArray(hoverlabel.bgcolor) ? hoverlabel.bgcolor[id] : hoverlabel.bgcolor;\r\n        di.hbc = Array.isArray(hoverlabel.bordercolor) ? hoverlabel.bordercolor[id] : hoverlabel.bordercolor;\r\n        di.hts = Lib.isArrayOrTypedArray(hoverlabel.font.size) ? hoverlabel.font.size[id] : hoverlabel.font.size;\r\n        di.htc = Array.isArray(hoverlabel.font.color) ? hoverlabel.font.color[id] : hoverlabel.font.color;\r\n        di.htf = Array.isArray(hoverlabel.font.family) ? hoverlabel.font.family[id] : hoverlabel.font.family;\r\n        di.hnl = Lib.isArrayOrTypedArray(hoverlabel.namelength) ? hoverlabel.namelength[id] : hoverlabel.namelength;\r\n    }\r\n    var hoverinfo = trace.hoverinfo;\r\n    if(hoverinfo) {\r\n        di.hi = Array.isArray(hoverinfo) ? hoverinfo[id] : hoverinfo;\r\n    }\r\n\r\n    var hovertemplate = trace.hovertemplate;\r\n    if(hovertemplate) {\r\n        di.ht = Array.isArray(hovertemplate) ? hovertemplate[id] : hovertemplate;\r\n    }\r\n\r\n    var fakeCd = {};\r\n    fakeCd[pointData.index] = di;\r\n\r\n    var origX = trace._origX;\r\n    var origY = trace._origY;\r\n\r\n    var pointData2 = Lib.extendFlat({}, pointData, {\r\n        color: getTraceColor(trace, di),\r\n\r\n        x0: xp - rad,\r\n        x1: xp + rad,\r\n        xLabelVal: origX ? origX[id] : di.x,\r\n\r\n        y0: yp - rad,\r\n        y1: yp + rad,\r\n        yLabelVal: origY ? origY[id] : di.y,\r\n\r\n        cd: fakeCd,\r\n        distance: minDist,\r\n        spikeDistance: dxy,\r\n\r\n        hovertemplate: di.ht\r\n    });\r\n\r\n    if(di.htx) pointData2.text = di.htx;\r\n    else if(di.tx) pointData2.text = di.tx;\r\n    else if(trace.text) pointData2.text = trace.text;\r\n\r\n    Lib.fillText(di, trace, pointData2);\r\n    Registry.getComponentMethod('errorbars', 'hoverInfo')(di, trace, pointData2);\r\n\r\n    return pointData2;\r\n}\r\n\r\nmodule.exports = {\r\n    hoverPoints: hoverPoints,\r\n    calcHover: calcHover\r\n};\r\n"]},"metadata":{},"sourceType":"script"}