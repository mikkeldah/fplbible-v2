{"ast":null,"code":"module.exports = rotateZ;\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateZ(out, a, b, c) {\n  var bx = b[0];\n  var by = b[1]; //Translate point to the origin\n\n  var px = a[0] - bx;\n  var py = a[1] - by;\n  var sc = Math.sin(c);\n  var cc = Math.cos(c); // perform rotation and translate to correct position\n\n  out[0] = bx + px * cc - py * sc;\n  out[1] = by + px * sc + py * cc;\n  out[2] = a[2];\n  return out;\n}","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/gl-vec3/rotateZ.js"],"names":["module","exports","rotateZ","out","a","b","c","bx","by","px","py","sc","Math","sin","cc","cos"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA8B;AAC1B,MAAIC,EAAE,GAAGF,CAAC,CAAC,CAAD,CAAV;AACA,MAAIG,EAAE,GAAGH,CAAC,CAAC,CAAD,CAAV,CAF0B,CAI1B;;AACA,MAAII,EAAE,GAAGL,CAAC,CAAC,CAAD,CAAD,GAAOG,EAAhB;AACA,MAAIG,EAAE,GAAGN,CAAC,CAAC,CAAD,CAAD,GAAOI,EAAhB;AAEA,MAAIG,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASP,CAAT,CAAT;AACA,MAAIQ,EAAE,GAAGF,IAAI,CAACG,GAAL,CAAST,CAAT,CAAT,CAT0B,CAW1B;;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASI,EAAE,GAAGE,EAAE,GAAGK,EAAV,GAAeJ,EAAE,GAAGC,EAA7B;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASK,EAAE,GAAGC,EAAE,GAAGE,EAAV,GAAeD,EAAE,GAAGI,EAA7B;AACAX,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AAEA,SAAOD,GAAP;AACH","sourcesContent":["module.exports = rotateZ;\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nfunction rotateZ(out, a, b, c){\r\n    var bx = b[0]\r\n    var by = b[1]\r\n\r\n    //Translate point to the origin\r\n    var px = a[0] - bx\r\n    var py = a[1] - by\r\n  \r\n    var sc = Math.sin(c)\r\n    var cc = Math.cos(c)\r\n\r\n    // perform rotation and translate to correct position\r\n    out[0] = bx + px * cc - py * sc\r\n    out[1] = by + px * sc + py * cc\r\n    out[2] = a[2]\r\n  \r\n    return out\r\n}\r\n"]},"metadata":{},"sourceType":"script"}