{"ast":null,"code":"'use strict';\n\nvar counterRegex = require('../../lib/regex').counter;\n\nmodule.exports = {\n  idRegex: {\n    x: counterRegex('x', '( domain)?'),\n    y: counterRegex('y', '( domain)?')\n  },\n  attrRegex: counterRegex('[xy]axis'),\n  // axis match regular expression\n  xAxisMatch: counterRegex('xaxis'),\n  yAxisMatch: counterRegex('yaxis'),\n  // pattern matching axis ids and names\n  // note that this is more permissive than counterRegex, as\n  // id2name, name2id, and cleanId accept \"x1\" etc\n  AX_ID_PATTERN: /^[xyz][0-9]*( domain)?$/,\n  AX_NAME_PATTERN: /^[xyz]axis[0-9]*$/,\n  // and for 2D subplots\n  SUBPLOT_PATTERN: /^x([0-9]*)y([0-9]*)$/,\n  HOUR_PATTERN: 'hour',\n  WEEKDAY_PATTERN: 'day of week',\n  // pixels to move mouse before you stop clamping to starting point\n  MINDRAG: 8,\n  // smallest dimension allowed for a select box\n  MINSELECT: 12,\n  // smallest dimension allowed for a zoombox\n  MINZOOM: 20,\n  // width of axis drag regions\n  DRAGGERSIZE: 20,\n  // max pixels off straight before a lasso select line counts as bent\n  BENDPX: 1.5,\n  // delay before a redraw (relayout) after smooth panning and zooming\n  REDRAWDELAY: 50,\n  // throttling limit (ms) for selectPoints calls\n  SELECTDELAY: 100,\n  // cache ID suffix for throttle\n  SELECTID: '-select',\n  // last resort axis ranges for x and y axes if we have no data\n  DFLTRANGEX: [-1, 6],\n  DFLTRANGEY: [-1, 4],\n  // Layers to keep trace types in the right order\n  // N.B. each  'unique' plot method must have its own layer\n  traceLayerClasses: ['imagelayer', 'heatmaplayer', 'contourcarpetlayer', 'contourlayer', 'funnellayer', 'waterfalllayer', 'barlayer', 'carpetlayer', 'violinlayer', 'boxlayer', 'ohlclayer', 'scattercarpetlayer', 'scatterlayer'],\n  clipOnAxisFalseQuery: ['.scatterlayer', '.barlayer', '.funnellayer', '.waterfalllayer'],\n  layerValue2layerClass: {\n    'above traces': 'above',\n    'below traces': 'below'\n  }\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/plots/cartesian/constants.js"],"names":["counterRegex","require","counter","module","exports","idRegex","x","y","attrRegex","xAxisMatch","yAxisMatch","AX_ID_PATTERN","AX_NAME_PATTERN","SUBPLOT_PATTERN","HOUR_PATTERN","WEEKDAY_PATTERN","MINDRAG","MINSELECT","MINZOOM","DRAGGERSIZE","BENDPX","REDRAWDELAY","SELECTDELAY","SELECTID","DFLTRANGEX","DFLTRANGEY","traceLayerClasses","clipOnAxisFalseQuery","layerValue2layerClass"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BC,OAA9C;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,EAAE;AACLC,IAAAA,CAAC,EAAEN,YAAY,CAAC,GAAD,EAAM,YAAN,CADV;AAELO,IAAAA,CAAC,EAAEP,YAAY,CAAC,GAAD,EAAM,YAAN;AAFV,GADI;AAMbQ,EAAAA,SAAS,EAAER,YAAY,CAAC,UAAD,CANV;AAQb;AACAS,EAAAA,UAAU,EAAET,YAAY,CAAC,OAAD,CATX;AAUbU,EAAAA,UAAU,EAAEV,YAAY,CAAC,OAAD,CAVX;AAYb;AACA;AACA;AACAW,EAAAA,aAAa,EAAE,yBAfF;AAgBbC,EAAAA,eAAe,EAAE,mBAhBJ;AAkBb;AACAC,EAAAA,eAAe,EAAE,sBAnBJ;AAqBbC,EAAAA,YAAY,EAAE,MArBD;AAsBbC,EAAAA,eAAe,EAAE,aAtBJ;AAwBb;AACAC,EAAAA,OAAO,EAAE,CAzBI;AA2Bb;AACAC,EAAAA,SAAS,EAAE,EA5BE;AA8Bb;AACAC,EAAAA,OAAO,EAAE,EA/BI;AAiCb;AACAC,EAAAA,WAAW,EAAE,EAlCA;AAoCb;AACAC,EAAAA,MAAM,EAAE,GArCK;AAuCb;AACAC,EAAAA,WAAW,EAAE,EAxCA;AA0Cb;AACAC,EAAAA,WAAW,EAAE,GA3CA;AA6Cb;AACAC,EAAAA,QAAQ,EAAE,SA9CG;AAgDb;AACAC,EAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAjDC;AAkDbC,EAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAlDC;AAoDb;AACA;AACAC,EAAAA,iBAAiB,EAAE,CACf,YADe,EAEf,cAFe,EAGf,oBAHe,EAGO,cAHP,EAIf,aAJe,EAIA,gBAJA,EAIkB,UAJlB,EAKf,aALe,EAMf,aANe,EAOf,UAPe,EAQf,WARe,EASf,oBATe,EASO,cATP,CAtDN;AAkEbC,EAAAA,oBAAoB,EAAE,CAClB,eADkB,EAElB,WAFkB,EAGlB,cAHkB,EAIlB,iBAJkB,CAlET;AAyEbC,EAAAA,qBAAqB,EAAE;AACnB,oBAAgB,OADG;AAEnB,oBAAgB;AAFG;AAzEV,CAAjB","sourcesContent":["'use strict';\r\n\r\nvar counterRegex = require('../../lib/regex').counter;\r\n\r\nmodule.exports = {\r\n    idRegex: {\r\n        x: counterRegex('x', '( domain)?'),\r\n        y: counterRegex('y', '( domain)?')\r\n    },\r\n\r\n    attrRegex: counterRegex('[xy]axis'),\r\n\r\n    // axis match regular expression\r\n    xAxisMatch: counterRegex('xaxis'),\r\n    yAxisMatch: counterRegex('yaxis'),\r\n\r\n    // pattern matching axis ids and names\r\n    // note that this is more permissive than counterRegex, as\r\n    // id2name, name2id, and cleanId accept \"x1\" etc\r\n    AX_ID_PATTERN: /^[xyz][0-9]*( domain)?$/,\r\n    AX_NAME_PATTERN: /^[xyz]axis[0-9]*$/,\r\n\r\n    // and for 2D subplots\r\n    SUBPLOT_PATTERN: /^x([0-9]*)y([0-9]*)$/,\r\n\r\n    HOUR_PATTERN: 'hour',\r\n    WEEKDAY_PATTERN: 'day of week',\r\n\r\n    // pixels to move mouse before you stop clamping to starting point\r\n    MINDRAG: 8,\r\n\r\n    // smallest dimension allowed for a select box\r\n    MINSELECT: 12,\r\n\r\n    // smallest dimension allowed for a zoombox\r\n    MINZOOM: 20,\r\n\r\n    // width of axis drag regions\r\n    DRAGGERSIZE: 20,\r\n\r\n    // max pixels off straight before a lasso select line counts as bent\r\n    BENDPX: 1.5,\r\n\r\n    // delay before a redraw (relayout) after smooth panning and zooming\r\n    REDRAWDELAY: 50,\r\n\r\n    // throttling limit (ms) for selectPoints calls\r\n    SELECTDELAY: 100,\r\n\r\n    // cache ID suffix for throttle\r\n    SELECTID: '-select',\r\n\r\n    // last resort axis ranges for x and y axes if we have no data\r\n    DFLTRANGEX: [-1, 6],\r\n    DFLTRANGEY: [-1, 4],\r\n\r\n    // Layers to keep trace types in the right order\r\n    // N.B. each  'unique' plot method must have its own layer\r\n    traceLayerClasses: [\r\n        'imagelayer',\r\n        'heatmaplayer',\r\n        'contourcarpetlayer', 'contourlayer',\r\n        'funnellayer', 'waterfalllayer', 'barlayer',\r\n        'carpetlayer',\r\n        'violinlayer',\r\n        'boxlayer',\r\n        'ohlclayer',\r\n        'scattercarpetlayer', 'scatterlayer'\r\n    ],\r\n\r\n    clipOnAxisFalseQuery: [\r\n        '.scatterlayer',\r\n        '.barlayer',\r\n        '.funnellayer',\r\n        '.waterfalllayer'\r\n    ],\r\n\r\n    layerValue2layerClass: {\r\n        'above traces': 'above',\r\n        'below traces': 'below'\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}