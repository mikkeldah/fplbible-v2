{"ast":null,"code":"'use strict';\n\nvar baseAttrs = require('../../plots/attributes');\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar colormodel = require('./constants').colormodel;\n\nvar cm = ['rgb', 'rgba', 'rgba256', 'hsl', 'hsla'];\nvar zminDesc = [];\nvar zmaxDesc = [];\n\nfor (var i = 0; i < cm.length; i++) {\n  var cr = colormodel[cm[i]];\n  zminDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zminDflt || cr.min).join(', ') + '].');\n  zmaxDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zmaxDflt || cr.max).join(', ') + '].');\n}\n\nmodule.exports = extendFlat({\n  source: {\n    valType: 'string',\n    editType: 'calc',\n    description: ['Specifies the data URI of the image to be visualized.', 'The URI consists of \"data:image/[<media subtype>][;base64],<data>\"'].join(' ')\n  },\n  z: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['A 2-dimensional array in which each element is an array of 3 or 4 numbers representing a color.'].join(' ')\n  },\n  colormodel: {\n    valType: 'enumerated',\n    values: cm,\n    editType: 'calc',\n    description: ['Color model used to map the numerical color components described in `z` into colors.', 'If `source` is specified, this attribute will be set to `rgba256`', 'otherwise it defaults to `rgb`.'].join(' ')\n  },\n  zsmooth: {\n    valType: 'enumerated',\n    values: ['fast', false],\n    dflt: false,\n    editType: 'plot',\n    description: ['Picks a smoothing algorithm used to smooth `z` data.', 'This only applies for image traces that use the `source` attribute.'].join(' ')\n  },\n  zmin: {\n    valType: 'info_array',\n    items: [{\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }],\n    editType: 'calc',\n    description: ['Array defining the lower bound for each color component.', 'Note that the default value will depend on the colormodel.', zminDesc.join(' ')].join(' ')\n  },\n  zmax: {\n    valType: 'info_array',\n    items: [{\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }],\n    editType: 'calc',\n    description: ['Array defining the higher bound for each color component.', 'Note that the default value will depend on the colormodel.', zmaxDesc.join(' ')].join(' ')\n  },\n  x0: {\n    valType: 'any',\n    dflt: 0,\n    editType: 'calc+clearAxisTypes',\n    description: 'Set the image\\'s x position.'\n  },\n  y0: {\n    valType: 'any',\n    dflt: 0,\n    editType: 'calc+clearAxisTypes',\n    description: 'Set the image\\'s y position.'\n  },\n  dx: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: 'Set the pixel\\'s horizontal size.'\n  },\n  dy: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: 'Set the pixel\\'s vertical size'\n  },\n  text: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: 'Sets the text elements associated with each z value.'\n  },\n  hovertext: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: 'Same as `text`.'\n  },\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n    flags: ['x', 'y', 'z', 'color', 'name', 'text'],\n    dflt: 'x+y+z+text+name'\n  }),\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: ['z', 'color', 'colormodel']\n  }),\n  transforms: undefined\n});","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/image/attributes.js"],"names":["baseAttrs","require","hovertemplateAttrs","extendFlat","colormodel","cm","zminDesc","zmaxDesc","i","length","cr","push","zminDflt","min","join","zmaxDflt","max","module","exports","source","valType","editType","description","z","values","zsmooth","dflt","zmin","items","zmax","x0","y0","dx","dy","text","hovertext","hoverinfo","flags","hovertemplate","keys","transforms","undefined"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar baseAttrs = require('../../plots/attributes');\r\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\r\nvar extendFlat = require('../../lib/extend').extendFlat;\r\nvar colormodel = require('./constants').colormodel;\r\n\r\nvar cm = ['rgb', 'rgba', 'rgba256', 'hsl', 'hsla'];\r\nvar zminDesc = [];\r\nvar zmaxDesc = [];\r\nfor(var i = 0; i < cm.length; i++) {\r\n    var cr = colormodel[cm[i]];\r\n    zminDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zminDflt || cr.min).join(', ') + '].');\r\n    zmaxDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zmaxDflt || cr.max).join(', ') + '].');\r\n}\r\n\r\nmodule.exports = extendFlat({\r\n    source: {\r\n        valType: 'string',\r\n        editType: 'calc',\r\n        description: [\r\n            'Specifies the data URI of the image to be visualized.',\r\n            'The URI consists of \"data:image/[<media subtype>][;base64],<data>\"'\r\n        ].join(' ')\r\n    },\r\n    z: {\r\n        valType: 'data_array',\r\n        editType: 'calc',\r\n        description: [\r\n            'A 2-dimensional array in which each element is an array of 3 or 4 numbers representing a color.',\r\n        ].join(' ')\r\n    },\r\n    colormodel: {\r\n        valType: 'enumerated',\r\n        values: cm,\r\n        editType: 'calc',\r\n        description: [\r\n            'Color model used to map the numerical color components described in `z` into colors.',\r\n            'If `source` is specified, this attribute will be set to `rgba256`',\r\n            'otherwise it defaults to `rgb`.'\r\n        ].join(' ')\r\n    },\r\n    zsmooth: {\r\n        valType: 'enumerated',\r\n        values: ['fast', false],\r\n        dflt: false,\r\n        editType: 'plot',\r\n        description: [\r\n            'Picks a smoothing algorithm used to smooth `z` data.',\r\n            'This only applies for image traces that use the `source` attribute.'\r\n        ].join(' ')\r\n    },\r\n    zmin: {\r\n        valType: 'info_array',\r\n        items: [\r\n            {valType: 'number', editType: 'calc'},\r\n            {valType: 'number', editType: 'calc'},\r\n            {valType: 'number', editType: 'calc'},\r\n            {valType: 'number', editType: 'calc'}\r\n        ],\r\n        editType: 'calc',\r\n        description: [\r\n            'Array defining the lower bound for each color component.',\r\n            'Note that the default value will depend on the colormodel.',\r\n            zminDesc.join(' ')\r\n        ].join(' ')\r\n    },\r\n    zmax: {\r\n        valType: 'info_array',\r\n        items: [\r\n            {valType: 'number', editType: 'calc'},\r\n            {valType: 'number', editType: 'calc'},\r\n            {valType: 'number', editType: 'calc'},\r\n            {valType: 'number', editType: 'calc'}\r\n        ],\r\n        editType: 'calc',\r\n        description: [\r\n            'Array defining the higher bound for each color component.',\r\n            'Note that the default value will depend on the colormodel.',\r\n            zmaxDesc.join(' ')\r\n        ].join(' ')\r\n    },\r\n    x0: {\r\n        valType: 'any',\r\n        dflt: 0,\r\n        editType: 'calc+clearAxisTypes',\r\n        description: 'Set the image\\'s x position.'\r\n    },\r\n    y0: {\r\n        valType: 'any',\r\n        dflt: 0,\r\n        editType: 'calc+clearAxisTypes',\r\n        description: 'Set the image\\'s y position.'\r\n    },\r\n    dx: {\r\n        valType: 'number',\r\n        dflt: 1,\r\n        editType: 'calc',\r\n        description: 'Set the pixel\\'s horizontal size.'\r\n    },\r\n    dy: {\r\n        valType: 'number',\r\n        dflt: 1,\r\n        editType: 'calc',\r\n        description: 'Set the pixel\\'s vertical size'\r\n    },\r\n    text: {\r\n        valType: 'data_array',\r\n        editType: 'plot',\r\n        description: 'Sets the text elements associated with each z value.'\r\n    },\r\n    hovertext: {\r\n        valType: 'data_array',\r\n        editType: 'plot',\r\n        description: 'Same as `text`.'\r\n    },\r\n    hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\r\n        flags: ['x', 'y', 'z', 'color', 'name', 'text'],\r\n        dflt: 'x+y+z+text+name'\r\n    }),\r\n    hovertemplate: hovertemplateAttrs({}, {\r\n        keys: ['z', 'color', 'colormodel']\r\n    }),\r\n\r\n    transforms: undefined\r\n});\r\n"]},"metadata":{},"sourceType":"script"}