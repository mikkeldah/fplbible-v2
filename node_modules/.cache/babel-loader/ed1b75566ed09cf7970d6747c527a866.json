{"ast":null,"code":"// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n//\n// simple linked list implementation that allows you to traverse down nodes and save positions\n//\nvar LinkedList = {\n  create: function () {\n    var my = {\n      root: {\n        root: true,\n        next: null\n      },\n      exists: function (node) {\n        if (node === null || node === my.root) return false;\n        return true;\n      },\n      isEmpty: function () {\n        return my.root.next === null;\n      },\n      getHead: function () {\n        return my.root.next;\n      },\n      insertBefore: function (node, check) {\n        var last = my.root;\n        var here = my.root.next;\n\n        while (here !== null) {\n          if (check(here)) {\n            node.prev = here.prev;\n            node.next = here;\n            here.prev.next = node;\n            here.prev = node;\n            return;\n          }\n\n          last = here;\n          here = here.next;\n        }\n\n        last.next = node;\n        node.prev = last;\n        node.next = null;\n      },\n      findTransition: function (check) {\n        var prev = my.root;\n        var here = my.root.next;\n\n        while (here !== null) {\n          if (check(here)) break;\n          prev = here;\n          here = here.next;\n        }\n\n        return {\n          before: prev === my.root ? null : prev,\n          after: here,\n          insert: function (node) {\n            node.prev = prev;\n            node.next = here;\n            prev.next = node;\n            if (here !== null) here.prev = node;\n            return node;\n          }\n        };\n      }\n    };\n    return my;\n  },\n  node: function (data) {\n    data.prev = null;\n    data.next = null;\n\n    data.remove = function () {\n      data.prev.next = data.next;\n      if (data.next) data.next.prev = data.prev;\n      data.prev = null;\n      data.next = null;\n    };\n\n    return data;\n  }\n};\nmodule.exports = LinkedList;","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/polybooljs/lib/linked-list.js"],"names":["LinkedList","create","my","root","next","exists","node","isEmpty","getHead","insertBefore","check","last","here","prev","findTransition","before","after","insert","data","remove","module","exports"],"mappings":"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","sourcesContent":["// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\r\n// MIT License\r\n// Project Home: https://github.com/voidqk/polybooljs\r\n\r\n//\r\n// simple linked list implementation that allows you to traverse down nodes and save positions\r\n//\r\n\r\nvar LinkedList = {\r\n\tcreate: function(){\r\n\t\tvar my = {\r\n\t\t\troot: { root: true, next: null },\r\n\t\t\texists: function(node){\r\n\t\t\t\tif (node === null || node === my.root)\r\n\t\t\t\t\treturn false;\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tisEmpty: function(){\r\n\t\t\t\treturn my.root.next === null;\r\n\t\t\t},\r\n\t\t\tgetHead: function(){\r\n\t\t\t\treturn my.root.next;\r\n\t\t\t},\r\n\t\t\tinsertBefore: function(node, check){\r\n\t\t\t\tvar last = my.root;\r\n\t\t\t\tvar here = my.root.next;\r\n\t\t\t\twhile (here !== null){\r\n\t\t\t\t\tif (check(here)){\r\n\t\t\t\t\t\tnode.prev = here.prev;\r\n\t\t\t\t\t\tnode.next = here;\r\n\t\t\t\t\t\there.prev.next = node;\r\n\t\t\t\t\t\there.prev = node;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlast = here;\r\n\t\t\t\t\there = here.next;\r\n\t\t\t\t}\r\n\t\t\t\tlast.next = node;\r\n\t\t\t\tnode.prev = last;\r\n\t\t\t\tnode.next = null;\r\n\t\t\t},\r\n\t\t\tfindTransition: function(check){\r\n\t\t\t\tvar prev = my.root;\r\n\t\t\t\tvar here = my.root.next;\r\n\t\t\t\twhile (here !== null){\r\n\t\t\t\t\tif (check(here))\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tprev = here;\r\n\t\t\t\t\there = here.next;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tbefore: prev === my.root ? null : prev,\r\n\t\t\t\t\tafter: here,\r\n\t\t\t\t\tinsert: function(node){\r\n\t\t\t\t\t\tnode.prev = prev;\r\n\t\t\t\t\t\tnode.next = here;\r\n\t\t\t\t\t\tprev.next = node;\r\n\t\t\t\t\t\tif (here !== null)\r\n\t\t\t\t\t\t\there.prev = node;\r\n\t\t\t\t\t\treturn node;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn my;\r\n\t},\r\n\tnode: function(data){\r\n\t\tdata.prev = null;\r\n\t\tdata.next = null;\r\n\t\tdata.remove = function(){\r\n\t\t\tdata.prev.next = data.next;\r\n\t\t\tif (data.next)\r\n\t\t\t\tdata.next.prev = data.prev;\r\n\t\t\tdata.prev = null;\r\n\t\t\tdata.next = null;\r\n\t\t};\r\n\t\treturn data;\r\n\t}\r\n};\r\n\r\nmodule.exports = LinkedList;\r\n"]},"metadata":{},"sourceType":"script"}