{"ast":null,"code":"'use strict';\n\nvar cartesianConstants = require('../../plots/cartesian/constants');\n\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar axisPlaceableObjs = require('../../constants/axis_placeable_objects');\n\nmodule.exports = templatedArray('image', {\n  visible: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'arraydraw',\n    description: ['Determines whether or not this image is visible.'].join(' ')\n  },\n  source: {\n    valType: 'string',\n    editType: 'arraydraw',\n    description: ['Specifies the URL of the image to be used.', 'The URL must be accessible from the domain where the', 'plot code is run, and can be either relative or absolute.'].join(' ')\n  },\n  layer: {\n    valType: 'enumerated',\n    values: ['below', 'above'],\n    dflt: 'above',\n    editType: 'arraydraw',\n    description: ['Specifies whether images are drawn below or above traces.', 'When `xref` and `yref` are both set to `paper`,', 'image is drawn below the entire plot area.'].join(' ')\n  },\n  sizex: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image container size horizontally.', 'The image will be sized based on the `position` value.', 'When `xref` is set to `paper`, units are sized relative', 'to the plot width.', 'When `xref` ends with ` domain`, units are sized relative', 'to the axis width.'].join(' ')\n  },\n  sizey: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image container size vertically.', 'The image will be sized based on the `position` value.', 'When `yref` is set to `paper`, units are sized relative', 'to the plot height.', 'When `yref` ends with ` domain`, units are sized relative', 'to the axis height.'].join(' ')\n  },\n  sizing: {\n    valType: 'enumerated',\n    values: ['fill', 'contain', 'stretch'],\n    dflt: 'contain',\n    editType: 'arraydraw',\n    description: ['Specifies which dimension of the image to constrain.'].join(' ')\n  },\n  opacity: {\n    valType: 'number',\n    min: 0,\n    max: 1,\n    dflt: 1,\n    editType: 'arraydraw',\n    description: 'Sets the opacity of the image.'\n  },\n  x: {\n    valType: 'any',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image\\'s x position.', 'When `xref` is set to `paper`, units are sized relative', 'to the plot height.', 'See `xref` for more info'].join(' ')\n  },\n  y: {\n    valType: 'any',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image\\'s y position.', 'When `yref` is set to `paper`, units are sized relative', 'to the plot height.', 'See `yref` for more info'].join(' ')\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['left', 'center', 'right'],\n    dflt: 'left',\n    editType: 'arraydraw',\n    description: 'Sets the anchor for the x position'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['top', 'middle', 'bottom'],\n    dflt: 'top',\n    editType: 'arraydraw',\n    description: 'Sets the anchor for the y position.'\n  },\n  xref: {\n    valType: 'enumerated',\n    values: ['paper', cartesianConstants.idRegex.x.toString()],\n    dflt: 'paper',\n    editType: 'arraydraw',\n    description: ['Sets the images\\'s x coordinate axis.', axisPlaceableObjs.axisRefDescription('x', 'left', 'right')].join(' ')\n  },\n  yref: {\n    valType: 'enumerated',\n    values: ['paper', cartesianConstants.idRegex.y.toString()],\n    dflt: 'paper',\n    editType: 'arraydraw',\n    description: ['Sets the images\\'s y coordinate axis.', axisPlaceableObjs.axisRefDescription('y', 'bottom', 'top')].join(' ')\n  },\n  editType: 'arraydraw'\n});","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/components/images/attributes.js"],"names":["cartesianConstants","require","templatedArray","axisPlaceableObjs","module","exports","visible","valType","dflt","editType","description","join","source","layer","values","sizex","sizey","sizing","opacity","min","max","x","y","xanchor","yanchor","xref","idRegex","toString","axisRefDescription","yref"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar cartesianConstants = require('../../plots/cartesian/constants');\r\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\r\nvar axisPlaceableObjs = require('../../constants/axis_placeable_objects');\r\n\r\n\r\nmodule.exports = templatedArray('image', {\r\n    visible: {\r\n        valType: 'boolean',\r\n        dflt: true,\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Determines whether or not this image is visible.'\r\n        ].join(' ')\r\n    },\r\n\r\n    source: {\r\n        valType: 'string',\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Specifies the URL of the image to be used.',\r\n            'The URL must be accessible from the domain where the',\r\n            'plot code is run, and can be either relative or absolute.'\r\n\r\n        ].join(' ')\r\n    },\r\n\r\n    layer: {\r\n        valType: 'enumerated',\r\n        values: ['below', 'above'],\r\n        dflt: 'above',\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Specifies whether images are drawn below or above traces.',\r\n            'When `xref` and `yref` are both set to `paper`,',\r\n            'image is drawn below the entire plot area.'\r\n        ].join(' ')\r\n    },\r\n\r\n    sizex: {\r\n        valType: 'number',\r\n        dflt: 0,\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Sets the image container size horizontally.',\r\n            'The image will be sized based on the `position` value.',\r\n            'When `xref` is set to `paper`, units are sized relative',\r\n            'to the plot width.',\r\n            'When `xref` ends with ` domain`, units are sized relative',\r\n            'to the axis width.',\r\n        ].join(' ')\r\n    },\r\n\r\n    sizey: {\r\n        valType: 'number',\r\n        dflt: 0,\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Sets the image container size vertically.',\r\n            'The image will be sized based on the `position` value.',\r\n            'When `yref` is set to `paper`, units are sized relative',\r\n            'to the plot height.',\r\n            'When `yref` ends with ` domain`, units are sized relative',\r\n            'to the axis height.'\r\n        ].join(' ')\r\n    },\r\n\r\n    sizing: {\r\n        valType: 'enumerated',\r\n        values: ['fill', 'contain', 'stretch'],\r\n        dflt: 'contain',\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Specifies which dimension of the image to constrain.'\r\n        ].join(' ')\r\n    },\r\n\r\n    opacity: {\r\n        valType: 'number',\r\n        min: 0,\r\n        max: 1,\r\n        dflt: 1,\r\n        editType: 'arraydraw',\r\n        description: 'Sets the opacity of the image.'\r\n    },\r\n\r\n    x: {\r\n        valType: 'any',\r\n        dflt: 0,\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Sets the image\\'s x position.',\r\n            'When `xref` is set to `paper`, units are sized relative',\r\n            'to the plot height.',\r\n            'See `xref` for more info'\r\n        ].join(' ')\r\n    },\r\n\r\n    y: {\r\n        valType: 'any',\r\n        dflt: 0,\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Sets the image\\'s y position.',\r\n            'When `yref` is set to `paper`, units are sized relative',\r\n            'to the plot height.',\r\n            'See `yref` for more info'\r\n        ].join(' ')\r\n    },\r\n\r\n    xanchor: {\r\n        valType: 'enumerated',\r\n        values: ['left', 'center', 'right'],\r\n        dflt: 'left',\r\n        editType: 'arraydraw',\r\n        description: 'Sets the anchor for the x position'\r\n    },\r\n\r\n    yanchor: {\r\n        valType: 'enumerated',\r\n        values: ['top', 'middle', 'bottom'],\r\n        dflt: 'top',\r\n        editType: 'arraydraw',\r\n        description: 'Sets the anchor for the y position.'\r\n    },\r\n\r\n    xref: {\r\n        valType: 'enumerated',\r\n        values: [\r\n            'paper',\r\n            cartesianConstants.idRegex.x.toString()\r\n        ],\r\n        dflt: 'paper',\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Sets the images\\'s x coordinate axis.',\r\n            axisPlaceableObjs.axisRefDescription('x', 'left', 'right'),\r\n        ].join(' ')\r\n    },\r\n\r\n    yref: {\r\n        valType: 'enumerated',\r\n        values: [\r\n            'paper',\r\n            cartesianConstants.idRegex.y.toString()\r\n        ],\r\n        dflt: 'paper',\r\n        editType: 'arraydraw',\r\n        description: [\r\n            'Sets the images\\'s y coordinate axis.',\r\n            axisPlaceableObjs.axisRefDescription('y', 'bottom', 'top'),\r\n        ].join(' ')\r\n    },\r\n    editType: 'arraydraw'\r\n});\r\n"]},"metadata":{},"sourceType":"script"}