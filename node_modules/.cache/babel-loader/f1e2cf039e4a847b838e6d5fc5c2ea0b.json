{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults'),\n  calc: require('./calc'),\n  plot: require('./plot'),\n  moduleType: 'trace',\n  name: 'table',\n  basePlotModule: require('./base_plot'),\n  categories: ['noOpacity'],\n  meta: {\n    description: ['Table view for detailed data viewing.', 'The data are arranged in a grid of rows and columns.', 'Most styling can be specified for columns, rows or individual cells.', 'Table is using a column-major order, ie. the grid is represented as a vector of column vectors.'].join(' ')\n  }\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/table/index.js"],"names":["module","exports","attributes","require","supplyDefaults","calc","plot","moduleType","name","basePlotModule","categories","meta","description","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,UAAU,EAAEC,OAAO,CAAC,cAAD,CADN;AAEbC,EAAAA,cAAc,EAAED,OAAO,CAAC,YAAD,CAFV;AAGbE,EAAAA,IAAI,EAAEF,OAAO,CAAC,QAAD,CAHA;AAIbG,EAAAA,IAAI,EAAEH,OAAO,CAAC,QAAD,CAJA;AAMbI,EAAAA,UAAU,EAAE,OANC;AAObC,EAAAA,IAAI,EAAE,OAPO;AAQbC,EAAAA,cAAc,EAAEN,OAAO,CAAC,aAAD,CARV;AASbO,EAAAA,UAAU,EAAE,CAAC,WAAD,CATC;AAUbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE,CACT,uCADS,EAET,sDAFS,EAGT,sEAHS,EAIT,iGAJS,EAKXC,IALW,CAKN,GALM;AADX;AAVO,CAAjB","sourcesContent":["'use strict';\r\n\r\nmodule.exports = {\r\n    attributes: require('./attributes'),\r\n    supplyDefaults: require('./defaults'),\r\n    calc: require('./calc'),\r\n    plot: require('./plot'),\r\n\r\n    moduleType: 'trace',\r\n    name: 'table',\r\n    basePlotModule: require('./base_plot'),\r\n    categories: ['noOpacity'],\r\n    meta: {\r\n        description: [\r\n            'Table view for detailed data viewing.',\r\n            'The data are arranged in a grid of rows and columns.',\r\n            'Most styling can be specified for columns, rows or individual cells.',\r\n            'Table is using a column-major order, ie. the grid is represented as a vector of column vectors.'\r\n        ].join(' ')\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}