{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  moduleType: 'trace',\n  name: 'streamtube',\n  basePlotModule: require('../../plots/gl3d'),\n  categories: ['gl3d', 'showLegend'],\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults'),\n  colorbar: {\n    min: 'cmin',\n    max: 'cmax'\n  },\n  calc: require('./calc').calc,\n  plot: require('./convert'),\n  eventData: function (out, pt) {\n    out.tubex = out.x;\n    out.tubey = out.y;\n    out.tubez = out.z;\n    out.tubeu = pt.traceCoordinate[3];\n    out.tubev = pt.traceCoordinate[4];\n    out.tubew = pt.traceCoordinate[5];\n    out.norm = pt.traceCoordinate[6];\n    out.divergence = pt.traceCoordinate[7]; // Does not correspond to input x/y/z, so delete them\n\n    delete out.x;\n    delete out.y;\n    delete out.z;\n    return out;\n  },\n  meta: {\n    description: ['Use a streamtube trace to visualize flow in a vector field.', '', 'Specify a vector field using 6 1D arrays of equal length,', '3 position arrays `x`, `y` and `z`', 'and 3 vector component arrays `u`, `v`, and `w`.', '', 'By default, the tubes\\' starting positions will be cut from the vector field\\'s', 'x-z plane at its minimum y value.', 'To specify your own starting position, use attributes `starts.x`, `starts.y`', 'and `starts.z`.', 'The color is encoded by the norm of (u, v, w), and the local radius', 'by the divergence of (u, v, w).'].join(' ')\n  }\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/streamtube/index.js"],"names":["module","exports","moduleType","name","basePlotModule","require","categories","attributes","supplyDefaults","colorbar","min","max","calc","plot","eventData","out","pt","tubex","x","tubey","y","tubez","z","tubeu","traceCoordinate","tubev","tubew","norm","divergence","meta","description","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,UAAU,EAAE,OADC;AAEbC,EAAAA,IAAI,EAAE,YAFO;AAGbC,EAAAA,cAAc,EAAEC,OAAO,CAAC,kBAAD,CAHV;AAIbC,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,YAAT,CAJC;AAMbC,EAAAA,UAAU,EAAEF,OAAO,CAAC,cAAD,CANN;AAObG,EAAAA,cAAc,EAAEH,OAAO,CAAC,YAAD,CAPV;AAQbI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,GAAG,EAAE,MADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GARG;AAYbC,EAAAA,IAAI,EAAEP,OAAO,CAAC,QAAD,CAAP,CAAkBO,IAZX;AAabC,EAAAA,IAAI,EAAER,OAAO,CAAC,WAAD,CAbA;AAcbS,EAAAA,SAAS,EAAE,UAASC,GAAT,EAAcC,EAAd,EAAkB;AACzBD,IAAAA,GAAG,CAACE,KAAJ,GAAYF,GAAG,CAACG,CAAhB;AACAH,IAAAA,GAAG,CAACI,KAAJ,GAAYJ,GAAG,CAACK,CAAhB;AACAL,IAAAA,GAAG,CAACM,KAAJ,GAAYN,GAAG,CAACO,CAAhB;AAEAP,IAAAA,GAAG,CAACQ,KAAJ,GAAYP,EAAE,CAACQ,eAAH,CAAmB,CAAnB,CAAZ;AACAT,IAAAA,GAAG,CAACU,KAAJ,GAAYT,EAAE,CAACQ,eAAH,CAAmB,CAAnB,CAAZ;AACAT,IAAAA,GAAG,CAACW,KAAJ,GAAYV,EAAE,CAACQ,eAAH,CAAmB,CAAnB,CAAZ;AAEAT,IAAAA,GAAG,CAACY,IAAJ,GAAWX,EAAE,CAACQ,eAAH,CAAmB,CAAnB,CAAX;AACAT,IAAAA,GAAG,CAACa,UAAJ,GAAiBZ,EAAE,CAACQ,eAAH,CAAmB,CAAnB,CAAjB,CAVyB,CAYzB;;AACA,WAAOT,GAAG,CAACG,CAAX;AACA,WAAOH,GAAG,CAACK,CAAX;AACA,WAAOL,GAAG,CAACO,CAAX;AAEA,WAAOP,GAAP;AACH,GAhCY;AAkCbc,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE,CACT,6DADS,EAET,EAFS,EAGT,2DAHS,EAIT,oCAJS,EAKT,kDALS,EAMT,EANS,EAOT,iFAPS,EAQT,mCARS,EAST,8EATS,EAUT,iBAVS,EAWT,qEAXS,EAYT,iCAZS,EAaXC,IAbW,CAaN,GAbM;AADX;AAlCO,CAAjB","sourcesContent":["'use strict';\r\n\r\nmodule.exports = {\r\n    moduleType: 'trace',\r\n    name: 'streamtube',\r\n    basePlotModule: require('../../plots/gl3d'),\r\n    categories: ['gl3d', 'showLegend'],\r\n\r\n    attributes: require('./attributes'),\r\n    supplyDefaults: require('./defaults'),\r\n    colorbar: {\r\n        min: 'cmin',\r\n        max: 'cmax'\r\n    },\r\n    calc: require('./calc').calc,\r\n    plot: require('./convert'),\r\n    eventData: function(out, pt) {\r\n        out.tubex = out.x;\r\n        out.tubey = out.y;\r\n        out.tubez = out.z;\r\n\r\n        out.tubeu = pt.traceCoordinate[3];\r\n        out.tubev = pt.traceCoordinate[4];\r\n        out.tubew = pt.traceCoordinate[5];\r\n\r\n        out.norm = pt.traceCoordinate[6];\r\n        out.divergence = pt.traceCoordinate[7];\r\n\r\n        // Does not correspond to input x/y/z, so delete them\r\n        delete out.x;\r\n        delete out.y;\r\n        delete out.z;\r\n\r\n        return out;\r\n    },\r\n\r\n    meta: {\r\n        description: [\r\n            'Use a streamtube trace to visualize flow in a vector field.',\r\n            '',\r\n            'Specify a vector field using 6 1D arrays of equal length,',\r\n            '3 position arrays `x`, `y` and `z`',\r\n            'and 3 vector component arrays `u`, `v`, and `w`.',\r\n            '',\r\n            'By default, the tubes\\' starting positions will be cut from the vector field\\'s',\r\n            'x-z plane at its minimum y value.',\r\n            'To specify your own starting position, use attributes `starts.x`, `starts.y`',\r\n            'and `starts.z`.',\r\n            'The color is encoded by the norm of (u, v, w), and the local radius',\r\n            'by the divergence of (u, v, w).'\r\n        ].join(' ')\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}