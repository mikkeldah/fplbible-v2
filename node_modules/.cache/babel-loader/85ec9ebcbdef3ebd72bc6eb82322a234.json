{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n/**\r\n * General helper to manage trace groups based on calcdata\r\n *\r\n * @param {d3.selection} traceLayer: a selection containing a single group\r\n *     to draw these traces into\r\n * @param {array} cdModule: array of calcdata items for this\r\n *     module and subplot combination. Assumes the calcdata item for each\r\n *     trace is an array with the fullData trace attached to the first item.\r\n * @param {string} cls: the class attribute to give each trace group\r\n *     so you can give multiple classes separated by spaces\r\n */\n\n\nmodule.exports = function makeTraceGroups(traceLayer, cdModule, cls) {\n  var traces = traceLayer.selectAll('g.' + cls.replace(/\\s/g, '.')).data(cdModule, function (cd) {\n    return cd[0].trace.uid;\n  });\n  traces.exit().remove();\n  traces.enter().append('g').attr('class', cls);\n  traces.order(); // stash ref node to trace group in calcdata,\n  // useful for (fast) styleOnSelect\n\n  var k = traceLayer.classed('rangeplot') ? 'nodeRangePlot3' : 'node3';\n  traces.each(function (cd) {\n    cd[0][k] = d3.select(this);\n  });\n  return traces;\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/lib/make_trace_groups.js"],"names":["d3","require","module","exports","makeTraceGroups","traceLayer","cdModule","cls","traces","selectAll","replace","data","cd","trace","uid","exit","remove","enter","append","attr","order","k","classed","each","select"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,YAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,GAA/C,EAAoD;AACjE,MAAIC,MAAM,GAAGH,UAAU,CAACI,SAAX,CAAqB,OAAOF,GAAG,CAACG,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAA5B,EACRC,IADQ,CACHL,QADG,EACO,UAASM,EAAT,EAAa;AAAE,WAAOA,EAAE,CAAC,CAAD,CAAF,CAAMC,KAAN,CAAYC,GAAnB;AAAyB,GAD/C,CAAb;AAGAN,EAAAA,MAAM,CAACO,IAAP,GAAcC,MAAd;AAEAR,EAAAA,MAAM,CAACS,KAAP,GAAeC,MAAf,CAAsB,GAAtB,EACKC,IADL,CACU,OADV,EACmBZ,GADnB;AAGAC,EAAAA,MAAM,CAACY,KAAP,GATiE,CAWjE;AACA;;AACA,MAAIC,CAAC,GAAGhB,UAAU,CAACiB,OAAX,CAAmB,WAAnB,IAAkC,gBAAlC,GAAqD,OAA7D;AACAd,EAAAA,MAAM,CAACe,IAAP,CAAY,UAASX,EAAT,EAAa;AAAEA,IAAAA,EAAE,CAAC,CAAD,CAAF,CAAMS,CAAN,IAAWrB,EAAE,CAACwB,MAAH,CAAU,IAAV,CAAX;AAA6B,GAAxD;AAEA,SAAOhB,MAAP;AACH,CAjBD","sourcesContent":["'use strict';\r\n\r\nvar d3 = require('@plotly/d3');\r\n\r\n/**\r\n * General helper to manage trace groups based on calcdata\r\n *\r\n * @param {d3.selection} traceLayer: a selection containing a single group\r\n *     to draw these traces into\r\n * @param {array} cdModule: array of calcdata items for this\r\n *     module and subplot combination. Assumes the calcdata item for each\r\n *     trace is an array with the fullData trace attached to the first item.\r\n * @param {string} cls: the class attribute to give each trace group\r\n *     so you can give multiple classes separated by spaces\r\n */\r\nmodule.exports = function makeTraceGroups(traceLayer, cdModule, cls) {\r\n    var traces = traceLayer.selectAll('g.' + cls.replace(/\\s/g, '.'))\r\n        .data(cdModule, function(cd) { return cd[0].trace.uid; });\r\n\r\n    traces.exit().remove();\r\n\r\n    traces.enter().append('g')\r\n        .attr('class', cls);\r\n\r\n    traces.order();\r\n\r\n    // stash ref node to trace group in calcdata,\r\n    // useful for (fast) styleOnSelect\r\n    var k = traceLayer.classed('rangeplot') ? 'nodeRangePlot3' : 'node3';\r\n    traces.each(function(cd) { cd[0][k] = d3.select(this); });\r\n\r\n    return traces;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}