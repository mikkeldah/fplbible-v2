{"ast":null,"code":"'use strict';\n\nvar colorMix = require('tinycolor2').mix;\n\nvar Lib = require('../../../lib');\n\nvar Template = require('../../../plot_api/plot_template');\n\nvar layoutAttributes = require('./axis_attributes');\n\nvar handleTypeDefaults = require('../../cartesian/type_defaults');\n\nvar handleAxisDefaults = require('../../cartesian/axis_defaults');\n\nvar axesNames = ['xaxis', 'yaxis', 'zaxis']; // TODO: hard-coded lightness fraction based on gridline default colors\n// that differ from other subplot types.\n\nvar gridLightness = 100 * (204 - 0x44) / (255 - 0x44);\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, options) {\n  var containerIn, containerOut;\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, layoutAttributes, attr, dflt);\n  }\n\n  for (var j = 0; j < axesNames.length; j++) {\n    var axName = axesNames[j];\n    containerIn = layoutIn[axName] || {};\n    containerOut = Template.newContainer(layoutOut, axName);\n    containerOut._id = axName[0] + options.scene;\n    containerOut._name = axName;\n    handleTypeDefaults(containerIn, containerOut, coerce, options);\n    handleAxisDefaults(containerIn, containerOut, coerce, {\n      font: options.font,\n      letter: axName[0],\n      data: options.data,\n      showGrid: true,\n      noTickson: true,\n      noTicklabelmode: true,\n      noTicklabelposition: true,\n      noTicklabeloverflow: true,\n      bgColor: options.bgColor,\n      calendar: options.calendar\n    }, options.fullLayout);\n    coerce('gridcolor', colorMix(containerOut.color, options.bgColor, gridLightness).toRgbString());\n    coerce('title.text', axName[0]); // shouldn't this be on-par with 2D?\n\n    containerOut.setScale = Lib.noop;\n\n    if (coerce('showspikes')) {\n      coerce('spikesides');\n      coerce('spikethickness');\n      coerce('spikecolor', containerOut.color);\n    }\n\n    coerce('showaxeslabels');\n    if (coerce('showbackground')) coerce('backgroundcolor');\n  }\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/plots/gl3d/layout/axis_defaults.js"],"names":["colorMix","require","mix","Lib","Template","layoutAttributes","handleTypeDefaults","handleAxisDefaults","axesNames","gridLightness","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","options","containerIn","containerOut","coerce","attr","dflt","j","length","axName","newContainer","_id","scene","_name","font","letter","data","showGrid","noTickson","noTicklabelmode","noTicklabelposition","noTicklabeloverflow","bgColor","calendar","fullLayout","color","toRgbString","setScale","noop"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar colorMix = require('tinycolor2').mix;\r\n\r\nvar Lib = require('../../../lib');\r\nvar Template = require('../../../plot_api/plot_template');\r\n\r\nvar layoutAttributes = require('./axis_attributes');\r\nvar handleTypeDefaults = require('../../cartesian/type_defaults');\r\nvar handleAxisDefaults = require('../../cartesian/axis_defaults');\r\n\r\nvar axesNames = ['xaxis', 'yaxis', 'zaxis'];\r\n\r\n// TODO: hard-coded lightness fraction based on gridline default colors\r\n// that differ from other subplot types.\r\nvar gridLightness = 100 * (204 - 0x44) / (255 - 0x44);\r\n\r\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, options) {\r\n    var containerIn, containerOut;\r\n\r\n    function coerce(attr, dflt) {\r\n        return Lib.coerce(containerIn, containerOut, layoutAttributes, attr, dflt);\r\n    }\r\n\r\n    for(var j = 0; j < axesNames.length; j++) {\r\n        var axName = axesNames[j];\r\n        containerIn = layoutIn[axName] || {};\r\n\r\n        containerOut = Template.newContainer(layoutOut, axName);\r\n        containerOut._id = axName[0] + options.scene;\r\n        containerOut._name = axName;\r\n\r\n        handleTypeDefaults(containerIn, containerOut, coerce, options);\r\n\r\n        handleAxisDefaults(\r\n            containerIn,\r\n            containerOut,\r\n            coerce,\r\n            {\r\n                font: options.font,\r\n                letter: axName[0],\r\n                data: options.data,\r\n                showGrid: true,\r\n                noTickson: true,\r\n                noTicklabelmode: true,\r\n                noTicklabelposition: true,\r\n                noTicklabeloverflow: true,\r\n                bgColor: options.bgColor,\r\n                calendar: options.calendar\r\n            },\r\n            options.fullLayout);\r\n\r\n        coerce('gridcolor', colorMix(containerOut.color, options.bgColor, gridLightness).toRgbString());\r\n        coerce('title.text', axName[0]);  // shouldn't this be on-par with 2D?\r\n\r\n        containerOut.setScale = Lib.noop;\r\n\r\n        if(coerce('showspikes')) {\r\n            coerce('spikesides');\r\n            coerce('spikethickness');\r\n            coerce('spikecolor', containerOut.color);\r\n        }\r\n\r\n        coerce('showaxeslabels');\r\n        if(coerce('showbackground')) coerce('backgroundcolor');\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}