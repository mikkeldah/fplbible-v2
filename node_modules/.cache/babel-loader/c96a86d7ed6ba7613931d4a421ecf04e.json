{"ast":null,"code":"\"use strict\";\n\nvar pool = require(\"typedarray-pool\");\n\nvar inverse = require(\"invert-permutation\");\n\nfunction rank(permutation) {\n  var n = permutation.length;\n\n  switch (n) {\n    case 0:\n    case 1:\n      return 0;\n\n    case 2:\n      return permutation[1];\n\n    default:\n      break;\n  }\n\n  var p = pool.mallocUint32(n);\n  var pinv = pool.mallocUint32(n);\n  var r = 0,\n      s,\n      t,\n      i;\n  inverse(permutation, pinv);\n\n  for (i = 0; i < n; ++i) {\n    p[i] = permutation[i];\n  }\n\n  for (i = n - 1; i > 0; --i) {\n    t = pinv[i];\n    s = p[i];\n    p[i] = p[t];\n    p[t] = s;\n    pinv[i] = pinv[s];\n    pinv[s] = t;\n    r = (r + s) * i;\n  }\n\n  pool.freeUint32(pinv);\n  pool.freeUint32(p);\n  return r;\n}\n\nfunction unrank(n, r, p) {\n  switch (n) {\n    case 0:\n      if (p) {\n        return p;\n      }\n\n      return [];\n\n    case 1:\n      if (p) {\n        p[0] = 0;\n        return p;\n      } else {\n        return [0];\n      }\n\n    case 2:\n      if (p) {\n        if (r) {\n          p[0] = 0;\n          p[1] = 1;\n        } else {\n          p[0] = 1;\n          p[1] = 0;\n        }\n\n        return p;\n      } else {\n        return r ? [0, 1] : [1, 0];\n      }\n\n    default:\n      break;\n  }\n\n  p = p || new Array(n);\n  var s,\n      t,\n      i,\n      nf = 1;\n  p[0] = 0;\n\n  for (i = 1; i < n; ++i) {\n    p[i] = i;\n    nf = nf * i | 0;\n  }\n\n  for (i = n - 1; i > 0; --i) {\n    s = r / nf | 0;\n    r = r - s * nf | 0;\n    nf = nf / i | 0;\n    t = p[i] | 0;\n    p[i] = p[s] | 0;\n    p[s] = t | 0;\n  }\n\n  return p;\n}\n\nexports.rank = rank;\nexports.unrank = unrank;","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/permutation-rank/index.js"],"names":["pool","require","inverse","rank","permutation","n","length","p","mallocUint32","pinv","r","s","t","i","freeUint32","unrank","Array","nf","exports"],"mappings":"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","sourcesContent":["\"use strict\"\r\n\r\nvar pool = require(\"typedarray-pool\")\r\nvar inverse = require(\"invert-permutation\")\r\n\r\nfunction rank(permutation) {\r\n  var n = permutation.length\r\n  switch(n) {\r\n    case 0:\r\n    case 1:\r\n      return 0\r\n    case 2:\r\n      return permutation[1]\r\n    default:\r\n      break\r\n  }\r\n  var p = pool.mallocUint32(n)\r\n  var pinv = pool.mallocUint32(n)\r\n  var r = 0, s, t, i\r\n  inverse(permutation, pinv)\r\n  for(i=0; i<n; ++i) {\r\n    p[i] = permutation[i]\r\n  }\r\n  for(i=n-1; i>0; --i) {\r\n    t = pinv[i]\r\n    s = p[i]\r\n    p[i] = p[t]\r\n    p[t] = s\r\n    pinv[i] = pinv[s]\r\n    pinv[s] = t\r\n    r = (r + s) * i\r\n  }\r\n  pool.freeUint32(pinv)\r\n  pool.freeUint32(p)\r\n  return r\r\n}\r\n\r\nfunction unrank(n, r, p) {\r\n  switch(n) {\r\n    case 0:\r\n      if(p) { return p }\r\n      return []\r\n    case 1:\r\n      if(p) {\r\n        p[0] = 0\r\n        return p\r\n      } else {\r\n        return [0]\r\n      }\r\n    case 2:\r\n      if(p) {\r\n        if(r) {\r\n          p[0] = 0\r\n          p[1] = 1\r\n        } else {\r\n          p[0] = 1\r\n          p[1] = 0\r\n        }\r\n        return p\r\n      } else {\r\n        return r ? [0,1] : [1,0]\r\n      }\r\n    default:\r\n      break\r\n  }\r\n  p = p || new Array(n)\r\n  var s, t, i, nf=1\r\n  p[0] = 0\r\n  for(i=1; i<n; ++i) {\r\n    p[i] = i\r\n    nf = (nf*i)|0\r\n  }\r\n  for(i=n-1; i>0; --i) {\r\n    s = (r / nf)|0\r\n    r = (r - s * nf)|0\r\n    nf = (nf / i)|0\r\n    t = p[i]|0\r\n    p[i] = p[s]|0\r\n    p[s] = t|0\r\n  }\r\n  return p\r\n}\r\n\r\nexports.rank = rank\r\nexports.unrank = unrank\r\n"]},"metadata":{},"sourceType":"script"}