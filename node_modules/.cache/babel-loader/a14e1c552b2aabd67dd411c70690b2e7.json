{"ast":null,"code":"import _slicedToArray from\"C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import Plotly from\"plotly.js\";import createPlotlyComponent from'react-plotly.js/factory';import{jsx as _jsx}from\"react/jsx-runtime\";var Plot=createPlotlyComponent(Plotly);function PlotContainer(props){var _useState=useState(getXYData(props.data,props.preferences)),_useState2=_slicedToArray(_useState,2),_useState2$=_slicedToArray(_useState2[0],7),GKPdata=_useState2$[0],DEFdata=_useState2$[1],MIDdata=_useState2$[2],FWDdata=_useState2$[3],xLabel=_useState2$[4],yLabel=_useState2$[5],text=_useState2$[6],setXYData=_useState2[1];useEffect(function(){setXYData(getXYData(props.data,props.preferences));},[props]);return/*#__PURE__*/_jsx(\"div\",{id:\"plot-container\",children:/*#__PURE__*/_jsx(Plot,{data:[/* GKP data */{x:GKPdata[0],y:GKPdata[1],type:'scatter',text:GKPdata[3],mode:'markers'+text,textposition:'top center',name:\"GKP\",marker:{size:8}},/* DEF data */{x:DEFdata[0],y:DEFdata[1],type:'scatter',text:DEFdata[2],mode:'markers'+text,textposition:'top center',name:\"DEF\",marker:{size:8}},/* MID data */{x:MIDdata[0],y:MIDdata[1],type:'scatter',text:MIDdata[2],mode:'markers'+text,textposition:'top center',name:\"MID\",marker:{size:8}},/* FWD data */{x:FWDdata[0],y:FWDdata[1],type:'scatter',text:FWDdata[2],mode:'markers'+text,textposition:'top center',name:\"FWD\",marker:{size:8}}],layout:{height:480,xaxis:{title:xLabel,autorange:true,gridcolor:'grey',linecolor:'#636363',linewidth:2},yaxis:{title:yLabel,autorange:true,gridcolor:'grey',linecolor:'#636363',linewidth:2},hovermode:'closest',plot_bgcolor:\"#222\",paper_bgcolor:\"#222\",font:{color:\"white\"}},config:{responsive:true}})});}//IMPORTANT FUNCTION: filters and returns data according to user preferences\nfunction getXYData(JSONdata,preferences){var xDataGKP=[];var yDataGKP=[];var namesGKP=[];var xDataDEF=[];var yDataDEF=[];var namesDEF=[];var xDataMID=[];var yDataMID=[];var namesMID=[];var xDataFWD=[];var yDataFWD=[];var namesFWD=[];var xLabel=preferences[0];var yLabel=preferences[1];var GKPchecked=preferences[2];var DEFchecked=preferences[3];var MIDchecked=preferences[4];var FWDchecked=preferences[5];var minMinutesPlayed=preferences[6];var maxPrice=preferences[7];var teamSelected=preferences[8];var playerAvailability=preferences[9];for(var i=0;i<JSONdata.length;i++){if(JSONdata[i]['minutes']>minMinutesPlayed&&(JSONdata[i]['price']<maxPrice||maxPrice==='')&&(JSONdata[i]['team']===teamSelected||teamSelected==='All teams')&&(JSONdata[i]['status']===playerAvailability||playerAvailability==='All')){if(JSONdata[i]['position']==='GKP'&&GKPchecked){xDataGKP.push(JSONdata[i][xLabel]);yDataGKP.push(JSONdata[i][yLabel]);namesGKP.push(JSONdata[i]['web_name']);}if(JSONdata[i]['position']==='DEF'&&DEFchecked){xDataDEF.push(JSONdata[i][xLabel]);yDataDEF.push(JSONdata[i][yLabel]);namesDEF.push(JSONdata[i]['web_name']);}if(JSONdata[i]['position']==='MID'&&MIDchecked){xDataMID.push(JSONdata[i][xLabel]);yDataMID.push(JSONdata[i][yLabel]);namesMID.push(JSONdata[i]['web_name']);}if(JSONdata[i]['position']==='FWD'&&FWDchecked){xDataFWD.push(JSONdata[i][xLabel]);yDataFWD.push(JSONdata[i][yLabel]);namesFWD.push(JSONdata[i]['web_name']);}}}var GKPdata=[xDataGKP,yDataGKP,namesGKP];var DEFdata=[xDataDEF,yDataDEF,namesDEF];var MIDdata=[xDataMID,yDataMID,namesMID];var FWDdata=[xDataFWD,yDataFWD,namesFWD];var showNames=preferences[10];var text='';if(showNames==='Always'){text='+text';}return[GKPdata,DEFdata,MIDdata,FWDdata,xLabel,yLabel,text];}export default PlotContainer;","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/src/components/statpage/PlotContainer.js"],"names":["useState","useEffect","Plotly","createPlotlyComponent","Plot","PlotContainer","props","getXYData","data","preferences","GKPdata","DEFdata","MIDdata","FWDdata","xLabel","yLabel","text","setXYData","x","y","type","mode","textposition","name","marker","size","height","xaxis","title","autorange","gridcolor","linecolor","linewidth","yaxis","hovermode","plot_bgcolor","paper_bgcolor","font","color","responsive","JSONdata","xDataGKP","yDataGKP","namesGKP","xDataDEF","yDataDEF","namesDEF","xDataMID","yDataMID","namesMID","xDataFWD","yDataFWD","namesFWD","GKPchecked","DEFchecked","MIDchecked","FWDchecked","minMinutesPlayed","maxPrice","teamSelected","playerAvailability","i","length","push","showNames"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Plotly from \"plotly.js\";\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nfunction PlotContainer(props) {\r\n\r\n    const [[ GKPdata, DEFdata, MIDdata, FWDdata, xLabel, yLabel, text ], setXYData ] = useState(getXYData(props.data, props.preferences))\r\n\r\n    useEffect(() => {\r\n        setXYData(getXYData(props.data, props.preferences))\r\n    }, [props])\r\n\r\n    return (\r\n        <div id=\"plot-container\">\r\n                <Plot \r\n                    data={[\r\n                        /* GKP data */ \r\n                        {\r\n                            x: GKPdata[0],\r\n                            y: GKPdata[1],\r\n                            type: 'scatter',\r\n                            text: GKPdata[3],\r\n                            mode: 'markers'+text,\r\n                            textposition: 'top center',\r\n                            name: \"GKP\",\r\n                            marker: { size: 8 },\r\n                        },\r\n                        /* DEF data */ \r\n                        {\r\n                            x: DEFdata[0],\r\n                            y: DEFdata[1],\r\n                            type: 'scatter',\r\n                            text: DEFdata[2],\r\n                            mode: 'markers'+text,\r\n                            textposition: 'top center',\r\n                            name: \"DEF\",\r\n                            marker: { size: 8 },\r\n                        },\r\n                        /* MID data */ \r\n                        {\r\n                            x: MIDdata[0],\r\n                            y: MIDdata[1],\r\n                            type: 'scatter',\r\n                            text: MIDdata[2],\r\n                            mode: 'markers'+text,\r\n                            textposition: 'top center',\r\n                            name: \"MID\",\r\n                            marker: { size: 8 },\r\n                        },\r\n                        /* FWD data */ \r\n                        {\r\n                            x: FWDdata[0],\r\n                            y: FWDdata[1],\r\n                            type: 'scatter',\r\n                            text: FWDdata[2],\r\n                            mode: 'markers'+text,\r\n                            textposition: 'top center',\r\n                            name: \"FWD\",\r\n                            marker: { size: 8 },\r\n                        },\r\n                    ]}\r\n                    layout={ {\r\n                        height: 480,\r\n                        xaxis: {\r\n                            title: xLabel,\r\n                            autorange: true,\r\n                            gridcolor: 'grey',\r\n                            linecolor: '#636363',\r\n                            linewidth: 2\r\n                        },\r\n                        yaxis: {\r\n                            title: yLabel,\r\n                            autorange: true,\r\n                            gridcolor: 'grey',\r\n                            linecolor: '#636363',\r\n                            linewidth: 2\r\n                        },\r\n                        hovermode: 'closest',\r\n                        plot_bgcolor:\"#222\",\r\n                        paper_bgcolor:\"#222\",\r\n                        font: {\r\n                            color: \"white\",\r\n                        }\r\n                    }}\r\n                    config = {{responsive: true}}\r\n                />\r\n            </div>\r\n    )\r\n}\r\n\r\n//IMPORTANT FUNCTION: filters and returns data according to user preferences\r\nfunction getXYData(JSONdata, preferences) {\r\n    let xDataGKP = []\r\n    let yDataGKP = []\r\n    let namesGKP = []\r\n\r\n    let xDataDEF = []\r\n    let yDataDEF = []\r\n    let namesDEF = []\r\n\r\n    let xDataMID = []\r\n    let yDataMID = []\r\n    let namesMID = []\r\n\r\n    let xDataFWD = []\r\n    let yDataFWD = []\r\n    let namesFWD = []\r\n\r\n    const xLabel = preferences[0]\r\n    const yLabel = preferences[1]\r\n\r\n    const GKPchecked = preferences[2]\r\n    const DEFchecked = preferences[3]\r\n    const MIDchecked = preferences[4]\r\n    const FWDchecked = preferences[5]\r\n\r\n    const  minMinutesPlayed = preferences[6]\r\n    \r\n    const maxPrice = preferences[7]\r\n\r\n    const teamSelected = preferences[8]\r\n\r\n    const playerAvailability = preferences[9]\r\n\r\n    for (let i = 0; i < JSONdata.length; i++) {\r\n        if ( (JSONdata[i]['minutes'] > minMinutesPlayed) && (JSONdata[i]['price'] < maxPrice || maxPrice === '') && (JSONdata[i]['team'] === teamSelected || teamSelected === 'All teams')\r\n            && (JSONdata[i]['status'] === playerAvailability || playerAvailability === 'All')) {\r\n            if (JSONdata[i]['position'] === 'GKP' && GKPchecked) {\r\n                xDataGKP.push(JSONdata[i][xLabel])\r\n                yDataGKP.push(JSONdata[i][yLabel])\r\n                namesGKP.push(JSONdata[i]['web_name'])\r\n\r\n            }\r\n            if (JSONdata[i]['position'] === 'DEF' && DEFchecked) {\r\n                xDataDEF.push(JSONdata[i][xLabel])\r\n                yDataDEF.push(JSONdata[i][yLabel])\r\n                namesDEF.push(JSONdata[i]['web_name'])\r\n\r\n            }\r\n            if (JSONdata[i]['position'] === 'MID' && MIDchecked) {\r\n                xDataMID.push(JSONdata[i][xLabel])\r\n                yDataMID.push(JSONdata[i][yLabel])\r\n                namesMID.push(JSONdata[i]['web_name'])\r\n\r\n            }\r\n            if (JSONdata[i]['position'] === 'FWD' && FWDchecked) {\r\n                xDataFWD.push(JSONdata[i][xLabel])\r\n                yDataFWD.push(JSONdata[i][yLabel])\r\n                namesFWD.push(JSONdata[i]['web_name'])\r\n\r\n            }\r\n            \r\n\r\n\r\n        }\r\n    }\r\n\r\n    const GKPdata = [xDataGKP, yDataGKP, namesGKP]\r\n    const DEFdata = [xDataDEF, yDataDEF, namesDEF]\r\n    const MIDdata = [xDataMID, yDataMID, namesMID]\r\n    const FWDdata = [xDataFWD, yDataFWD, namesFWD]\r\n\r\n    const showNames = preferences[10]\r\n\r\n    let text = ''\r\n\r\n    if (showNames === 'Always') {\r\n        text = '+text';\r\n    }\r\n    \r\n\r\n    return [GKPdata, DEFdata, MIDdata, FWDdata, xLabel, yLabel, text];\r\n}\r\n\r\nexport default PlotContainer;"]},"metadata":{},"sourceType":"module"}