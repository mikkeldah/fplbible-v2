{"ast":null,"code":"'use strict';\n\nvar createMesh = require('gl-mesh3d');\n\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\n\nvar str2RgbaArray = require('../../lib/str2rgbarray');\n\nvar extractOpts = require('../../components/colorscale').extractOpts;\n\nvar zip3 = require('../../plots/gl3d/zip3');\n\nvar findNearestOnAxis = function (w, arr) {\n  for (var q = arr.length - 1; q > 0; q--) {\n    var min = Math.min(arr[q], arr[q - 1]);\n    var max = Math.max(arr[q], arr[q - 1]);\n\n    if (max > min && min < w && w <= max) {\n      return {\n        id: q,\n        distRatio: (max - w) / (max - min)\n      };\n    }\n  }\n\n  return {\n    id: 0,\n    distRatio: 0\n  };\n};\n\nfunction IsosurfaceTrace(scene, mesh, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.mesh = mesh;\n  this.name = '';\n  this.data = null;\n  this.showContour = false;\n}\n\nvar proto = IsosurfaceTrace.prototype;\n\nproto.handlePick = function (selection) {\n  if (selection.object === this.mesh) {\n    var rawId = selection.data.index;\n    var x = this.data._meshX[rawId];\n    var y = this.data._meshY[rawId];\n    var z = this.data._meshZ[rawId];\n    var height = this.data._Ys.length;\n    var depth = this.data._Zs.length;\n    var i = findNearestOnAxis(x, this.data._Xs).id;\n    var j = findNearestOnAxis(y, this.data._Ys).id;\n    var k = findNearestOnAxis(z, this.data._Zs).id;\n    var selectIndex = selection.index = k + depth * j + depth * height * i;\n    selection.traceCoordinate = [this.data._meshX[selectIndex], this.data._meshY[selectIndex], this.data._meshZ[selectIndex], this.data._value[selectIndex]];\n    var text = this.data.hovertext || this.data.text;\n\n    if (Array.isArray(text) && text[selectIndex] !== undefined) {\n      selection.textLabel = text[selectIndex];\n    } else if (text) {\n      selection.textLabel = text;\n    }\n\n    return true;\n  }\n};\n\nproto.update = function (data) {\n  var scene = this.scene;\n  var layout = scene.fullSceneLayout;\n  this.data = generateIsoMeshes(data); // Unpack position data\n\n  function toDataCoords(axis, coord, scale, calendar) {\n    return coord.map(function (x) {\n      return axis.d2l(x, 0, calendar) * scale;\n    });\n  }\n\n  var positions = zip3(toDataCoords(layout.xaxis, data._meshX, scene.dataScale[0], data.xcalendar), toDataCoords(layout.yaxis, data._meshY, scene.dataScale[1], data.ycalendar), toDataCoords(layout.zaxis, data._meshZ, scene.dataScale[2], data.zcalendar));\n  var cells = zip3(data._meshI, data._meshJ, data._meshK);\n  var config = {\n    positions: positions,\n    cells: cells,\n    lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n    ambient: data.lighting.ambient,\n    diffuse: data.lighting.diffuse,\n    specular: data.lighting.specular,\n    roughness: data.lighting.roughness,\n    fresnel: data.lighting.fresnel,\n    vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n    faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n    opacity: data.opacity,\n    contourEnable: data.contour.show,\n    contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n    contourWidth: data.contour.width,\n    useFacetNormals: data.flatshading\n  };\n  var cOpts = extractOpts(data);\n  config.vertexIntensity = data._meshIntensity;\n  config.vertexIntensityBounds = [cOpts.min, cOpts.max];\n  config.colormap = parseColorScale(data); // Update mesh\n\n  this.mesh.update(config);\n};\n\nproto.dispose = function () {\n  this.scene.glplot.remove(this.mesh);\n  this.mesh.dispose();\n};\n\nvar GRID_TYPES = ['xyz', 'xzy', 'yxz', 'yzx', 'zxy', 'zyx'];\n\nfunction generateIsoMeshes(data) {\n  data._meshI = [];\n  data._meshJ = [];\n  data._meshK = [];\n  var showSurface = data.surface.show;\n  var showSpaceframe = data.spaceframe.show;\n  var surfaceFill = data.surface.fill;\n  var spaceframeFill = data.spaceframe.fill;\n  var drawingSurface = false;\n  var drawingSpaceframe = false;\n  var numFaces = 0;\n  var numVertices;\n  var beginVertextLength;\n  var Xs = data._Xs;\n  var Ys = data._Ys;\n  var Zs = data._Zs;\n  var width = Xs.length;\n  var height = Ys.length;\n  var depth = Zs.length;\n  var filled = GRID_TYPES.indexOf(data._gridFill.replace(/-/g, '').replace(/\\+/g, ''));\n\n  var getIndex = function (i, j, k) {\n    switch (filled) {\n      case 5:\n        // 'zyx'\n        return k + depth * j + depth * height * i;\n\n      case 4:\n        // 'zxy'\n        return k + depth * i + depth * width * j;\n\n      case 3:\n        // 'yzx'\n        return j + height * k + height * depth * i;\n\n      case 2:\n        // 'yxz'\n        return j + height * i + height * width * k;\n\n      case 1:\n        // 'xzy'\n        return i + width * k + width * depth * j;\n\n      default:\n        // case 0: // 'xyz'\n        return i + width * j + width * height * k;\n    }\n  };\n\n  var minValues = data._minValues;\n  var maxValues = data._maxValues;\n  var vMin = data._vMin;\n  var vMax = data._vMax;\n  var allXs;\n  var allYs;\n  var allZs;\n  var allVs;\n\n  function findVertexId(x, y, z) {\n    // could be used to find the vertex id of previously generated vertex within the group\n    var len = allVs.length;\n\n    for (var f = beginVertextLength; f < len; f++) {\n      if (x === allXs[f] && y === allYs[f] && z === allZs[f]) {\n        return f;\n      }\n    }\n\n    return -1;\n  }\n\n  function beginGroup() {\n    beginVertextLength = numVertices;\n  }\n\n  function emptyVertices() {\n    allXs = [];\n    allYs = [];\n    allZs = [];\n    allVs = [];\n    numVertices = 0;\n    beginGroup();\n  }\n\n  function addVertex(x, y, z, v) {\n    allXs.push(x);\n    allYs.push(y);\n    allZs.push(z);\n    allVs.push(v);\n    numVertices++;\n    return numVertices - 1;\n  }\n\n  function addFace(a, b, c) {\n    data._meshI.push(a);\n\n    data._meshJ.push(b);\n\n    data._meshK.push(c);\n\n    numFaces++;\n    return numFaces - 1;\n  }\n\n  function getCenter(A, B, C) {\n    var M = [];\n\n    for (var i = 0; i < A.length; i++) {\n      M[i] = (A[i] + B[i] + C[i]) / 3.0;\n    }\n\n    return M;\n  }\n\n  function getBetween(A, B, r) {\n    var M = [];\n\n    for (var i = 0; i < A.length; i++) {\n      M[i] = A[i] * (1 - r) + r * B[i];\n    }\n\n    return M;\n  }\n\n  var activeFill;\n\n  function setFill(fill) {\n    activeFill = fill;\n  }\n\n  function createOpenTri(xyzv, abc) {\n    var A = xyzv[0];\n    var B = xyzv[1];\n    var C = xyzv[2];\n    var G = getCenter(A, B, C);\n    var r = Math.sqrt(1 - activeFill);\n    var p1 = getBetween(G, A, r);\n    var p2 = getBetween(G, B, r);\n    var p3 = getBetween(G, C, r);\n    var a = abc[0];\n    var b = abc[1];\n    var c = abc[2];\n    return {\n      xyzv: [[A, B, p2], [p2, p1, A], [B, C, p3], [p3, p2, B], [C, A, p1], [p1, p3, C]],\n      abc: [[a, b, -1], [-1, -1, a], [b, c, -1], [-1, -1, b], [c, a, -1], [-1, -1, c]]\n    };\n  }\n\n  function styleIncludes(style, char) {\n    if (style === 'all' || style === null) return true;\n    return style.indexOf(char) > -1;\n  }\n\n  function mapValue(style, value) {\n    if (style === null) return value;\n    return style;\n  }\n\n  function drawTri(style, xyzv, abc) {\n    beginGroup();\n    var allXYZVs = [xyzv];\n    var allABCs = [abc];\n\n    if (activeFill >= 1) {\n      allXYZVs = [xyzv];\n      allABCs = [abc];\n    } else if (activeFill > 0) {\n      var openTri = createOpenTri(xyzv, abc);\n      allXYZVs = openTri.xyzv;\n      allABCs = openTri.abc;\n    }\n\n    for (var f = 0; f < allXYZVs.length; f++) {\n      xyzv = allXYZVs[f];\n      abc = allABCs[f];\n      var pnts = [];\n\n      for (var i = 0; i < 3; i++) {\n        var x = xyzv[i][0];\n        var y = xyzv[i][1];\n        var z = xyzv[i][2];\n        var v = xyzv[i][3];\n        var id = abc[i] > -1 ? abc[i] : findVertexId(x, y, z);\n\n        if (id > -1) {\n          pnts[i] = id;\n        } else {\n          pnts[i] = addVertex(x, y, z, mapValue(style, v));\n        }\n      }\n\n      addFace(pnts[0], pnts[1], pnts[2]);\n    }\n  }\n\n  function drawQuad(style, xyzv, abcd) {\n    var makeTri = function (i, j, k) {\n      drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n    };\n\n    makeTri(0, 1, 2);\n    makeTri(2, 3, 0);\n  }\n\n  function drawTetra(style, xyzv, abcd) {\n    var makeTri = function (i, j, k) {\n      drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n    };\n\n    makeTri(0, 1, 2);\n    makeTri(3, 0, 1);\n    makeTri(2, 3, 0);\n    makeTri(1, 2, 3);\n  }\n\n  function calcIntersection(pointOut, pointIn, min, max) {\n    var value = pointOut[3];\n    if (value < min) value = min;\n    if (value > max) value = max;\n    var ratio = (pointOut[3] - value) / (pointOut[3] - pointIn[3] + 0.000000001); // we had to add this error to force solve the tiny caps\n\n    var result = [];\n\n    for (var s = 0; s < 4; s++) {\n      result[s] = (1 - ratio) * pointOut[s] + ratio * pointIn[s];\n    }\n\n    return result;\n  }\n\n  function inRange(value, min, max) {\n    return value >= min && value <= max;\n  }\n\n  function almostInFinalRange(value) {\n    var vErr = 0.001 * (vMax - vMin);\n    return value >= vMin - vErr && value <= vMax + vErr;\n  }\n\n  function getXYZV(indecies) {\n    var xyzv = [];\n\n    for (var q = 0; q < 4; q++) {\n      var index = indecies[q];\n      xyzv.push([data._x[index], data._y[index], data._z[index], data._value[index]]);\n    }\n\n    return xyzv;\n  }\n\n  var MAX_PASS = 3;\n\n  function tryCreateTri(style, xyzv, abc, min, max, nPass) {\n    if (!nPass) nPass = 1;\n    abc = [-1, -1, -1]; // Note: for the moment we override indices\n    // to run faster! But it is possible to comment this line\n    // to reduce the number of vertices.\n\n    var result = false;\n    var ok = [inRange(xyzv[0][3], min, max), inRange(xyzv[1][3], min, max), inRange(xyzv[2][3], min, max)];\n\n    if (!ok[0] && !ok[1] && !ok[2]) {\n      return false;\n    }\n\n    var tryDrawTri = function (style, xyzv, abc) {\n      if ( // we check here if the points are in `real` iso-min/max range\n      almostInFinalRange(xyzv[0][3]) && almostInFinalRange(xyzv[1][3]) && almostInFinalRange(xyzv[2][3])) {\n        drawTri(style, xyzv, abc);\n        return true;\n      } else if (nPass < MAX_PASS) {\n        return tryCreateTri(style, xyzv, abc, vMin, vMax, ++nPass); // i.e. second pass using actual vMin vMax bounds\n      }\n\n      return false;\n    };\n\n    if (ok[0] && ok[1] && ok[2]) {\n      return tryDrawTri(style, xyzv, abc) || result;\n    }\n\n    var interpolated = false;\n    [[0, 1, 2], [2, 0, 1], [1, 2, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && !ok[e[2]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var p1 = calcIntersection(C, A, min, max);\n        var p2 = calcIntersection(C, B, min, max);\n        result = tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]) || result;\n        result = tryDrawTri(style, [A, B, p2], [abc[e[0]], abc[e[1]], -1]) || result;\n        interpolated = true;\n      }\n    });\n    if (interpolated) return result;\n    [[0, 1, 2], [1, 2, 0], [2, 0, 1]].forEach(function (e) {\n      if (ok[e[0]] && !ok[e[1]] && !ok[e[2]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var p1 = calcIntersection(B, A, min, max);\n        var p2 = calcIntersection(C, A, min, max);\n        result = tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]) || result;\n        interpolated = true;\n      }\n    });\n    return result;\n  }\n\n  function tryCreateTetra(style, abcd, min, max) {\n    var result = false;\n    var xyzv = getXYZV(abcd);\n    var ok = [inRange(xyzv[0][3], min, max), inRange(xyzv[1][3], min, max), inRange(xyzv[2][3], min, max), inRange(xyzv[3][3], min, max)];\n\n    if (!ok[0] && !ok[1] && !ok[2] && !ok[3]) {\n      return result;\n    }\n\n    if (ok[0] && ok[1] && ok[2] && ok[3]) {\n      if (drawingSpaceframe) {\n        result = drawTetra(style, xyzv, abcd) || result;\n      }\n\n      return result;\n    }\n\n    var interpolated = false;\n    [[0, 1, 2, 3], [3, 0, 1, 2], [2, 3, 0, 1], [1, 2, 3, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n\n        if (drawingSpaceframe) {\n          result = drawTri(style, [A, B, C], [abcd[e[0]], abcd[e[1]], abcd[e[2]]]) || result;\n        } else {\n          var p1 = calcIntersection(D, A, min, max);\n          var p2 = calcIntersection(D, B, min, max);\n          var p3 = calcIntersection(D, C, min, max);\n          result = drawTri(null, [p1, p2, p3], [-1, -1, -1]) || result;\n        }\n\n        interpolated = true;\n      }\n    });\n    if (interpolated) return result;\n    [[0, 1, 2, 3], [1, 2, 3, 0], [2, 3, 0, 1], [3, 0, 1, 2], [0, 2, 3, 1], [1, 3, 2, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n        var p1 = calcIntersection(C, A, min, max);\n        var p2 = calcIntersection(C, B, min, max);\n        var p3 = calcIntersection(D, B, min, max);\n        var p4 = calcIntersection(D, A, min, max);\n\n        if (drawingSpaceframe) {\n          result = drawTri(style, [A, p4, p1], [abcd[e[0]], -1, -1]) || result;\n          result = drawTri(style, [B, p2, p3], [abcd[e[1]], -1, -1]) || result;\n        } else {\n          result = drawQuad(null, [p1, p2, p3, p4], [-1, -1, -1, -1]) || result;\n        }\n\n        interpolated = true;\n      }\n    });\n    if (interpolated) return result;\n    [[0, 1, 2, 3], [1, 2, 3, 0], [2, 3, 0, 1], [3, 0, 1, 2]].forEach(function (e) {\n      if (ok[e[0]] && !ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n        var p1 = calcIntersection(B, A, min, max);\n        var p2 = calcIntersection(C, A, min, max);\n        var p3 = calcIntersection(D, A, min, max);\n\n        if (drawingSpaceframe) {\n          result = drawTri(style, [A, p1, p2], [abcd[e[0]], -1, -1]) || result;\n          result = drawTri(style, [A, p2, p3], [abcd[e[0]], -1, -1]) || result;\n          result = drawTri(style, [A, p3, p1], [abcd[e[0]], -1, -1]) || result;\n        } else {\n          result = drawTri(null, [p1, p2, p3], [-1, -1, -1]) || result;\n        }\n\n        interpolated = true;\n      }\n    });\n    return result;\n  }\n\n  function addCube(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max) {\n    var result = false;\n\n    if (drawingSurface) {\n      if (styleIncludes(style, 'A')) {\n        result = tryCreateTetra(null, [p000, p001, p010, p100], min, max) || result;\n      }\n\n      if (styleIncludes(style, 'B')) {\n        result = tryCreateTetra(null, [p001, p010, p011, p111], min, max) || result;\n      }\n\n      if (styleIncludes(style, 'C')) {\n        result = tryCreateTetra(null, [p001, p100, p101, p111], min, max) || result;\n      }\n\n      if (styleIncludes(style, 'D')) {\n        result = tryCreateTetra(null, [p010, p100, p110, p111], min, max) || result;\n      }\n\n      if (styleIncludes(style, 'E')) {\n        result = tryCreateTetra(null, [p001, p010, p100, p111], min, max) || result;\n      }\n    }\n\n    if (drawingSpaceframe) {\n      result = tryCreateTetra(style, [p001, p010, p100, p111], min, max) || result;\n    }\n\n    return result;\n  }\n\n  function addRect(style, a, b, c, d, min, max, previousResult) {\n    return [previousResult[0] === true ? true : tryCreateTri(style, getXYZV([a, b, c]), [a, b, c], min, max), previousResult[1] === true ? true : tryCreateTri(style, getXYZV([c, d, a]), [c, d, a], min, max)];\n  }\n\n  function begin2dCell(style, p00, p01, p10, p11, min, max, isEven, previousResult) {\n    // used to create caps and/or slices on exact axis points\n    if (isEven) {\n      return addRect(style, p00, p01, p11, p10, min, max, previousResult);\n    } else {\n      return addRect(style, p01, p11, p10, p00, min, max, previousResult);\n    }\n  }\n\n  function beginSection(style, i, j, k, min, max, distRatios) {\n    // used to create slices between axis points\n    var result = false;\n    var A, B, C, D;\n\n    var makeSection = function () {\n      result = tryCreateTri(style, [A, B, C], [-1, -1, -1], min, max) || result;\n      result = tryCreateTri(style, [C, D, A], [-1, -1, -1], min, max) || result;\n    };\n\n    var rX = distRatios[0];\n    var rY = distRatios[1];\n    var rZ = distRatios[2];\n\n    if (rX) {\n      A = getBetween(getXYZV([getIndex(i, j - 0, k - 0)])[0], getXYZV([getIndex(i - 1, j - 0, k - 0)])[0], rX);\n      B = getBetween(getXYZV([getIndex(i, j - 0, k - 1)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rX);\n      C = getBetween(getXYZV([getIndex(i, j - 1, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rX);\n      D = getBetween(getXYZV([getIndex(i, j - 1, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rX);\n      makeSection();\n    }\n\n    if (rY) {\n      A = getBetween(getXYZV([getIndex(i - 0, j, k - 0)])[0], getXYZV([getIndex(i - 0, j - 1, k - 0)])[0], rY);\n      B = getBetween(getXYZV([getIndex(i - 0, j, k - 1)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rY);\n      C = getBetween(getXYZV([getIndex(i - 1, j, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rY);\n      D = getBetween(getXYZV([getIndex(i - 1, j, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rY);\n      makeSection();\n    }\n\n    if (rZ) {\n      A = getBetween(getXYZV([getIndex(i - 0, j - 0, k)])[0], getXYZV([getIndex(i - 0, j - 0, k - 1)])[0], rZ);\n      B = getBetween(getXYZV([getIndex(i - 0, j - 1, k)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rZ);\n      C = getBetween(getXYZV([getIndex(i - 1, j - 1, k)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rZ);\n      D = getBetween(getXYZV([getIndex(i - 1, j - 0, k)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rZ);\n      makeSection();\n    }\n\n    return result;\n  }\n\n  function begin3dCell(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max, isEven) {\n    // used to create spaceframe and/or iso-surfaces\n    var cellStyle = style;\n\n    if (isEven) {\n      if (drawingSurface && style === 'even') cellStyle = null;\n      return addCube(cellStyle, p000, p001, p010, p011, p100, p101, p110, p111, min, max);\n    } else {\n      if (drawingSurface && style === 'odd') cellStyle = null;\n      return addCube(cellStyle, p111, p110, p101, p100, p011, p010, p001, p000, min, max);\n    }\n  }\n\n  function draw2dX(style, items, min, max, previousResult) {\n    var result = [];\n    var n = 0;\n\n    for (var q = 0; q < items.length; q++) {\n      var i = items[q];\n\n      for (var k = 1; k < depth; k++) {\n        for (var j = 1; j < height; j++) {\n          result.push(begin2dCell(style, getIndex(i, j - 1, k - 1), getIndex(i, j - 1, k), getIndex(i, j, k - 1), getIndex(i, j, k), min, max, (i + j + k) % 2, previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function draw2dY(style, items, min, max, previousResult) {\n    var result = [];\n    var n = 0;\n\n    for (var q = 0; q < items.length; q++) {\n      var j = items[q];\n\n      for (var i = 1; i < width; i++) {\n        for (var k = 1; k < depth; k++) {\n          result.push(begin2dCell(style, getIndex(i - 1, j, k - 1), getIndex(i, j, k - 1), getIndex(i - 1, j, k), getIndex(i, j, k), min, max, (i + j + k) % 2, previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function draw2dZ(style, items, min, max, previousResult) {\n    var result = [];\n    var n = 0;\n\n    for (var q = 0; q < items.length; q++) {\n      var k = items[q];\n\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          result.push(begin2dCell(style, getIndex(i - 1, j - 1, k), getIndex(i - 1, j, k), getIndex(i, j - 1, k), getIndex(i, j, k), min, max, (i + j + k) % 2, previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function draw3d(style, min, max) {\n    for (var k = 1; k < depth; k++) {\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          begin3dCell(style, getIndex(i - 1, j - 1, k - 1), getIndex(i - 1, j - 1, k), getIndex(i - 1, j, k - 1), getIndex(i - 1, j, k), getIndex(i, j - 1, k - 1), getIndex(i, j - 1, k), getIndex(i, j, k - 1), getIndex(i, j, k), min, max, (i + j + k) % 2);\n        }\n      }\n    }\n  }\n\n  function drawSpaceframe(style, min, max) {\n    drawingSpaceframe = true;\n    draw3d(style, min, max);\n    drawingSpaceframe = false;\n  }\n\n  function drawSurface(style, min, max) {\n    drawingSurface = true;\n    draw3d(style, min, max);\n    drawingSurface = false;\n  }\n\n  function drawSectionX(style, items, min, max, distRatios, previousResult) {\n    var result = [];\n    var n = 0;\n\n    for (var q = 0; q < items.length; q++) {\n      var i = items[q];\n\n      for (var k = 1; k < depth; k++) {\n        for (var j = 1; j < height; j++) {\n          result.push(beginSection(style, i, j, k, min, max, distRatios[q], previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function drawSectionY(style, items, min, max, distRatios, previousResult) {\n    var result = [];\n    var n = 0;\n\n    for (var q = 0; q < items.length; q++) {\n      var j = items[q];\n\n      for (var i = 1; i < width; i++) {\n        for (var k = 1; k < depth; k++) {\n          result.push(beginSection(style, i, j, k, min, max, distRatios[q], previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function drawSectionZ(style, items, min, max, distRatios, previousResult) {\n    var result = [];\n    var n = 0;\n\n    for (var q = 0; q < items.length; q++) {\n      var k = items[q];\n\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          result.push(beginSection(style, i, j, k, min, max, distRatios[q], previousResult && previousResult[n] ? previousResult[n] : []));\n          n++;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function createRange(a, b) {\n    var range = [];\n\n    for (var q = a; q < b; q++) {\n      range.push(q);\n    }\n\n    return range;\n  }\n\n  function insertGridPoints() {\n    for (var i = 0; i < width; i++) {\n      for (var j = 0; j < height; j++) {\n        for (var k = 0; k < depth; k++) {\n          var index = getIndex(i, j, k);\n          addVertex(data._x[index], data._y[index], data._z[index], data._value[index]);\n        }\n      }\n    }\n  }\n\n  function drawAll() {\n    emptyVertices(); // insert grid points\n\n    insertGridPoints();\n    var activeStyle = null; // draw spaceframes\n\n    if (showSpaceframe && spaceframeFill) {\n      setFill(spaceframeFill);\n      drawSpaceframe(activeStyle, vMin, vMax);\n    } // draw iso-surfaces\n\n\n    if (showSurface && surfaceFill) {\n      setFill(surfaceFill);\n      var surfacePattern = data.surface.pattern;\n      var surfaceCount = data.surface.count;\n\n      for (var q = 0; q < surfaceCount; q++) {\n        var ratio = surfaceCount === 1 ? 0.5 : q / (surfaceCount - 1);\n        var level = (1 - ratio) * vMin + ratio * vMax;\n        var d1 = Math.abs(level - minValues);\n        var d2 = Math.abs(level - maxValues);\n        var ranges = d1 > d2 ? [minValues, level] : [level, maxValues];\n        drawSurface(surfacePattern, ranges[0], ranges[1]);\n      }\n    }\n\n    var setupMinMax = [[Math.min(vMin, maxValues), Math.max(vMin, maxValues)], [Math.min(minValues, vMax), Math.max(minValues, vMax)]];\n    ['x', 'y', 'z'].forEach(function (e) {\n      var preRes = [];\n\n      for (var s = 0; s < setupMinMax.length; s++) {\n        var count = 0;\n        var activeMin = setupMinMax[s][0];\n        var activeMax = setupMinMax[s][1]; // draw slices\n\n        var slice = data.slices[e];\n\n        if (slice.show && slice.fill) {\n          setFill(slice.fill);\n          var exactIndices = [];\n          var ceilIndices = [];\n          var distRatios = [];\n\n          if (slice.locations.length) {\n            for (var q = 0; q < slice.locations.length; q++) {\n              var near = findNearestOnAxis(slice.locations[q], e === 'x' ? Xs : e === 'y' ? Ys : Zs);\n\n              if (near.distRatio === 0) {\n                exactIndices.push(near.id);\n              } else if (near.id > 0) {\n                ceilIndices.push(near.id);\n\n                if (e === 'x') {\n                  distRatios.push([near.distRatio, 0, 0]);\n                } else if (e === 'y') {\n                  distRatios.push([0, near.distRatio, 0]);\n                } else {\n                  distRatios.push([0, 0, near.distRatio]);\n                }\n              }\n            }\n          } else {\n            if (e === 'x') {\n              exactIndices = createRange(1, width - 1);\n            } else if (e === 'y') {\n              exactIndices = createRange(1, height - 1);\n            } else {\n              exactIndices = createRange(1, depth - 1);\n            }\n          }\n\n          if (ceilIndices.length > 0) {\n            if (e === 'x') {\n              preRes[count] = drawSectionX(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n            } else if (e === 'y') {\n              preRes[count] = drawSectionY(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n            } else {\n              preRes[count] = drawSectionZ(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\n            }\n\n            count++;\n          }\n\n          if (exactIndices.length > 0) {\n            if (e === 'x') {\n              preRes[count] = draw2dX(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n            } else if (e === 'y') {\n              preRes[count] = draw2dY(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n            } else {\n              preRes[count] = draw2dZ(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\n            }\n\n            count++;\n          }\n        } // draw caps\n\n\n        var cap = data.caps[e];\n\n        if (cap.show && cap.fill) {\n          setFill(cap.fill);\n\n          if (e === 'x') {\n            preRes[count] = draw2dX(activeStyle, [0, width - 1], activeMin, activeMax, preRes[count]);\n          } else if (e === 'y') {\n            preRes[count] = draw2dY(activeStyle, [0, height - 1], activeMin, activeMax, preRes[count]);\n          } else {\n            preRes[count] = draw2dZ(activeStyle, [0, depth - 1], activeMin, activeMax, preRes[count]);\n          }\n\n          count++;\n        }\n      }\n    }); // remove vertices arrays (i.e. grid points) in case no face was created.\n\n    if (numFaces === 0) {\n      emptyVertices();\n    }\n\n    data._meshX = allXs;\n    data._meshY = allYs;\n    data._meshZ = allZs;\n    data._meshIntensity = allVs;\n    data._Xs = Xs;\n    data._Ys = Ys;\n    data._Zs = Zs;\n  }\n\n  drawAll();\n  return data;\n}\n\nfunction createIsosurfaceTrace(scene, data) {\n  var gl = scene.glplot.gl;\n  var mesh = createMesh({\n    gl: gl\n  });\n  var result = new IsosurfaceTrace(scene, mesh, data.uid);\n  mesh._trace = result;\n  result.update(data);\n  scene.glplot.add(mesh);\n  return result;\n}\n\nmodule.exports = {\n  findNearestOnAxis: findNearestOnAxis,\n  generateIsoMeshes: generateIsoMeshes,\n  createIsosurfaceTrace: createIsosurfaceTrace\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/isosurface/convert.js"],"names":["createMesh","require","parseColorScale","str2RgbaArray","extractOpts","zip3","findNearestOnAxis","w","arr","q","length","min","Math","max","id","distRatio","IsosurfaceTrace","scene","mesh","uid","name","data","showContour","proto","prototype","handlePick","selection","object","rawId","index","x","_meshX","y","_meshY","z","_meshZ","height","_Ys","depth","_Zs","i","_Xs","j","k","selectIndex","traceCoordinate","_value","text","hovertext","Array","isArray","undefined","textLabel","update","layout","fullSceneLayout","generateIsoMeshes","toDataCoords","axis","coord","scale","calendar","map","d2l","positions","xaxis","dataScale","xcalendar","yaxis","ycalendar","zaxis","zcalendar","cells","_meshI","_meshJ","_meshK","config","lightPosition","lightposition","ambient","lighting","diffuse","specular","roughness","fresnel","vertexNormalsEpsilon","vertexnormalsepsilon","faceNormalsEpsilon","facenormalsepsilon","opacity","contourEnable","contour","show","contourColor","color","slice","contourWidth","width","useFacetNormals","flatshading","cOpts","vertexIntensity","_meshIntensity","vertexIntensityBounds","colormap","dispose","glplot","remove","GRID_TYPES","showSurface","surface","showSpaceframe","spaceframe","surfaceFill","fill","spaceframeFill","drawingSurface","drawingSpaceframe","numFaces","numVertices","beginVertextLength","Xs","Ys","Zs","filled","indexOf","_gridFill","replace","getIndex","minValues","_minValues","maxValues","_maxValues","vMin","_vMin","vMax","_vMax","allXs","allYs","allZs","allVs","findVertexId","len","f","beginGroup","emptyVertices","addVertex","v","push","addFace","a","b","c","getCenter","A","B","C","M","getBetween","r","activeFill","setFill","createOpenTri","xyzv","abc","G","sqrt","p1","p2","p3","styleIncludes","style","char","mapValue","value","drawTri","allXYZVs","allABCs","openTri","pnts","drawQuad","abcd","makeTri","drawTetra","calcIntersection","pointOut","pointIn","ratio","result","s","inRange","almostInFinalRange","vErr","getXYZV","indecies","_x","_y","_z","MAX_PASS","tryCreateTri","nPass","ok","tryDrawTri","interpolated","forEach","e","tryCreateTetra","D","p4","addCube","p000","p001","p010","p011","p100","p101","p110","p111","addRect","d","previousResult","begin2dCell","p00","p01","p10","p11","isEven","beginSection","distRatios","makeSection","rX","rY","rZ","begin3dCell","cellStyle","draw2dX","items","n","draw2dY","draw2dZ","draw3d","drawSpaceframe","drawSurface","drawSectionX","drawSectionY","drawSectionZ","createRange","range","insertGridPoints","drawAll","activeStyle","surfacePattern","pattern","surfaceCount","count","level","d1","abs","d2","ranges","setupMinMax","preRes","activeMin","activeMax","slices","exactIndices","ceilIndices","locations","near","cap","caps","createIsosurfaceTrace","gl","_trace","add","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar createMesh = require('gl-mesh3d');\r\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\r\nvar str2RgbaArray = require('../../lib/str2rgbarray');\r\nvar extractOpts = require('../../components/colorscale').extractOpts;\r\nvar zip3 = require('../../plots/gl3d/zip3');\r\n\r\nvar findNearestOnAxis = function(w, arr) {\r\n    for(var q = arr.length - 1; q > 0; q--) {\r\n        var min = Math.min(arr[q], arr[q - 1]);\r\n        var max = Math.max(arr[q], arr[q - 1]);\r\n        if(max > min && min < w && w <= max) {\r\n            return {\r\n                id: q,\r\n                distRatio: (max - w) / (max - min)\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        id: 0,\r\n        distRatio: 0\r\n    };\r\n};\r\n\r\nfunction IsosurfaceTrace(scene, mesh, uid) {\r\n    this.scene = scene;\r\n    this.uid = uid;\r\n    this.mesh = mesh;\r\n    this.name = '';\r\n    this.data = null;\r\n    this.showContour = false;\r\n}\r\n\r\nvar proto = IsosurfaceTrace.prototype;\r\n\r\nproto.handlePick = function(selection) {\r\n    if(selection.object === this.mesh) {\r\n        var rawId = selection.data.index;\r\n\r\n        var x = this.data._meshX[rawId];\r\n        var y = this.data._meshY[rawId];\r\n        var z = this.data._meshZ[rawId];\r\n\r\n        var height = this.data._Ys.length;\r\n        var depth = this.data._Zs.length;\r\n\r\n        var i = findNearestOnAxis(x, this.data._Xs).id;\r\n        var j = findNearestOnAxis(y, this.data._Ys).id;\r\n        var k = findNearestOnAxis(z, this.data._Zs).id;\r\n\r\n        var selectIndex = selection.index = k + depth * j + depth * height * i;\r\n\r\n        selection.traceCoordinate = [\r\n            this.data._meshX[selectIndex],\r\n            this.data._meshY[selectIndex],\r\n            this.data._meshZ[selectIndex],\r\n            this.data._value[selectIndex]\r\n        ];\r\n\r\n        var text = this.data.hovertext || this.data.text;\r\n        if(Array.isArray(text) && text[selectIndex] !== undefined) {\r\n            selection.textLabel = text[selectIndex];\r\n        } else if(text) {\r\n            selection.textLabel = text;\r\n        }\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\nproto.update = function(data) {\r\n    var scene = this.scene;\r\n    var layout = scene.fullSceneLayout;\r\n\r\n    this.data = generateIsoMeshes(data);\r\n\r\n    // Unpack position data\r\n    function toDataCoords(axis, coord, scale, calendar) {\r\n        return coord.map(function(x) {\r\n            return axis.d2l(x, 0, calendar) * scale;\r\n        });\r\n    }\r\n\r\n    var positions = zip3(\r\n        toDataCoords(layout.xaxis, data._meshX, scene.dataScale[0], data.xcalendar),\r\n        toDataCoords(layout.yaxis, data._meshY, scene.dataScale[1], data.ycalendar),\r\n        toDataCoords(layout.zaxis, data._meshZ, scene.dataScale[2], data.zcalendar));\r\n\r\n    var cells = zip3(data._meshI, data._meshJ, data._meshK);\r\n\r\n    var config = {\r\n        positions: positions,\r\n        cells: cells,\r\n        lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\r\n        ambient: data.lighting.ambient,\r\n        diffuse: data.lighting.diffuse,\r\n        specular: data.lighting.specular,\r\n        roughness: data.lighting.roughness,\r\n        fresnel: data.lighting.fresnel,\r\n        vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\r\n        faceNormalsEpsilon: data.lighting.facenormalsepsilon,\r\n        opacity: data.opacity,\r\n        contourEnable: data.contour.show,\r\n        contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\r\n        contourWidth: data.contour.width,\r\n        useFacetNormals: data.flatshading\r\n    };\r\n\r\n    var cOpts = extractOpts(data);\r\n    config.vertexIntensity = data._meshIntensity;\r\n    config.vertexIntensityBounds = [cOpts.min, cOpts.max];\r\n    config.colormap = parseColorScale(data);\r\n\r\n    // Update mesh\r\n    this.mesh.update(config);\r\n};\r\n\r\nproto.dispose = function() {\r\n    this.scene.glplot.remove(this.mesh);\r\n    this.mesh.dispose();\r\n};\r\n\r\nvar GRID_TYPES = ['xyz', 'xzy', 'yxz', 'yzx', 'zxy', 'zyx'];\r\n\r\nfunction generateIsoMeshes(data) {\r\n    data._meshI = [];\r\n    data._meshJ = [];\r\n    data._meshK = [];\r\n\r\n    var showSurface = data.surface.show;\r\n    var showSpaceframe = data.spaceframe.show;\r\n\r\n    var surfaceFill = data.surface.fill;\r\n    var spaceframeFill = data.spaceframe.fill;\r\n\r\n    var drawingSurface = false;\r\n    var drawingSpaceframe = false;\r\n\r\n    var numFaces = 0;\r\n    var numVertices;\r\n    var beginVertextLength;\r\n\r\n    var Xs = data._Xs;\r\n    var Ys = data._Ys;\r\n    var Zs = data._Zs;\r\n\r\n    var width = Xs.length;\r\n    var height = Ys.length;\r\n    var depth = Zs.length;\r\n\r\n    var filled = GRID_TYPES.indexOf(data._gridFill.replace(/-/g, '').replace(/\\+/g, ''));\r\n\r\n    var getIndex = function(i, j, k) {\r\n        switch(filled) {\r\n            case 5: // 'zyx'\r\n                return k + depth * j + depth * height * i;\r\n            case 4: // 'zxy'\r\n                return k + depth * i + depth * width * j;\r\n            case 3: // 'yzx'\r\n                return j + height * k + height * depth * i;\r\n            case 2: // 'yxz'\r\n                return j + height * i + height * width * k;\r\n            case 1: // 'xzy'\r\n                return i + width * k + width * depth * j;\r\n            default: // case 0: // 'xyz'\r\n                return i + width * j + width * height * k;\r\n        }\r\n    };\r\n\r\n    var minValues = data._minValues;\r\n    var maxValues = data._maxValues;\r\n\r\n    var vMin = data._vMin;\r\n    var vMax = data._vMax;\r\n\r\n    var allXs;\r\n    var allYs;\r\n    var allZs;\r\n    var allVs;\r\n\r\n    function findVertexId(x, y, z) {\r\n        // could be used to find the vertex id of previously generated vertex within the group\r\n\r\n        var len = allVs.length;\r\n        for(var f = beginVertextLength; f < len; f++) {\r\n            if(\r\n                x === allXs[f] &&\r\n                y === allYs[f] &&\r\n                z === allZs[f]\r\n            ) {\r\n                return f;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    function beginGroup() {\r\n        beginVertextLength = numVertices;\r\n    }\r\n\r\n    function emptyVertices() {\r\n        allXs = [];\r\n        allYs = [];\r\n        allZs = [];\r\n        allVs = [];\r\n        numVertices = 0;\r\n\r\n        beginGroup();\r\n    }\r\n\r\n    function addVertex(x, y, z, v) {\r\n        allXs.push(x);\r\n        allYs.push(y);\r\n        allZs.push(z);\r\n        allVs.push(v);\r\n        numVertices++;\r\n\r\n        return numVertices - 1;\r\n    }\r\n\r\n    function addFace(a, b, c) {\r\n        data._meshI.push(a);\r\n        data._meshJ.push(b);\r\n        data._meshK.push(c);\r\n        numFaces++;\r\n\r\n        return numFaces - 1;\r\n    }\r\n\r\n    function getCenter(A, B, C) {\r\n        var M = [];\r\n        for(var i = 0; i < A.length; i++) {\r\n            M[i] = (A[i] + B[i] + C[i]) / 3.0;\r\n        }\r\n        return M;\r\n    }\r\n\r\n    function getBetween(A, B, r) {\r\n        var M = [];\r\n        for(var i = 0; i < A.length; i++) {\r\n            M[i] = A[i] * (1 - r) + r * B[i];\r\n        }\r\n        return M;\r\n    }\r\n\r\n    var activeFill;\r\n    function setFill(fill) {\r\n        activeFill = fill;\r\n    }\r\n\r\n    function createOpenTri(xyzv, abc) {\r\n        var A = xyzv[0];\r\n        var B = xyzv[1];\r\n        var C = xyzv[2];\r\n        var G = getCenter(A, B, C);\r\n\r\n        var r = Math.sqrt(1 - activeFill);\r\n        var p1 = getBetween(G, A, r);\r\n        var p2 = getBetween(G, B, r);\r\n        var p3 = getBetween(G, C, r);\r\n\r\n        var a = abc[0];\r\n        var b = abc[1];\r\n        var c = abc[2];\r\n\r\n        return {\r\n            xyzv: [\r\n                [A, B, p2], [p2, p1, A],\r\n                [B, C, p3], [p3, p2, B],\r\n                [C, A, p1], [p1, p3, C]\r\n            ],\r\n            abc: [\r\n                [a, b, -1], [-1, -1, a],\r\n                [b, c, -1], [-1, -1, b],\r\n                [c, a, -1], [-1, -1, c]\r\n            ]\r\n        };\r\n    }\r\n\r\n    function styleIncludes(style, char) {\r\n        if(style === 'all' || style === null) return true;\r\n        return (style.indexOf(char) > -1);\r\n    }\r\n\r\n    function mapValue(style, value) {\r\n        if(style === null) return value;\r\n        return style;\r\n    }\r\n\r\n    function drawTri(style, xyzv, abc) {\r\n        beginGroup();\r\n\r\n        var allXYZVs = [xyzv];\r\n        var allABCs = [abc];\r\n        if(activeFill >= 1) {\r\n            allXYZVs = [xyzv];\r\n            allABCs = [abc];\r\n        } else if(activeFill > 0) {\r\n            var openTri = createOpenTri(xyzv, abc);\r\n            allXYZVs = openTri.xyzv;\r\n            allABCs = openTri.abc;\r\n        }\r\n\r\n        for(var f = 0; f < allXYZVs.length; f++) {\r\n            xyzv = allXYZVs[f];\r\n            abc = allABCs[f];\r\n\r\n            var pnts = [];\r\n            for(var i = 0; i < 3; i++) {\r\n                var x = xyzv[i][0];\r\n                var y = xyzv[i][1];\r\n                var z = xyzv[i][2];\r\n                var v = xyzv[i][3];\r\n\r\n                var id = (abc[i] > -1) ? abc[i] : findVertexId(x, y, z);\r\n                if(id > -1) {\r\n                    pnts[i] = id;\r\n                } else {\r\n                    pnts[i] = addVertex(x, y, z, mapValue(style, v));\r\n                }\r\n            }\r\n\r\n            addFace(pnts[0], pnts[1], pnts[2]);\r\n        }\r\n    }\r\n\r\n    function drawQuad(style, xyzv, abcd) {\r\n        var makeTri = function(i, j, k) {\r\n            drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\r\n        };\r\n\r\n        makeTri(0, 1, 2);\r\n        makeTri(2, 3, 0);\r\n    }\r\n\r\n    function drawTetra(style, xyzv, abcd) {\r\n        var makeTri = function(i, j, k) {\r\n            drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\r\n        };\r\n\r\n        makeTri(0, 1, 2);\r\n        makeTri(3, 0, 1);\r\n        makeTri(2, 3, 0);\r\n        makeTri(1, 2, 3);\r\n    }\r\n\r\n    function calcIntersection(pointOut, pointIn, min, max) {\r\n        var value = pointOut[3];\r\n\r\n        if(value < min) value = min;\r\n        if(value > max) value = max;\r\n\r\n        var ratio = (pointOut[3] - value) / (pointOut[3] - pointIn[3] + 0.000000001); // we had to add this error to force solve the tiny caps\r\n\r\n        var result = [];\r\n        for(var s = 0; s < 4; s++) {\r\n            result[s] = (1 - ratio) * pointOut[s] + ratio * pointIn[s];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function inRange(value, min, max) {\r\n        return (\r\n            value >= min &&\r\n            value <= max\r\n        );\r\n    }\r\n\r\n    function almostInFinalRange(value) {\r\n        var vErr = 0.001 * (vMax - vMin);\r\n        return (\r\n            value >= vMin - vErr &&\r\n            value <= vMax + vErr\r\n        );\r\n    }\r\n\r\n    function getXYZV(indecies) {\r\n        var xyzv = [];\r\n        for(var q = 0; q < 4; q++) {\r\n            var index = indecies[q];\r\n            xyzv.push(\r\n                [\r\n                    data._x[index],\r\n                    data._y[index],\r\n                    data._z[index],\r\n                    data._value[index]\r\n                ]\r\n            );\r\n        }\r\n\r\n        return xyzv;\r\n    }\r\n\r\n    var MAX_PASS = 3;\r\n\r\n    function tryCreateTri(style, xyzv, abc, min, max, nPass) {\r\n        if(!nPass) nPass = 1;\r\n\r\n        abc = [-1, -1, -1]; // Note: for the moment we override indices\r\n        // to run faster! But it is possible to comment this line\r\n        // to reduce the number of vertices.\r\n\r\n        var result = false;\r\n\r\n        var ok = [\r\n            inRange(xyzv[0][3], min, max),\r\n            inRange(xyzv[1][3], min, max),\r\n            inRange(xyzv[2][3], min, max)\r\n        ];\r\n\r\n        if(!ok[0] && !ok[1] && !ok[2]) {\r\n            return false;\r\n        }\r\n\r\n        var tryDrawTri = function(style, xyzv, abc) {\r\n            if( // we check here if the points are in `real` iso-min/max range\r\n                almostInFinalRange(xyzv[0][3]) &&\r\n                almostInFinalRange(xyzv[1][3]) &&\r\n                almostInFinalRange(xyzv[2][3])\r\n            ) {\r\n                drawTri(style, xyzv, abc);\r\n                return true;\r\n            } else if(nPass < MAX_PASS) {\r\n                return tryCreateTri(style, xyzv, abc, vMin, vMax, ++nPass); // i.e. second pass using actual vMin vMax bounds\r\n            }\r\n            return false;\r\n        };\r\n\r\n        if(ok[0] && ok[1] && ok[2]) {\r\n            return tryDrawTri(style, xyzv, abc) || result;\r\n        }\r\n\r\n        var interpolated = false;\r\n\r\n        [\r\n            [0, 1, 2],\r\n            [2, 0, 1],\r\n            [1, 2, 0]\r\n        ].forEach(function(e) {\r\n            if(ok[e[0]] && ok[e[1]] && !ok[e[2]]) {\r\n                var A = xyzv[e[0]];\r\n                var B = xyzv[e[1]];\r\n                var C = xyzv[e[2]];\r\n\r\n                var p1 = calcIntersection(C, A, min, max);\r\n                var p2 = calcIntersection(C, B, min, max);\r\n\r\n                result = tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]) || result;\r\n                result = tryDrawTri(style, [A, B, p2], [abc[e[0]], abc[e[1]], -1]) || result;\r\n\r\n                interpolated = true;\r\n            }\r\n        });\r\n        if(interpolated) return result;\r\n\r\n        [\r\n            [0, 1, 2],\r\n            [1, 2, 0],\r\n            [2, 0, 1]\r\n        ].forEach(function(e) {\r\n            if(ok[e[0]] && !ok[e[1]] && !ok[e[2]]) {\r\n                var A = xyzv[e[0]];\r\n                var B = xyzv[e[1]];\r\n                var C = xyzv[e[2]];\r\n\r\n                var p1 = calcIntersection(B, A, min, max);\r\n                var p2 = calcIntersection(C, A, min, max);\r\n\r\n                result = tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]) || result;\r\n\r\n                interpolated = true;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function tryCreateTetra(style, abcd, min, max) {\r\n        var result = false;\r\n\r\n        var xyzv = getXYZV(abcd);\r\n\r\n        var ok = [\r\n            inRange(xyzv[0][3], min, max),\r\n            inRange(xyzv[1][3], min, max),\r\n            inRange(xyzv[2][3], min, max),\r\n            inRange(xyzv[3][3], min, max)\r\n        ];\r\n\r\n        if(!ok[0] && !ok[1] && !ok[2] && !ok[3]) {\r\n            return result;\r\n        }\r\n\r\n        if(ok[0] && ok[1] && ok[2] && ok[3]) {\r\n            if(drawingSpaceframe) {\r\n                result = drawTetra(style, xyzv, abcd) || result;\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var interpolated = false;\r\n\r\n        [\r\n            [0, 1, 2, 3],\r\n            [3, 0, 1, 2],\r\n            [2, 3, 0, 1],\r\n            [1, 2, 3, 0]\r\n        ].forEach(function(e) {\r\n            if(ok[e[0]] && ok[e[1]] && ok[e[2]] && !ok[e[3]]) {\r\n                var A = xyzv[e[0]];\r\n                var B = xyzv[e[1]];\r\n                var C = xyzv[e[2]];\r\n                var D = xyzv[e[3]];\r\n\r\n                if(drawingSpaceframe) {\r\n                    result = drawTri(style, [A, B, C], [abcd[e[0]], abcd[e[1]], abcd[e[2]]]) || result;\r\n                } else {\r\n                    var p1 = calcIntersection(D, A, min, max);\r\n                    var p2 = calcIntersection(D, B, min, max);\r\n                    var p3 = calcIntersection(D, C, min, max);\r\n\r\n                    result = drawTri(null, [p1, p2, p3], [-1, -1, -1]) || result;\r\n                }\r\n\r\n                interpolated = true;\r\n            }\r\n        });\r\n        if(interpolated) return result;\r\n\r\n        [\r\n            [0, 1, 2, 3],\r\n            [1, 2, 3, 0],\r\n            [2, 3, 0, 1],\r\n            [3, 0, 1, 2],\r\n            [0, 2, 3, 1],\r\n            [1, 3, 2, 0]\r\n        ].forEach(function(e) {\r\n            if(ok[e[0]] && ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\r\n                var A = xyzv[e[0]];\r\n                var B = xyzv[e[1]];\r\n                var C = xyzv[e[2]];\r\n                var D = xyzv[e[3]];\r\n\r\n                var p1 = calcIntersection(C, A, min, max);\r\n                var p2 = calcIntersection(C, B, min, max);\r\n                var p3 = calcIntersection(D, B, min, max);\r\n                var p4 = calcIntersection(D, A, min, max);\r\n\r\n                if(drawingSpaceframe) {\r\n                    result = drawTri(style, [A, p4, p1], [abcd[e[0]], -1, -1]) || result;\r\n                    result = drawTri(style, [B, p2, p3], [abcd[e[1]], -1, -1]) || result;\r\n                } else {\r\n                    result = drawQuad(null, [p1, p2, p3, p4], [-1, -1, -1, -1]) || result;\r\n                }\r\n\r\n                interpolated = true;\r\n            }\r\n        });\r\n        if(interpolated) return result;\r\n\r\n        [\r\n            [0, 1, 2, 3],\r\n            [1, 2, 3, 0],\r\n            [2, 3, 0, 1],\r\n            [3, 0, 1, 2]\r\n        ].forEach(function(e) {\r\n            if(ok[e[0]] && !ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\r\n                var A = xyzv[e[0]];\r\n                var B = xyzv[e[1]];\r\n                var C = xyzv[e[2]];\r\n                var D = xyzv[e[3]];\r\n\r\n                var p1 = calcIntersection(B, A, min, max);\r\n                var p2 = calcIntersection(C, A, min, max);\r\n                var p3 = calcIntersection(D, A, min, max);\r\n\r\n                if(drawingSpaceframe) {\r\n                    result = drawTri(style, [A, p1, p2], [abcd[e[0]], -1, -1]) || result;\r\n                    result = drawTri(style, [A, p2, p3], [abcd[e[0]], -1, -1]) || result;\r\n                    result = drawTri(style, [A, p3, p1], [abcd[e[0]], -1, -1]) || result;\r\n                } else {\r\n                    result = drawTri(null, [p1, p2, p3], [-1, -1, -1]) || result;\r\n                }\r\n\r\n                interpolated = true;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function addCube(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max) {\r\n        var result = false;\r\n\r\n        if(drawingSurface) {\r\n            if(styleIncludes(style, 'A')) {\r\n                result = tryCreateTetra(null, [p000, p001, p010, p100], min, max) || result;\r\n            }\r\n            if(styleIncludes(style, 'B')) {\r\n                result = tryCreateTetra(null, [p001, p010, p011, p111], min, max) || result;\r\n            }\r\n            if(styleIncludes(style, 'C')) {\r\n                result = tryCreateTetra(null, [p001, p100, p101, p111], min, max) || result;\r\n            }\r\n            if(styleIncludes(style, 'D')) {\r\n                result = tryCreateTetra(null, [p010, p100, p110, p111], min, max) || result;\r\n            }\r\n            if(styleIncludes(style, 'E')) {\r\n                result = tryCreateTetra(null, [p001, p010, p100, p111], min, max) || result;\r\n            }\r\n        }\r\n\r\n        if(drawingSpaceframe) {\r\n            result = tryCreateTetra(style, [p001, p010, p100, p111], min, max) || result;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function addRect(style, a, b, c, d, min, max, previousResult) {\r\n        return [\r\n            (previousResult[0] === true) ? true :\r\n            tryCreateTri(style, getXYZV([a, b, c]), [a, b, c], min, max),\r\n            (previousResult[1] === true) ? true :\r\n            tryCreateTri(style, getXYZV([c, d, a]), [c, d, a], min, max)\r\n        ];\r\n    }\r\n\r\n    function begin2dCell(style, p00, p01, p10, p11, min, max, isEven, previousResult) {\r\n        // used to create caps and/or slices on exact axis points\r\n        if(isEven) {\r\n            return addRect(style, p00, p01, p11, p10, min, max, previousResult);\r\n        } else {\r\n            return addRect(style, p01, p11, p10, p00, min, max, previousResult);\r\n        }\r\n    }\r\n\r\n    function beginSection(style, i, j, k, min, max, distRatios) {\r\n        // used to create slices between axis points\r\n\r\n        var result = false;\r\n        var A, B, C, D;\r\n\r\n        var makeSection = function() {\r\n            result = tryCreateTri(style, [A, B, C], [-1, -1, -1], min, max) || result;\r\n            result = tryCreateTri(style, [C, D, A], [-1, -1, -1], min, max) || result;\r\n        };\r\n\r\n        var rX = distRatios[0];\r\n        var rY = distRatios[1];\r\n        var rZ = distRatios[2];\r\n\r\n        if(rX) {\r\n            A = getBetween(getXYZV([getIndex(i, j - 0, k - 0)])[0], getXYZV([getIndex(i - 1, j - 0, k - 0)])[0], rX);\r\n            B = getBetween(getXYZV([getIndex(i, j - 0, k - 1)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rX);\r\n            C = getBetween(getXYZV([getIndex(i, j - 1, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rX);\r\n            D = getBetween(getXYZV([getIndex(i, j - 1, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rX);\r\n            makeSection();\r\n        }\r\n\r\n        if(rY) {\r\n            A = getBetween(getXYZV([getIndex(i - 0, j, k - 0)])[0], getXYZV([getIndex(i - 0, j - 1, k - 0)])[0], rY);\r\n            B = getBetween(getXYZV([getIndex(i - 0, j, k - 1)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rY);\r\n            C = getBetween(getXYZV([getIndex(i - 1, j, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rY);\r\n            D = getBetween(getXYZV([getIndex(i - 1, j, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rY);\r\n            makeSection();\r\n        }\r\n\r\n        if(rZ) {\r\n            A = getBetween(getXYZV([getIndex(i - 0, j - 0, k)])[0], getXYZV([getIndex(i - 0, j - 0, k - 1)])[0], rZ);\r\n            B = getBetween(getXYZV([getIndex(i - 0, j - 1, k)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rZ);\r\n            C = getBetween(getXYZV([getIndex(i - 1, j - 1, k)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rZ);\r\n            D = getBetween(getXYZV([getIndex(i - 1, j - 0, k)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rZ);\r\n            makeSection();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function begin3dCell(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max, isEven) {\r\n        // used to create spaceframe and/or iso-surfaces\r\n\r\n        var cellStyle = style;\r\n        if(isEven) {\r\n            if(drawingSurface && style === 'even') cellStyle = null;\r\n            return addCube(cellStyle, p000, p001, p010, p011, p100, p101, p110, p111, min, max);\r\n        } else {\r\n            if(drawingSurface && style === 'odd') cellStyle = null;\r\n            return addCube(cellStyle, p111, p110, p101, p100, p011, p010, p001, p000, min, max);\r\n        }\r\n    }\r\n\r\n    function draw2dX(style, items, min, max, previousResult) {\r\n        var result = [];\r\n        var n = 0;\r\n        for(var q = 0; q < items.length; q++) {\r\n            var i = items[q];\r\n            for(var k = 1; k < depth; k++) {\r\n                for(var j = 1; j < height; j++) {\r\n                    result.push(\r\n                        begin2dCell(style,\r\n                            getIndex(i, j - 1, k - 1),\r\n                            getIndex(i, j - 1, k),\r\n                            getIndex(i, j, k - 1),\r\n                            getIndex(i, j, k),\r\n                            min,\r\n                            max,\r\n                            (i + j + k) % 2,\r\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\r\n                        )\r\n                    );\r\n                    n++;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function draw2dY(style, items, min, max, previousResult) {\r\n        var result = [];\r\n        var n = 0;\r\n        for(var q = 0; q < items.length; q++) {\r\n            var j = items[q];\r\n            for(var i = 1; i < width; i++) {\r\n                for(var k = 1; k < depth; k++) {\r\n                    result.push(\r\n                        begin2dCell(style,\r\n                            getIndex(i - 1, j, k - 1),\r\n                            getIndex(i, j, k - 1),\r\n                            getIndex(i - 1, j, k),\r\n                            getIndex(i, j, k),\r\n                            min,\r\n                            max,\r\n                            (i + j + k) % 2,\r\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\r\n                        )\r\n                    );\r\n                    n++;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function draw2dZ(style, items, min, max, previousResult) {\r\n        var result = [];\r\n        var n = 0;\r\n        for(var q = 0; q < items.length; q++) {\r\n            var k = items[q];\r\n            for(var j = 1; j < height; j++) {\r\n                for(var i = 1; i < width; i++) {\r\n                    result.push(\r\n                        begin2dCell(style,\r\n                            getIndex(i - 1, j - 1, k),\r\n                            getIndex(i - 1, j, k),\r\n                            getIndex(i, j - 1, k),\r\n                            getIndex(i, j, k),\r\n                            min,\r\n                            max,\r\n                            (i + j + k) % 2,\r\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\r\n                        )\r\n                    );\r\n                    n++;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function draw3d(style, min, max) {\r\n        for(var k = 1; k < depth; k++) {\r\n            for(var j = 1; j < height; j++) {\r\n                for(var i = 1; i < width; i++) {\r\n                    begin3dCell(style,\r\n                        getIndex(i - 1, j - 1, k - 1),\r\n                        getIndex(i - 1, j - 1, k),\r\n                        getIndex(i - 1, j, k - 1),\r\n                        getIndex(i - 1, j, k),\r\n                        getIndex(i, j - 1, k - 1),\r\n                        getIndex(i, j - 1, k),\r\n                        getIndex(i, j, k - 1),\r\n                        getIndex(i, j, k),\r\n                        min,\r\n                        max,\r\n                        (i + j + k) % 2\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function drawSpaceframe(style, min, max) {\r\n        drawingSpaceframe = true;\r\n        draw3d(style, min, max);\r\n        drawingSpaceframe = false;\r\n    }\r\n\r\n    function drawSurface(style, min, max) {\r\n        drawingSurface = true;\r\n        draw3d(style, min, max);\r\n        drawingSurface = false;\r\n    }\r\n\r\n    function drawSectionX(style, items, min, max, distRatios, previousResult) {\r\n        var result = [];\r\n        var n = 0;\r\n        for(var q = 0; q < items.length; q++) {\r\n            var i = items[q];\r\n            for(var k = 1; k < depth; k++) {\r\n                for(var j = 1; j < height; j++) {\r\n                    result.push(\r\n                        beginSection(style, i, j, k, min, max, distRatios[q],\r\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\r\n                        )\r\n                    );\r\n                    n++;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function drawSectionY(style, items, min, max, distRatios, previousResult) {\r\n        var result = [];\r\n        var n = 0;\r\n        for(var q = 0; q < items.length; q++) {\r\n            var j = items[q];\r\n            for(var i = 1; i < width; i++) {\r\n                for(var k = 1; k < depth; k++) {\r\n                    result.push(\r\n                        beginSection(style, i, j, k, min, max, distRatios[q],\r\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\r\n                        )\r\n                    );\r\n                    n++;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function drawSectionZ(style, items, min, max, distRatios, previousResult) {\r\n        var result = [];\r\n        var n = 0;\r\n        for(var q = 0; q < items.length; q++) {\r\n            var k = items[q];\r\n            for(var j = 1; j < height; j++) {\r\n                for(var i = 1; i < width; i++) {\r\n                    result.push(\r\n                        beginSection(style, i, j, k, min, max, distRatios[q],\r\n                            (previousResult && previousResult[n]) ? previousResult[n] : []\r\n                        )\r\n                    );\r\n                    n++;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function createRange(a, b) {\r\n        var range = [];\r\n        for(var q = a; q < b; q++) {\r\n            range.push(q);\r\n        }\r\n        return range;\r\n    }\r\n\r\n    function insertGridPoints() {\r\n        for(var i = 0; i < width; i++) {\r\n            for(var j = 0; j < height; j++) {\r\n                for(var k = 0; k < depth; k++) {\r\n                    var index = getIndex(i, j, k);\r\n                    addVertex(\r\n                        data._x[index],\r\n                        data._y[index],\r\n                        data._z[index],\r\n                        data._value[index]\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function drawAll() {\r\n        emptyVertices();\r\n\r\n        // insert grid points\r\n        insertGridPoints();\r\n\r\n        var activeStyle = null;\r\n\r\n        // draw spaceframes\r\n        if(showSpaceframe && spaceframeFill) {\r\n            setFill(spaceframeFill);\r\n\r\n            drawSpaceframe(activeStyle, vMin, vMax);\r\n        }\r\n\r\n        // draw iso-surfaces\r\n        if(showSurface && surfaceFill) {\r\n            setFill(surfaceFill);\r\n\r\n            var surfacePattern = data.surface.pattern;\r\n            var surfaceCount = data.surface.count;\r\n            for(var q = 0; q < surfaceCount; q++) {\r\n                var ratio = (surfaceCount === 1) ? 0.5 : q / (surfaceCount - 1);\r\n                var level = (1 - ratio) * vMin + ratio * vMax;\r\n\r\n                var d1 = Math.abs(level - minValues);\r\n                var d2 = Math.abs(level - maxValues);\r\n                var ranges = (d1 > d2) ?\r\n                    [minValues, level] :\r\n                    [level, maxValues];\r\n\r\n                drawSurface(surfacePattern, ranges[0], ranges[1]);\r\n            }\r\n        }\r\n\r\n        var setupMinMax = [\r\n            [ Math.min(vMin, maxValues), Math.max(vMin, maxValues) ],\r\n            [ Math.min(minValues, vMax), Math.max(minValues, vMax) ]\r\n        ];\r\n\r\n        ['x', 'y', 'z'].forEach(function(e) {\r\n            var preRes = [];\r\n            for(var s = 0; s < setupMinMax.length; s++) {\r\n                var count = 0;\r\n\r\n                var activeMin = setupMinMax[s][0];\r\n                var activeMax = setupMinMax[s][1];\r\n\r\n                // draw slices\r\n                var slice = data.slices[e];\r\n                if(slice.show && slice.fill) {\r\n                    setFill(slice.fill);\r\n\r\n                    var exactIndices = [];\r\n                    var ceilIndices = [];\r\n                    var distRatios = [];\r\n                    if(slice.locations.length) {\r\n                        for(var q = 0; q < slice.locations.length; q++) {\r\n                            var near = findNearestOnAxis(\r\n                                slice.locations[q],\r\n                                (e === 'x') ? Xs :\r\n                                (e === 'y') ? Ys : Zs\r\n                            );\r\n\r\n                            if(near.distRatio === 0) {\r\n                                exactIndices.push(near.id);\r\n                            } else if(near.id > 0) {\r\n                                ceilIndices.push(near.id);\r\n                                if(e === 'x') {\r\n                                    distRatios.push([near.distRatio, 0, 0]);\r\n                                } else if(e === 'y') {\r\n                                    distRatios.push([0, near.distRatio, 0]);\r\n                                } else {\r\n                                    distRatios.push([0, 0, near.distRatio]);\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if(e === 'x') {\r\n                            exactIndices = createRange(1, width - 1);\r\n                        } else if(e === 'y') {\r\n                            exactIndices = createRange(1, height - 1);\r\n                        } else {\r\n                            exactIndices = createRange(1, depth - 1);\r\n                        }\r\n                    }\r\n\r\n                    if(ceilIndices.length > 0) {\r\n                        if(e === 'x') {\r\n                            preRes[count] = drawSectionX(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\r\n                        } else if(e === 'y') {\r\n                            preRes[count] = drawSectionY(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\r\n                        } else {\r\n                            preRes[count] = drawSectionZ(activeStyle, ceilIndices, activeMin, activeMax, distRatios, preRes[count]);\r\n                        }\r\n                        count++;\r\n                    }\r\n\r\n                    if(exactIndices.length > 0) {\r\n                        if(e === 'x') {\r\n                            preRes[count] = draw2dX(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\r\n                        } else if(e === 'y') {\r\n                            preRes[count] = draw2dY(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\r\n                        } else {\r\n                            preRes[count] = draw2dZ(activeStyle, exactIndices, activeMin, activeMax, preRes[count]);\r\n                        }\r\n                        count++;\r\n                    }\r\n                }\r\n\r\n                // draw caps\r\n                var cap = data.caps[e];\r\n                if(cap.show && cap.fill) {\r\n                    setFill(cap.fill);\r\n                    if(e === 'x') {\r\n                        preRes[count] = draw2dX(activeStyle, [0, width - 1], activeMin, activeMax, preRes[count]);\r\n                    } else if(e === 'y') {\r\n                        preRes[count] = draw2dY(activeStyle, [0, height - 1], activeMin, activeMax, preRes[count]);\r\n                    } else {\r\n                        preRes[count] = draw2dZ(activeStyle, [0, depth - 1], activeMin, activeMax, preRes[count]);\r\n                    }\r\n                    count++;\r\n                }\r\n            }\r\n        });\r\n\r\n        // remove vertices arrays (i.e. grid points) in case no face was created.\r\n        if(numFaces === 0) {\r\n            emptyVertices();\r\n        }\r\n\r\n        data._meshX = allXs;\r\n        data._meshY = allYs;\r\n        data._meshZ = allZs;\r\n        data._meshIntensity = allVs;\r\n\r\n        data._Xs = Xs;\r\n        data._Ys = Ys;\r\n        data._Zs = Zs;\r\n    }\r\n\r\n    drawAll();\r\n\r\n    return data;\r\n}\r\n\r\nfunction createIsosurfaceTrace(scene, data) {\r\n    var gl = scene.glplot.gl;\r\n    var mesh = createMesh({gl: gl});\r\n    var result = new IsosurfaceTrace(scene, mesh, data.uid);\r\n\r\n    mesh._trace = result;\r\n    result.update(data);\r\n    scene.glplot.add(mesh);\r\n    return result;\r\n}\r\n\r\nmodule.exports = {\r\n    findNearestOnAxis: findNearestOnAxis,\r\n    generateIsoMeshes: generateIsoMeshes,\r\n    createIsosurfaceTrace: createIsosurfaceTrace,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}