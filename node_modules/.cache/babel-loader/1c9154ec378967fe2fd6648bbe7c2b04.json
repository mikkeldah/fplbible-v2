{"ast":null,"code":"/*\r\n * World Calendars\r\n * https://github.com/alexcjohnson/world-calendars\r\n *\r\n * Batch-converted from kbwood/calendars\r\n * Many thanks to Keith Wood and all of the contributors to the original project!\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n\n/* http://keith-wood.name/calendars.html\r\n  Mayan calendar for jQuery v2.0.2.\r\n  Written by Keith Wood (wood.keith{at}optusnet.com.au) August 2009.\r\n  Available under the MIT (http://keith-wood.name/licence.html) license. \r\n  Please attribute the author if you use it. */\nvar main = require('../main');\n\nvar assign = require('object-assign');\n/** Implementation of the Mayan Long Count calendar.\r\n    See also <a href=\"http://en.wikipedia.org/wiki/Mayan_calendar\">http://en.wikipedia.org/wiki/Mayan_calendar</a>.\r\n    @class MayanCalendar\r\n    @param [language=''] {string} The language code (default English) for localisation. */\n\n\nfunction MayanCalendar(language) {\n  this.local = this.regionalOptions[language || ''] || this.regionalOptions[''];\n}\n\nMayanCalendar.prototype = new main.baseCalendar();\nassign(MayanCalendar.prototype, {\n  /** The calendar name.\r\n      @memberof MayanCalendar */\n  name: 'Mayan',\n\n  /** Julian date of start of Mayan epoch: 11 August 3114 BCE.\r\n      @memberof MayanCalendar */\n  jdEpoch: 584282.5,\n\n  /** <code>true</code> if has a year zero, <code>false</code> if not.\r\n      @memberof MayanCalendar */\n  hasYearZero: true,\n\n  /** The minimum month number.\r\n      @memberof MayanCalendar */\n  minMonth: 0,\n\n  /** The first month in the year.\r\n      @memberof MayanCalendar */\n  firstMonth: 0,\n\n  /** The minimum day number.\r\n      @memberof MayanCalendar */\n  minDay: 0,\n\n  /** Localisations for the plugin.\r\n      Entries are objects indexed by the language code ('' being the default US/English).\r\n      Each object has the following attributes.\r\n      @memberof MayanCalendar\r\n      @property name {string} The calendar name.\r\n      @property epochs {string[]} The epoch names.\r\n      @property monthNames {string[]} The long names of the months of the year.\r\n      @property monthNamesShort {string[]} The short names of the months of the year.\r\n      @property dayNames {string[]} The long names of the days of the week.\r\n      @property dayNamesShort {string[]} The short names of the days of the week.\r\n      @property dayNamesMin {string[]} The minimal names of the days of the week.\r\n      @property dateFormat {string} The date format for this calendar.\r\n              See the options on <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a> for details.\r\n      @property firstDay {number} The number of the first day of the week, starting at 0.\r\n      @property isRTL {number} <code>true</code> if this localisation reads right-to-left.\r\n      @property haabMonths {string[]} The names of the Haab months.\r\n      @property tzolkinMonths {string[]} The names of the Tzolkin months. */\n  regionalOptions: {\n    // Localisations\n    '': {\n      name: 'Mayan',\n      epochs: ['', ''],\n      monthNames: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17'],\n      monthNamesShort: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17'],\n      dayNames: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n      dayNamesShort: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n      dayNamesMin: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n      digits: null,\n      dateFormat: 'YYYY.m.d',\n      firstDay: 0,\n      isRTL: false,\n      haabMonths: ['Pop', 'Uo', 'Zip', 'Zotz', 'Tzec', 'Xul', 'Yaxkin', 'Mol', 'Chen', 'Yax', 'Zac', 'Ceh', 'Mac', 'Kankin', 'Muan', 'Pax', 'Kayab', 'Cumku', 'Uayeb'],\n      tzolkinMonths: ['Imix', 'Ik', 'Akbal', 'Kan', 'Chicchan', 'Cimi', 'Manik', 'Lamat', 'Muluc', 'Oc', 'Chuen', 'Eb', 'Ben', 'Ix', 'Men', 'Cib', 'Caban', 'Etznab', 'Cauac', 'Ahau']\n    }\n  },\n\n  /** Determine whether this date is in a leap year.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to examine or the year to examine.\r\n      @return {boolean} <code>true</code> if this is a leap year, <code>false</code> if not.\r\n      @throws Error if an invalid year or a different calendar used. */\n  leapYear: function (year) {\n    this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n\n    return false;\n  },\n\n  /** Format the year, if not a simple sequential number.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to format or the year to format.\r\n      @return {string} The formatted year.\r\n      @throws Error if an invalid year or a different calendar used. */\n  formatYear: function (year) {\n    var date = this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n\n    year = date.year();\n    var baktun = Math.floor(year / 400);\n    year = year % 400;\n    year += year < 0 ? 400 : 0;\n    var katun = Math.floor(year / 20);\n    return baktun + '.' + katun + '.' + year % 20;\n  },\n\n  /** Convert from the formatted year back to a single number.\r\n      @memberof MayanCalendar\r\n      @param years {string} The year as n.n.n.\r\n      @return {number} The sequential year.\r\n      @throws Error if an invalid value is supplied. */\n  forYear: function (years) {\n    years = years.split('.');\n\n    if (years.length < 3) {\n      throw 'Invalid Mayan year';\n    }\n\n    var year = 0;\n\n    for (var i = 0; i < years.length; i++) {\n      var y = parseInt(years[i], 10);\n\n      if (Math.abs(y) > 19 || i > 0 && y < 0) {\n        throw 'Invalid Mayan year';\n      }\n\n      year = year * 20 + y;\n    }\n\n    return year;\n  },\n\n  /** Retrieve the number of months in a year.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to examine or the year to examine.\r\n      @return {number} The number of months.\r\n      @throws Error if an invalid year or a different calendar used. */\n  monthsInYear: function (year) {\n    this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n\n    return 18;\n  },\n\n  /** Determine the week of the year for a date.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to examine or the year to examine.\r\n      @param [month] {number} The month to examine.\r\n      @param [day] {number} The day to examine.\r\n      @return {number} The week of the year.\r\n      @throws Error if an invalid date or a different calendar used. */\n  weekOfYear: function (year, month, day) {\n    this._validate(year, month, day, main.local.invalidDate);\n\n    return 0;\n  },\n\n  /** Retrieve the number of days in a year.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to examine or the year to examine.\r\n      @return {number} The number of days.\r\n      @throws Error if an invalid year or a different calendar used. */\n  daysInYear: function (year) {\n    this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n\n    return 360;\n  },\n\n  /** Retrieve the number of days in a month.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to examine or the year of the month.\r\n      @param [month] {number} The month.\r\n      @return {number} The number of days in this month.\r\n      @throws Error if an invalid month/year or a different calendar used. */\n  daysInMonth: function (year, month) {\n    this._validate(year, month, this.minDay, main.local.invalidMonth);\n\n    return 20;\n  },\n\n  /** Retrieve the number of days in a week.\r\n      @memberof MayanCalendar\r\n      @return {number} The number of days. */\n  daysInWeek: function () {\n    return 5; // Just for formatting\n  },\n\n  /** Retrieve the day of the week for a date.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to examine or the year to examine.\r\n      @param [month] {number} The month to examine.\r\n      @param [day] {number} The day to examine.\r\n      @return {number} The day of the week: 0 to number of days - 1.\r\n      @throws Error if an invalid date or a different calendar used. */\n  dayOfWeek: function (year, month, day) {\n    var date = this._validate(year, month, day, main.local.invalidDate);\n\n    return date.day();\n  },\n\n  /** Determine whether this date is a week day.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to examine or the year to examine.\r\n      @param [month] {number} The month to examine.\r\n      @param [day] {number} The day to examine.\r\n      @return {boolean} <code>true</code> if a week day, <code>false</code> if not.\r\n      @throws Error if an invalid date or a different calendar used. */\n  weekDay: function (year, month, day) {\n    this._validate(year, month, day, main.local.invalidDate);\n\n    return true;\n  },\n\n  /** Retrieve additional information about a date - Haab and Tzolkin equivalents.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to examine or the year to examine.\r\n      @param [month] {number} The month to examine.\r\n      @param [day] {number} The day to examine.\r\n      @return {object} Additional information - contents depends on calendar.\r\n      @throws Error if an invalid date or a different calendar used. */\n  extraInfo: function (year, month, day) {\n    var date = this._validate(year, month, day, main.local.invalidDate);\n\n    var jd = date.toJD();\n\n    var haab = this._toHaab(jd);\n\n    var tzolkin = this._toTzolkin(jd);\n\n    return {\n      haabMonthName: this.local.haabMonths[haab[0] - 1],\n      haabMonth: haab[0],\n      haabDay: haab[1],\n      tzolkinDayName: this.local.tzolkinMonths[tzolkin[0] - 1],\n      tzolkinDay: tzolkin[0],\n      tzolkinTrecena: tzolkin[1]\n    };\n  },\n\n  /** Retrieve Haab date from a Julian date.\r\n      @memberof MayanCalendar\r\n      @private\r\n      @param jd  {number} The Julian date.\r\n      @return {number[]} Corresponding Haab month and day. */\n  _toHaab: function (jd) {\n    jd -= this.jdEpoch;\n    var day = mod(jd + 8 + (18 - 1) * 20, 365);\n    return [Math.floor(day / 20) + 1, mod(day, 20)];\n  },\n\n  /** Retrieve Tzolkin date from a Julian date.\r\n      @memberof MayanCalendar\r\n      @private\r\n      @param jd {number} The Julian date.\r\n      @return {number[]} Corresponding Tzolkin day and trecena. */\n  _toTzolkin: function (jd) {\n    jd -= this.jdEpoch;\n    return [amod(jd + 20, 20), amod(jd + 4, 13)];\n  },\n\n  /** Retrieve the Julian date equivalent for this date,\r\n      i.e. days since January 1, 4713 BCE Greenwich noon.\r\n      @memberof MayanCalendar\r\n      @param year {CDate|number} The date to convert or the year to convert.\r\n      @param [month] {number} The month to convert.\r\n      @param [day] {number} The day to convert.\r\n      @return {number} The equivalent Julian date.\r\n      @throws Error if an invalid date or a different calendar used. */\n  toJD: function (year, month, day) {\n    var date = this._validate(year, month, day, main.local.invalidDate);\n\n    return date.day() + date.month() * 20 + date.year() * 360 + this.jdEpoch;\n  },\n\n  /** Create a new date from a Julian date.\r\n      @memberof MayanCalendar\r\n      @param jd {number} The Julian date to convert.\r\n      @return {CDate} The equivalent date. */\n  fromJD: function (jd) {\n    jd = Math.floor(jd) + 0.5 - this.jdEpoch;\n    var year = Math.floor(jd / 360);\n    jd = jd % 360;\n    jd += jd < 0 ? 360 : 0;\n    var month = Math.floor(jd / 20);\n    var day = jd % 20;\n    return this.newDate(year, month, day);\n  }\n}); // Modulus function which works for non-integers.\n\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n} // Modulus function which returns numerator if modulus is zero.\n\n\nfunction amod(a, b) {\n  return mod(a - 1, b) + 1;\n} // Mayan calendar implementation\n\n\nmain.calendars.mayan = MayanCalendar;","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/world-calendars/dist/calendars/mayan.js"],"names":["main","require","assign","MayanCalendar","language","local","regionalOptions","prototype","baseCalendar","name","jdEpoch","hasYearZero","minMonth","firstMonth","minDay","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","digits","dateFormat","firstDay","isRTL","haabMonths","tzolkinMonths","leapYear","year","_validate","invalidYear","formatYear","date","baktun","Math","floor","katun","forYear","years","split","length","i","y","parseInt","abs","monthsInYear","weekOfYear","month","day","invalidDate","daysInYear","daysInMonth","invalidMonth","daysInWeek","dayOfWeek","weekDay","extraInfo","jd","toJD","haab","_toHaab","tzolkin","_toTzolkin","haabMonthName","haabMonth","haabDay","tzolkinDayName","tzolkinDay","tzolkinTrecena","mod","amod","fromJD","newDate","a","b","calendars","mayan"],"mappings":"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","sourcesContent":["/*\r\n * World Calendars\r\n * https://github.com/alexcjohnson/world-calendars\r\n *\r\n * Batch-converted from kbwood/calendars\r\n * Many thanks to Keith Wood and all of the contributors to the original project!\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n﻿/* http://keith-wood.name/calendars.html\r\n   Mayan calendar for jQuery v2.0.2.\r\n   Written by Keith Wood (wood.keith{at}optusnet.com.au) August 2009.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license. \r\n   Please attribute the author if you use it. */\r\n\r\nvar main = require('../main');\r\nvar assign = require('object-assign');\r\n\r\n\r\n/** Implementation of the Mayan Long Count calendar.\r\n    See also <a href=\"http://en.wikipedia.org/wiki/Mayan_calendar\">http://en.wikipedia.org/wiki/Mayan_calendar</a>.\r\n    @class MayanCalendar\r\n    @param [language=''] {string} The language code (default English) for localisation. */\r\nfunction MayanCalendar(language) {\r\n    this.local = this.regionalOptions[language || ''] || this.regionalOptions[''];\r\n}\r\n\r\nMayanCalendar.prototype = new main.baseCalendar;\r\n\r\nassign(MayanCalendar.prototype, {\r\n    /** The calendar name.\r\n        @memberof MayanCalendar */\r\n    name: 'Mayan',\r\n    /** Julian date of start of Mayan epoch: 11 August 3114 BCE.\r\n        @memberof MayanCalendar */\r\n    jdEpoch: 584282.5,\r\n    /** <code>true</code> if has a year zero, <code>false</code> if not.\r\n        @memberof MayanCalendar */\r\n    hasYearZero: true,\r\n    /** The minimum month number.\r\n        @memberof MayanCalendar */\r\n    minMonth: 0,\r\n    /** The first month in the year.\r\n        @memberof MayanCalendar */\r\n    firstMonth: 0,\r\n    /** The minimum day number.\r\n        @memberof MayanCalendar */\r\n    minDay: 0,\r\n\r\n    /** Localisations for the plugin.\r\n        Entries are objects indexed by the language code ('' being the default US/English).\r\n        Each object has the following attributes.\r\n        @memberof MayanCalendar\r\n        @property name {string} The calendar name.\r\n        @property epochs {string[]} The epoch names.\r\n        @property monthNames {string[]} The long names of the months of the year.\r\n        @property monthNamesShort {string[]} The short names of the months of the year.\r\n        @property dayNames {string[]} The long names of the days of the week.\r\n        @property dayNamesShort {string[]} The short names of the days of the week.\r\n        @property dayNamesMin {string[]} The minimal names of the days of the week.\r\n        @property dateFormat {string} The date format for this calendar.\r\n                See the options on <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a> for details.\r\n        @property firstDay {number} The number of the first day of the week, starting at 0.\r\n        @property isRTL {number} <code>true</code> if this localisation reads right-to-left.\r\n        @property haabMonths {string[]} The names of the Haab months.\r\n        @property tzolkinMonths {string[]} The names of the Tzolkin months. */\r\n    regionalOptions: { // Localisations\r\n        '': {\r\n            name: 'Mayan',\r\n            epochs: ['', ''],\r\n            monthNames: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n            '10', '11', '12', '13', '14', '15', '16', '17'],\r\n            monthNamesShort: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n            '10', '11', '12', '13', '14', '15', '16', '17'],\r\n            dayNames: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n            '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\r\n            dayNamesShort: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n            '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\r\n            dayNamesMin: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n            '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\r\n            digits: null,\r\n            dateFormat: 'YYYY.m.d',\r\n            firstDay: 0,\r\n            isRTL: false,\r\n            haabMonths: ['Pop', 'Uo', 'Zip', 'Zotz', 'Tzec', 'Xul', 'Yaxkin', 'Mol', 'Chen', 'Yax',\r\n            'Zac', 'Ceh', 'Mac', 'Kankin', 'Muan', 'Pax', 'Kayab', 'Cumku', 'Uayeb'],\r\n            tzolkinMonths: ['Imix', 'Ik', 'Akbal', 'Kan', 'Chicchan', 'Cimi', 'Manik', 'Lamat', 'Muluc', 'Oc',\r\n            'Chuen', 'Eb', 'Ben', 'Ix', 'Men', 'Cib', 'Caban', 'Etznab', 'Cauac', 'Ahau']\r\n        }\r\n    },\r\n\r\n    /** Determine whether this date is in a leap year.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to examine or the year to examine.\r\n        @return {boolean} <code>true</code> if this is a leap year, <code>false</code> if not.\r\n        @throws Error if an invalid year or a different calendar used. */\r\n    leapYear: function(year) {\r\n        this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\r\n        return false;\r\n    },\r\n\r\n    /** Format the year, if not a simple sequential number.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to format or the year to format.\r\n        @return {string} The formatted year.\r\n        @throws Error if an invalid year or a different calendar used. */\r\n    formatYear: function(year) {\r\n        var date = this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\r\n        year = date.year();\r\n        var baktun = Math.floor(year / 400);\r\n        year = year % 400;\r\n        year += (year < 0 ? 400 : 0);\r\n        var katun = Math.floor(year / 20);\r\n        return baktun + '.' + katun + '.' + (year % 20);\r\n    },\r\n\r\n    /** Convert from the formatted year back to a single number.\r\n        @memberof MayanCalendar\r\n        @param years {string} The year as n.n.n.\r\n        @return {number} The sequential year.\r\n        @throws Error if an invalid value is supplied. */\r\n    forYear: function(years) {\r\n        years = years.split('.');\r\n        if (years.length < 3) {\r\n            throw 'Invalid Mayan year';\r\n        }\r\n        var year = 0;\r\n        for (var i = 0; i < years.length; i++) {\r\n            var y = parseInt(years[i], 10);\r\n            if (Math.abs(y) > 19 || (i > 0 && y < 0)) {\r\n                throw 'Invalid Mayan year';\r\n            }\r\n            year = year * 20 + y;\r\n        }\r\n        return year;\r\n    },\r\n\r\n    /** Retrieve the number of months in a year.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to examine or the year to examine.\r\n        @return {number} The number of months.\r\n        @throws Error if an invalid year or a different calendar used. */\r\n    monthsInYear: function(year) {\r\n        this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\r\n        return 18;\r\n    },\r\n\r\n    /** Determine the week of the year for a date.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to examine or the year to examine.\r\n        @param [month] {number} The month to examine.\r\n        @param [day] {number} The day to examine.\r\n        @return {number} The week of the year.\r\n        @throws Error if an invalid date or a different calendar used. */\r\n    weekOfYear: function(year, month, day) {\r\n        this._validate(year, month, day, main.local.invalidDate);\r\n        return 0;\r\n    },\r\n\r\n    /** Retrieve the number of days in a year.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to examine or the year to examine.\r\n        @return {number} The number of days.\r\n        @throws Error if an invalid year or a different calendar used. */\r\n    daysInYear: function(year) {\r\n        this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\r\n        return 360;\r\n    },\r\n\r\n    /** Retrieve the number of days in a month.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to examine or the year of the month.\r\n        @param [month] {number} The month.\r\n        @return {number} The number of days in this month.\r\n        @throws Error if an invalid month/year or a different calendar used. */\r\n    daysInMonth: function(year, month) {\r\n        this._validate(year, month, this.minDay, main.local.invalidMonth);\r\n        return 20;\r\n    },\r\n\r\n    /** Retrieve the number of days in a week.\r\n        @memberof MayanCalendar\r\n        @return {number} The number of days. */\r\n    daysInWeek: function() {\r\n        return 5; // Just for formatting\r\n    },\r\n\r\n    /** Retrieve the day of the week for a date.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to examine or the year to examine.\r\n        @param [month] {number} The month to examine.\r\n        @param [day] {number} The day to examine.\r\n        @return {number} The day of the week: 0 to number of days - 1.\r\n        @throws Error if an invalid date or a different calendar used. */\r\n    dayOfWeek: function(year, month, day) {\r\n        var date = this._validate(year, month, day, main.local.invalidDate);\r\n        return date.day();\r\n    },\r\n\r\n    /** Determine whether this date is a week day.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to examine or the year to examine.\r\n        @param [month] {number} The month to examine.\r\n        @param [day] {number} The day to examine.\r\n        @return {boolean} <code>true</code> if a week day, <code>false</code> if not.\r\n        @throws Error if an invalid date or a different calendar used. */\r\n    weekDay: function(year, month, day) {\r\n        this._validate(year, month, day, main.local.invalidDate);\r\n        return true;\r\n    },\r\n\r\n    /** Retrieve additional information about a date - Haab and Tzolkin equivalents.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to examine or the year to examine.\r\n        @param [month] {number} The month to examine.\r\n        @param [day] {number} The day to examine.\r\n        @return {object} Additional information - contents depends on calendar.\r\n        @throws Error if an invalid date or a different calendar used. */\r\n    extraInfo: function(year, month, day) {\r\n        var date = this._validate(year, month, day, main.local.invalidDate);\r\n        var jd = date.toJD();\r\n        var haab = this._toHaab(jd);\r\n        var tzolkin = this._toTzolkin(jd);\r\n        return {haabMonthName: this.local.haabMonths[haab[0] - 1],\r\n            haabMonth: haab[0], haabDay: haab[1],\r\n            tzolkinDayName: this.local.tzolkinMonths[tzolkin[0] - 1],\r\n            tzolkinDay: tzolkin[0], tzolkinTrecena: tzolkin[1]};\r\n    },\r\n\r\n    /** Retrieve Haab date from a Julian date.\r\n        @memberof MayanCalendar\r\n        @private\r\n        @param jd  {number} The Julian date.\r\n        @return {number[]} Corresponding Haab month and day. */\r\n    _toHaab: function(jd) {\r\n        jd -= this.jdEpoch;\r\n        var day = mod(jd + 8 + ((18 - 1) * 20), 365);\r\n        return [Math.floor(day / 20) + 1, mod(day, 20)];\r\n    },\r\n\r\n    /** Retrieve Tzolkin date from a Julian date.\r\n        @memberof MayanCalendar\r\n        @private\r\n        @param jd {number} The Julian date.\r\n        @return {number[]} Corresponding Tzolkin day and trecena. */\r\n    _toTzolkin: function(jd) {\r\n        jd -= this.jdEpoch;\r\n        return [amod(jd + 20, 20), amod(jd + 4, 13)];\r\n    },\r\n\r\n    /** Retrieve the Julian date equivalent for this date,\r\n        i.e. days since January 1, 4713 BCE Greenwich noon.\r\n        @memberof MayanCalendar\r\n        @param year {CDate|number} The date to convert or the year to convert.\r\n        @param [month] {number} The month to convert.\r\n        @param [day] {number} The day to convert.\r\n        @return {number} The equivalent Julian date.\r\n        @throws Error if an invalid date or a different calendar used. */\r\n    toJD: function(year, month, day) {\r\n        var date = this._validate(year, month, day, main.local.invalidDate);\r\n        return date.day() + (date.month() * 20) + (date.year() * 360) + this.jdEpoch;\r\n    },\r\n\r\n    /** Create a new date from a Julian date.\r\n        @memberof MayanCalendar\r\n        @param jd {number} The Julian date to convert.\r\n        @return {CDate} The equivalent date. */\r\n    fromJD: function(jd) {\r\n        jd = Math.floor(jd) + 0.5 - this.jdEpoch;\r\n        var year = Math.floor(jd / 360);\r\n        jd = jd % 360;\r\n        jd += (jd < 0 ? 360 : 0);\r\n        var month = Math.floor(jd / 20);\r\n        var day = jd % 20;\r\n        return this.newDate(year, month, day);\r\n    }\r\n});\r\n\r\n// Modulus function which works for non-integers.\r\nfunction mod(a, b) {\r\n    return a - (b * Math.floor(a / b));\r\n}\r\n\r\n// Modulus function which returns numerator if modulus is zero.\r\nfunction amod(a, b) {\r\n    return mod(a - 1, b) + 1;\r\n}\r\n\r\n// Mayan calendar implementation\r\nmain.calendars.mayan = MayanCalendar;\r\n\r\n"]},"metadata":{},"sourceType":"script"}