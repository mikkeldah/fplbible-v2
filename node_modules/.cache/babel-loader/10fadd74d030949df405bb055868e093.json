{"ast":null,"code":"'use strict';\n\nvar Transform = require('stream').Transform;\n\nvar streamParser = require('stream-parser');\n\nfunction ParserStream() {\n  Transform.call(this, {\n    readableObjectMode: true\n  });\n} // Inherit from Transform\n\n\nParserStream.prototype = Object.create(Transform.prototype);\nParserStream.prototype.constructor = ParserStream;\nstreamParser(ParserStream.prototype);\nexports.ParserStream = ParserStream;\n\nexports.sliceEq = function (src, start, dest) {\n  for (var i = start, j = 0; j < dest.length;) {\n    if (src[i++] !== dest[j++]) return false;\n  }\n\n  return true;\n};\n\nexports.str2arr = function (str, format) {\n  var arr = [],\n      i = 0;\n\n  if (format && format === 'hex') {\n    while (i < str.length) {\n      arr.push(parseInt(str.slice(i, i + 2), 16));\n      i += 2;\n    }\n  } else {\n    for (; i < str.length; i++) {\n      /* eslint-disable no-bitwise */\n      arr.push(str.charCodeAt(i) & 0xFF);\n    }\n  }\n\n  return arr;\n};\n\nexports.readUInt16LE = function (data, offset) {\n  return data[offset] | data[offset + 1] << 8;\n};\n\nexports.readUInt16BE = function (data, offset) {\n  return data[offset + 1] | data[offset] << 8;\n};\n\nexports.readUInt32LE = function (data, offset) {\n  return data[offset] | data[offset + 1] << 8 | data[offset + 2] << 16 | data[offset + 3] * 0x1000000;\n};\n\nexports.readUInt32BE = function (data, offset) {\n  return data[offset + 3] | data[offset + 2] << 8 | data[offset + 1] << 16 | data[offset] * 0x1000000;\n};\n\nfunction ProbeError(message, code, statusCode) {\n  Error.call(this);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.message = message;\n  if (code) this.code = code;\n  if (statusCode) this.statusCode = statusCode;\n} // Inherit from Error\n\n\nProbeError.prototype = Object.create(Error.prototype);\nProbeError.prototype.constructor = ProbeError;\nexports.ProbeError = ProbeError;","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/probe-image-size/lib/common.js"],"names":["Transform","require","streamParser","ParserStream","call","readableObjectMode","prototype","Object","create","constructor","exports","sliceEq","src","start","dest","i","j","length","str2arr","str","format","arr","push","parseInt","slice","charCodeAt","readUInt16LE","data","offset","readUInt16BE","readUInt32LE","readUInt32BE","ProbeError","message","code","statusCode","Error","captureStackTrace","name"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n\r\nvar Transform    = require('stream').Transform;\r\nvar streamParser = require('stream-parser');\r\n\r\n\r\nfunction ParserStream() {\r\n  Transform.call(this, { readableObjectMode: true });\r\n}\r\n\r\n// Inherit from Transform\r\nParserStream.prototype = Object.create(Transform.prototype);\r\nParserStream.prototype.constructor = ParserStream;\r\n\r\nstreamParser(ParserStream.prototype);\r\n\r\n\r\nexports.ParserStream = ParserStream;\r\n\r\n\r\nexports.sliceEq = function (src, start, dest) {\r\n  for (var i = start, j = 0; j < dest.length;) {\r\n    if (src[i++] !== dest[j++]) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexports.str2arr = function (str, format) {\r\n  var arr = [], i = 0;\r\n\r\n  if (format && format === 'hex') {\r\n    while (i < str.length) {\r\n      arr.push(parseInt(str.slice(i, i + 2), 16));\r\n      i += 2;\r\n    }\r\n  } else {\r\n    for (; i < str.length; i++) {\r\n      /* eslint-disable no-bitwise */\r\n      arr.push(str.charCodeAt(i) & 0xFF);\r\n    }\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nexports.readUInt16LE = function (data, offset) {\r\n  return data[offset] | (data[offset + 1] << 8);\r\n};\r\n\r\nexports.readUInt16BE = function (data, offset) {\r\n  return data[offset + 1] | (data[offset] << 8);\r\n};\r\n\r\nexports.readUInt32LE = function (data, offset) {\r\n  return data[offset] |\r\n    (data[offset + 1] << 8) |\r\n    (data[offset + 2] << 16) |\r\n    (data[offset + 3] * 0x1000000);\r\n};\r\n\r\nexports.readUInt32BE = function (data, offset) {\r\n  return data[offset + 3] |\r\n    (data[offset + 2] << 8) |\r\n    (data[offset + 1] << 16) |\r\n    (data[offset] * 0x1000000);\r\n};\r\n\r\n\r\nfunction ProbeError(message, code, statusCode) {\r\n  Error.call(this);\r\n  Error.captureStackTrace(this, this.constructor);\r\n\r\n  this.name = this.constructor.name;\r\n\r\n  this.message = message;\r\n  if (code) this.code = code;\r\n  if (statusCode) this.statusCode = statusCode;\r\n}\r\n\r\n// Inherit from Error\r\nProbeError.prototype = Object.create(Error.prototype);\r\nProbeError.prototype.constructor = ProbeError;\r\n\r\n\r\nexports.ProbeError = ProbeError;\r\n"]},"metadata":{},"sourceType":"script"}