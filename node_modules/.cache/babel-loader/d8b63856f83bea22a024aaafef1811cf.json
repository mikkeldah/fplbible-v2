{"ast":null,"code":"\"use strict\";\n\nmodule.exports = orderSegments;\n\nvar orient = require(\"robust-orientation\");\n\nfunction horizontalOrder(a, b) {\n  var bl, br;\n\n  if (b[0][0] < b[1][0]) {\n    bl = b[0];\n    br = b[1];\n  } else if (b[0][0] > b[1][0]) {\n    bl = b[1];\n    br = b[0];\n  } else {\n    var alo = Math.min(a[0][1], a[1][1]);\n    var ahi = Math.max(a[0][1], a[1][1]);\n    var blo = Math.min(b[0][1], b[1][1]);\n    var bhi = Math.max(b[0][1], b[1][1]);\n\n    if (ahi < blo) {\n      return ahi - blo;\n    }\n\n    if (alo > bhi) {\n      return alo - bhi;\n    }\n\n    return ahi - bhi;\n  }\n\n  var al, ar;\n\n  if (a[0][1] < a[1][1]) {\n    al = a[0];\n    ar = a[1];\n  } else {\n    al = a[1];\n    ar = a[0];\n  }\n\n  var d = orient(br, bl, al);\n\n  if (d) {\n    return d;\n  }\n\n  d = orient(br, bl, ar);\n\n  if (d) {\n    return d;\n  }\n\n  return ar - br;\n}\n\nfunction orderSegments(b, a) {\n  var al, ar;\n\n  if (a[0][0] < a[1][0]) {\n    al = a[0];\n    ar = a[1];\n  } else if (a[0][0] > a[1][0]) {\n    al = a[1];\n    ar = a[0];\n  } else {\n    return horizontalOrder(a, b);\n  }\n\n  var bl, br;\n\n  if (b[0][0] < b[1][0]) {\n    bl = b[0];\n    br = b[1];\n  } else if (b[0][0] > b[1][0]) {\n    bl = b[1];\n    br = b[0];\n  } else {\n    return -horizontalOrder(b, a);\n  }\n\n  var d1 = orient(al, ar, br);\n  var d2 = orient(al, ar, bl);\n\n  if (d1 < 0) {\n    if (d2 <= 0) {\n      return d1;\n    }\n  } else if (d1 > 0) {\n    if (d2 >= 0) {\n      return d1;\n    }\n  } else if (d2) {\n    return d2;\n  }\n\n  d1 = orient(br, bl, ar);\n  d2 = orient(br, bl, al);\n\n  if (d1 < 0) {\n    if (d2 <= 0) {\n      return d1;\n    }\n  } else if (d1 > 0) {\n    if (d2 >= 0) {\n      return d1;\n    }\n  } else if (d2) {\n    return d2;\n  }\n\n  return ar[0] - br[0];\n}","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/slab-decomposition/lib/order-segments.js"],"names":["module","exports","orderSegments","orient","require","horizontalOrder","a","b","bl","br","alo","Math","min","ahi","max","blo","bhi","al","ar","d","d1","d2"],"mappings":"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","sourcesContent":["\"use strict\"\r\n\r\nmodule.exports = orderSegments\r\n\r\nvar orient = require(\"robust-orientation\")\r\n\r\nfunction horizontalOrder(a, b) {\r\n  var bl, br\r\n  if(b[0][0] < b[1][0]) {\r\n    bl = b[0]\r\n    br = b[1]\r\n  } else if(b[0][0] > b[1][0]) {\r\n    bl = b[1]\r\n    br = b[0]\r\n  } else {\r\n    var alo = Math.min(a[0][1], a[1][1])\r\n    var ahi = Math.max(a[0][1], a[1][1])\r\n    var blo = Math.min(b[0][1], b[1][1])\r\n    var bhi = Math.max(b[0][1], b[1][1])\r\n    if(ahi < blo) {\r\n      return ahi - blo\r\n    }\r\n    if(alo > bhi) {\r\n      return alo - bhi\r\n    }\r\n    return ahi - bhi\r\n  }\r\n  var al, ar\r\n  if(a[0][1] < a[1][1]) {\r\n    al = a[0]\r\n    ar = a[1]\r\n  } else {\r\n    al = a[1]\r\n    ar = a[0]\r\n  }\r\n  var d = orient(br, bl, al)\r\n  if(d) {\r\n    return d\r\n  }\r\n  d = orient(br, bl, ar)\r\n  if(d) {\r\n    return d\r\n  }\r\n  return ar - br\r\n}\r\n\r\nfunction orderSegments(b, a) {\r\n  var al, ar\r\n  if(a[0][0] < a[1][0]) {\r\n    al = a[0]\r\n    ar = a[1]\r\n  } else if(a[0][0] > a[1][0]) {\r\n    al = a[1]\r\n    ar = a[0]\r\n  } else {\r\n    return horizontalOrder(a, b)\r\n  }\r\n  var bl, br\r\n  if(b[0][0] < b[1][0]) {\r\n    bl = b[0]\r\n    br = b[1]\r\n  } else if(b[0][0] > b[1][0]) {\r\n    bl = b[1]\r\n    br = b[0]\r\n  } else {\r\n    return -horizontalOrder(b, a)\r\n  }\r\n  var d1 = orient(al, ar, br)\r\n  var d2 = orient(al, ar, bl)\r\n  if(d1 < 0) {\r\n    if(d2 <= 0) {\r\n      return d1\r\n    }\r\n  } else if(d1 > 0) {\r\n    if(d2 >= 0) {\r\n      return d1\r\n    }\r\n  } else if(d2) {\r\n    return d2\r\n  }\r\n  d1 = orient(br, bl, ar)\r\n  d2 = orient(br, bl, al)\r\n  if(d1 < 0) {\r\n    if(d2 <= 0) {\r\n      return d1\r\n    }\r\n  } else if(d1 > 0) {\r\n    if(d2 >= 0) {\r\n      return d1\r\n    }\r\n  } else if(d2) {\r\n    return d2\r\n  }\r\n  return ar[0] - br[0]\r\n}"]},"metadata":{},"sourceType":"script"}