{"ast":null,"code":"'use strict';\n\nvar Lib = require('../lib');\n\nvar Template = require('../plot_api/plot_template');\n/** Convenience wrapper for making array container logic DRY and consistent\r\n *\r\n * @param {object} parentObjIn\r\n *  user input object where the container in question is linked\r\n *  (i.e. either a user trace object or the user layout object)\r\n *\r\n * @param {object} parentObjOut\r\n *  full object where the coerced container will be linked\r\n *  (i.e. either a full trace object or the full layout object)\r\n *\r\n * @param {object} opts\r\n *  options object:\r\n *   - name {string}\r\n *      name of the key linking the container in question\r\n *   - inclusionAttr {string}\r\n *      name of the item attribute for inclusion/exclusion. Default is 'visible'.\r\n *      Since inclusion is true, use eg 'enabled' instead of 'disabled'.\r\n *   - handleItemDefaults {function}\r\n *      defaults method to be called on each item in the array container in question\r\n *\r\n *      Its arguments are:\r\n *          - itemIn {object} item in user layout\r\n *          - itemOut {object} item in full layout\r\n *          - parentObj {object} (as in closure)\r\n *          - opts {object} (as in closure)\r\n * N.B.\r\n *\r\n *  - opts is passed to handleItemDefaults so it can also store\r\n *    links to supplementary data (e.g. fullData for layout components)\r\n *\r\n */\n\n\nmodule.exports = function handleArrayContainerDefaults(parentObjIn, parentObjOut, opts) {\n  var name = opts.name;\n  var inclusionAttr = opts.inclusionAttr || 'visible';\n  var previousContOut = parentObjOut[name];\n  var contIn = Lib.isArrayOrTypedArray(parentObjIn[name]) ? parentObjIn[name] : [];\n  var contOut = parentObjOut[name] = [];\n  var templater = Template.arrayTemplater(parentObjOut, name, inclusionAttr);\n  var i, itemOut;\n\n  for (i = 0; i < contIn.length; i++) {\n    var itemIn = contIn[i];\n\n    if (!Lib.isPlainObject(itemIn)) {\n      itemOut = templater.newItem({});\n      itemOut[inclusionAttr] = false;\n    } else {\n      itemOut = templater.newItem(itemIn);\n    }\n\n    itemOut._index = i;\n\n    if (itemOut[inclusionAttr] !== false) {\n      opts.handleItemDefaults(itemIn, itemOut, parentObjOut, opts);\n    }\n\n    contOut.push(itemOut);\n  }\n\n  var defaultItems = templater.defaultItems();\n\n  for (i = 0; i < defaultItems.length; i++) {\n    itemOut = defaultItems[i];\n    itemOut._index = contOut.length;\n    opts.handleItemDefaults({}, itemOut, parentObjOut, opts, {});\n    contOut.push(itemOut);\n  } // in case this array gets its defaults rebuilt independent of the whole layout,\n  // relink the private keys just for this array.\n\n\n  if (Lib.isArrayOrTypedArray(previousContOut)) {\n    var len = Math.min(previousContOut.length, contOut.length);\n\n    for (i = 0; i < len; i++) {\n      Lib.relinkPrivateKeys(contOut[i], previousContOut[i]);\n    }\n  }\n\n  return contOut;\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/plots/array_container_defaults.js"],"names":["Lib","require","Template","module","exports","handleArrayContainerDefaults","parentObjIn","parentObjOut","opts","name","inclusionAttr","previousContOut","contIn","isArrayOrTypedArray","contOut","templater","arrayTemplater","i","itemOut","length","itemIn","isPlainObject","newItem","_index","handleItemDefaults","push","defaultItems","len","Math","min","relinkPrivateKeys"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Lib = require('../lib');\r\nvar Template = require('../plot_api/plot_template');\r\n\r\n/** Convenience wrapper for making array container logic DRY and consistent\r\n *\r\n * @param {object} parentObjIn\r\n *  user input object where the container in question is linked\r\n *  (i.e. either a user trace object or the user layout object)\r\n *\r\n * @param {object} parentObjOut\r\n *  full object where the coerced container will be linked\r\n *  (i.e. either a full trace object or the full layout object)\r\n *\r\n * @param {object} opts\r\n *  options object:\r\n *   - name {string}\r\n *      name of the key linking the container in question\r\n *   - inclusionAttr {string}\r\n *      name of the item attribute for inclusion/exclusion. Default is 'visible'.\r\n *      Since inclusion is true, use eg 'enabled' instead of 'disabled'.\r\n *   - handleItemDefaults {function}\r\n *      defaults method to be called on each item in the array container in question\r\n *\r\n *      Its arguments are:\r\n *          - itemIn {object} item in user layout\r\n *          - itemOut {object} item in full layout\r\n *          - parentObj {object} (as in closure)\r\n *          - opts {object} (as in closure)\r\n * N.B.\r\n *\r\n *  - opts is passed to handleItemDefaults so it can also store\r\n *    links to supplementary data (e.g. fullData for layout components)\r\n *\r\n */\r\nmodule.exports = function handleArrayContainerDefaults(parentObjIn, parentObjOut, opts) {\r\n    var name = opts.name;\r\n    var inclusionAttr = opts.inclusionAttr || 'visible';\r\n\r\n    var previousContOut = parentObjOut[name];\r\n\r\n    var contIn = Lib.isArrayOrTypedArray(parentObjIn[name]) ? parentObjIn[name] : [];\r\n    var contOut = parentObjOut[name] = [];\r\n    var templater = Template.arrayTemplater(parentObjOut, name, inclusionAttr);\r\n    var i, itemOut;\r\n\r\n    for(i = 0; i < contIn.length; i++) {\r\n        var itemIn = contIn[i];\r\n\r\n        if(!Lib.isPlainObject(itemIn)) {\r\n            itemOut = templater.newItem({});\r\n            itemOut[inclusionAttr] = false;\r\n        } else {\r\n            itemOut = templater.newItem(itemIn);\r\n        }\r\n\r\n        itemOut._index = i;\r\n\r\n        if(itemOut[inclusionAttr] !== false) {\r\n            opts.handleItemDefaults(itemIn, itemOut, parentObjOut, opts);\r\n        }\r\n\r\n        contOut.push(itemOut);\r\n    }\r\n\r\n    var defaultItems = templater.defaultItems();\r\n    for(i = 0; i < defaultItems.length; i++) {\r\n        itemOut = defaultItems[i];\r\n        itemOut._index = contOut.length;\r\n        opts.handleItemDefaults({}, itemOut, parentObjOut, opts, {});\r\n        contOut.push(itemOut);\r\n    }\r\n\r\n    // in case this array gets its defaults rebuilt independent of the whole layout,\r\n    // relink the private keys just for this array.\r\n    if(Lib.isArrayOrTypedArray(previousContOut)) {\r\n        var len = Math.min(previousContOut.length, contOut.length);\r\n        for(i = 0; i < len; i++) {\r\n            Lib.relinkPrivateKeys(contOut[i], previousContOut[i]);\r\n        }\r\n    }\r\n\r\n    return contOut;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}