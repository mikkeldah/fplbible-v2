{"ast":null,"code":"var glslify = require('glslify');\n\nvar triVertSrc = glslify('./triangle-vertex.glsl');\nvar triFragSrc = glslify('./triangle-fragment.glsl');\nvar edgeVertSrc = glslify('./edge-vertex.glsl');\nvar edgeFragSrc = glslify('./edge-fragment.glsl');\nvar pointVertSrc = glslify('./point-vertex.glsl');\nvar pointFragSrc = glslify('./point-fragment.glsl');\nvar pickVertSrc = glslify('./pick-vertex.glsl');\nvar pickFragSrc = glslify('./pick-fragment.glsl');\nvar pickPointVertSrc = glslify('./pick-point-vertex.glsl');\nvar contourVertSrc = glslify('./contour-vertex.glsl');\nvar contourFragSrc = glslify('./contour-fragment.glsl');\nexports.meshShader = {\n  vertex: triVertSrc,\n  fragment: triFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'normal',\n    type: 'vec3'\n  }, {\n    name: 'color',\n    type: 'vec4'\n  }, {\n    name: 'uv',\n    type: 'vec2'\n  }]\n};\nexports.wireShader = {\n  vertex: edgeVertSrc,\n  fragment: edgeFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'color',\n    type: 'vec4'\n  }, {\n    name: 'uv',\n    type: 'vec2'\n  }]\n};\nexports.pointShader = {\n  vertex: pointVertSrc,\n  fragment: pointFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'color',\n    type: 'vec4'\n  }, {\n    name: 'uv',\n    type: 'vec2'\n  }, {\n    name: 'pointSize',\n    type: 'float'\n  }]\n};\nexports.pickShader = {\n  vertex: pickVertSrc,\n  fragment: pickFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'id',\n    type: 'vec4'\n  }]\n};\nexports.pointPickShader = {\n  vertex: pickPointVertSrc,\n  fragment: pickFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'pointSize',\n    type: 'float'\n  }, {\n    name: 'id',\n    type: 'vec4'\n  }]\n};\nexports.contourShader = {\n  vertex: contourVertSrc,\n  fragment: contourFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }]\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/gl-mesh3d/lib/shaders.js"],"names":["glslify","require","triVertSrc","triFragSrc","edgeVertSrc","edgeFragSrc","pointVertSrc","pointFragSrc","pickVertSrc","pickFragSrc","pickPointVertSrc","contourVertSrc","contourFragSrc","exports","meshShader","vertex","fragment","attributes","name","type","wireShader","pointShader","pickShader","pointPickShader","contourShader"],"mappings":"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","sourcesContent":["var glslify       = require('glslify')\r\n\r\nvar triVertSrc = glslify('./triangle-vertex.glsl')\r\nvar triFragSrc = glslify('./triangle-fragment.glsl')\r\nvar edgeVertSrc = glslify('./edge-vertex.glsl')\r\nvar edgeFragSrc = glslify('./edge-fragment.glsl')\r\nvar pointVertSrc = glslify('./point-vertex.glsl')\r\nvar pointFragSrc = glslify('./point-fragment.glsl')\r\nvar pickVertSrc = glslify('./pick-vertex.glsl')\r\nvar pickFragSrc = glslify('./pick-fragment.glsl')\r\nvar pickPointVertSrc = glslify('./pick-point-vertex.glsl')\r\nvar contourVertSrc = glslify('./contour-vertex.glsl')\r\nvar contourFragSrc = glslify('./contour-fragment.glsl')\r\n\r\nexports.meshShader = {\r\n  vertex:   triVertSrc,\r\n  fragment: triFragSrc,\r\n  attributes: [\r\n    {name: 'position', type: 'vec3'},\r\n    {name: 'normal', type: 'vec3'},\r\n    {name: 'color', type: 'vec4'},\r\n    {name: 'uv', type: 'vec2'}\r\n  ]\r\n}\r\nexports.wireShader = {\r\n  vertex:   edgeVertSrc,\r\n  fragment: edgeFragSrc,\r\n  attributes: [\r\n    {name: 'position', type: 'vec3'},\r\n    {name: 'color', type: 'vec4'},\r\n    {name: 'uv', type: 'vec2'}\r\n  ]\r\n}\r\nexports.pointShader = {\r\n  vertex:   pointVertSrc,\r\n  fragment: pointFragSrc,\r\n  attributes: [\r\n    {name: 'position', type: 'vec3'},\r\n    {name: 'color', type: 'vec4'},\r\n    {name: 'uv', type: 'vec2'},\r\n    {name: 'pointSize', type: 'float'}\r\n  ]\r\n}\r\nexports.pickShader = {\r\n  vertex:   pickVertSrc,\r\n  fragment: pickFragSrc,\r\n  attributes: [\r\n    {name: 'position', type: 'vec3'},\r\n    {name: 'id', type: 'vec4'}\r\n  ]\r\n}\r\nexports.pointPickShader = {\r\n  vertex:   pickPointVertSrc,\r\n  fragment: pickFragSrc,\r\n  attributes: [\r\n    {name: 'position', type: 'vec3'},\r\n    {name: 'pointSize', type: 'float'},\r\n    {name: 'id', type: 'vec4'}\r\n  ]\r\n}\r\nexports.contourShader = {\r\n  vertex:   contourVertSrc,\r\n  fragment: contourFragSrc,\r\n  attributes: [\r\n    {name: 'position', type: 'vec3'}\r\n  ]\r\n}\r\n"]},"metadata":{},"sourceType":"script"}