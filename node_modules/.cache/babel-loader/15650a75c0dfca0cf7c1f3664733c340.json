{"ast":null,"code":"'use strict';\n\nmodule.exports = ScrollBox;\n\nvar d3 = require('@plotly/d3');\n\nvar Color = require('../color');\n\nvar Drawing = require('../drawing');\n\nvar Lib = require('../../lib');\n/**\r\n * Helper class to setup a scroll box\r\n *\r\n * @class\r\n * @param           gd          Plotly's graph div\r\n * @param           container   Container to be scroll-boxed (as a D3 selection)\r\n * @param {string}  id          Id for the clip path to implement the scroll box\r\n */\n\n\nfunction ScrollBox(gd, container, id) {\n  this.gd = gd;\n  this.container = container;\n  this.id = id; // See ScrollBox.prototype.enable for further definition\n\n  this.position = null; // scrollbox position\n\n  this.translateX = null; // scrollbox horizontal translation\n\n  this.translateY = null; // scrollbox vertical translation\n\n  this.hbar = null; // horizontal scrollbar D3 selection\n\n  this.vbar = null; // vertical scrollbar D3 selection\n  // <rect> element to capture pointer events\n\n  this.bg = this.container.selectAll('rect.scrollbox-bg').data([0]);\n  this.bg.exit().on('.drag', null).on('wheel', null).remove();\n  this.bg.enter().append('rect').classed('scrollbox-bg', true).style('pointer-events', 'all').attr({\n    opacity: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n} // scroll bar dimensions\n\n\nScrollBox.barWidth = 2;\nScrollBox.barLength = 20;\nScrollBox.barRadius = 2;\nScrollBox.barPad = 1;\nScrollBox.barColor = '#808BA4';\n/**\r\n * If needed, setup a clip path and scrollbars\r\n *\r\n * @method\r\n * @param {Object}  position\r\n * @param {number}  position.l  Left side position (in pixels)\r\n * @param {number}  position.t  Top side (in pixels)\r\n * @param {number}  position.w  Width (in pixels)\r\n * @param {number}  position.h  Height (in pixels)\r\n * @param {string}  [position.direction='down']\r\n *                  Either 'down', 'left', 'right' or 'up'\r\n * @param {number}  [translateX=0]  Horizontal offset (in pixels)\r\n * @param {number}  [translateY=0]  Vertical offset (in pixels)\r\n */\n\nScrollBox.prototype.enable = function enable(position, translateX, translateY) {\n  var fullLayout = this.gd._fullLayout;\n  var fullWidth = fullLayout.width;\n  var fullHeight = fullLayout.height; // compute position of scrollbox\n\n  this.position = position;\n  var l = this.position.l;\n  var w = this.position.w;\n  var t = this.position.t;\n  var h = this.position.h;\n  var direction = this.position.direction;\n  var isDown = direction === 'down';\n  var isLeft = direction === 'left';\n  var isRight = direction === 'right';\n  var isUp = direction === 'up';\n  var boxW = w;\n  var boxH = h;\n  var boxL, boxR;\n  var boxT, boxB;\n\n  if (!isDown && !isLeft && !isRight && !isUp) {\n    this.position.direction = 'down';\n    isDown = true;\n  }\n\n  var isVertical = isDown || isUp;\n\n  if (isVertical) {\n    boxL = l;\n    boxR = boxL + boxW;\n\n    if (isDown) {\n      // anchor to top side\n      boxT = t;\n      boxB = Math.min(boxT + boxH, fullHeight);\n      boxH = boxB - boxT;\n    } else {\n      // anchor to bottom side\n      boxB = t + boxH;\n      boxT = Math.max(boxB - boxH, 0);\n      boxH = boxB - boxT;\n    }\n  } else {\n    boxT = t;\n    boxB = boxT + boxH;\n\n    if (isLeft) {\n      // anchor to right side\n      boxR = l + boxW;\n      boxL = Math.max(boxR - boxW, 0);\n      boxW = boxR - boxL;\n    } else {\n      // anchor to left side\n      boxL = l;\n      boxR = Math.min(boxL + boxW, fullWidth);\n      boxW = boxR - boxL;\n    }\n  }\n\n  this._box = {\n    l: boxL,\n    t: boxT,\n    w: boxW,\n    h: boxH\n  }; // compute position of horizontal scroll bar\n\n  var needsHorizontalScrollBar = w > boxW;\n  var hbarW = ScrollBox.barLength + 2 * ScrollBox.barPad;\n  var hbarH = ScrollBox.barWidth + 2 * ScrollBox.barPad; // draw horizontal scrollbar on the bottom side\n\n  var hbarL = l;\n  var hbarT = t + h;\n  if (hbarT + hbarH > fullHeight) hbarT = fullHeight - hbarH;\n  var hbar = this.container.selectAll('rect.scrollbar-horizontal').data(needsHorizontalScrollBar ? [0] : []);\n  hbar.exit().on('.drag', null).remove();\n  hbar.enter().append('rect').classed('scrollbar-horizontal', true).call(Color.fill, ScrollBox.barColor);\n\n  if (needsHorizontalScrollBar) {\n    this.hbar = hbar.attr({\n      'rx': ScrollBox.barRadius,\n      'ry': ScrollBox.barRadius,\n      'x': hbarL,\n      'y': hbarT,\n      'width': hbarW,\n      'height': hbarH\n    }); // hbar center moves between hbarXMin and hbarXMin + hbarTranslateMax\n\n    this._hbarXMin = hbarL + hbarW / 2;\n    this._hbarTranslateMax = boxW - hbarW;\n  } else {\n    delete this.hbar;\n    delete this._hbarXMin;\n    delete this._hbarTranslateMax;\n  } // compute position of vertical scroll bar\n\n\n  var needsVerticalScrollBar = h > boxH;\n  var vbarW = ScrollBox.barWidth + 2 * ScrollBox.barPad;\n  var vbarH = ScrollBox.barLength + 2 * ScrollBox.barPad; // draw vertical scrollbar on the right side\n\n  var vbarL = l + w;\n  var vbarT = t;\n  if (vbarL + vbarW > fullWidth) vbarL = fullWidth - vbarW;\n  var vbar = this.container.selectAll('rect.scrollbar-vertical').data(needsVerticalScrollBar ? [0] : []);\n  vbar.exit().on('.drag', null).remove();\n  vbar.enter().append('rect').classed('scrollbar-vertical', true).call(Color.fill, ScrollBox.barColor);\n\n  if (needsVerticalScrollBar) {\n    this.vbar = vbar.attr({\n      'rx': ScrollBox.barRadius,\n      'ry': ScrollBox.barRadius,\n      'x': vbarL,\n      'y': vbarT,\n      'width': vbarW,\n      'height': vbarH\n    }); // vbar center moves between vbarYMin and vbarYMin + vbarTranslateMax\n\n    this._vbarYMin = vbarT + vbarH / 2;\n    this._vbarTranslateMax = boxH - vbarH;\n  } else {\n    delete this.vbar;\n    delete this._vbarYMin;\n    delete this._vbarTranslateMax;\n  } // setup a clip path (if scroll bars are needed)\n\n\n  var clipId = this.id;\n  var clipL = boxL - 0.5;\n  var clipR = needsVerticalScrollBar ? boxR + vbarW + 0.5 : boxR + 0.5;\n  var clipT = boxT - 0.5;\n  var clipB = needsHorizontalScrollBar ? boxB + hbarH + 0.5 : boxB + 0.5;\n\n  var clipPath = fullLayout._topdefs.selectAll('#' + clipId).data(needsHorizontalScrollBar || needsVerticalScrollBar ? [0] : []);\n\n  clipPath.exit().remove();\n  clipPath.enter().append('clipPath').attr('id', clipId).append('rect');\n\n  if (needsHorizontalScrollBar || needsVerticalScrollBar) {\n    this._clipRect = clipPath.select('rect').attr({\n      x: Math.floor(clipL),\n      y: Math.floor(clipT),\n      width: Math.ceil(clipR) - Math.floor(clipL),\n      height: Math.ceil(clipB) - Math.floor(clipT)\n    });\n    this.container.call(Drawing.setClipUrl, clipId, this.gd);\n    this.bg.attr({\n      x: l,\n      y: t,\n      width: w,\n      height: h\n    });\n  } else {\n    this.bg.attr({\n      width: 0,\n      height: 0\n    });\n    this.container.on('wheel', null).on('.drag', null).call(Drawing.setClipUrl, null);\n    delete this._clipRect;\n  } // set up drag listeners (if scroll bars are needed)\n\n\n  if (needsHorizontalScrollBar || needsVerticalScrollBar) {\n    var onBoxDrag = d3.behavior.drag().on('dragstart', function () {\n      d3.event.sourceEvent.preventDefault();\n    }).on('drag', this._onBoxDrag.bind(this));\n    this.container.on('wheel', null).on('wheel', this._onBoxWheel.bind(this)).on('.drag', null).call(onBoxDrag);\n    var onBarDrag = d3.behavior.drag().on('dragstart', function () {\n      d3.event.sourceEvent.preventDefault();\n      d3.event.sourceEvent.stopPropagation();\n    }).on('drag', this._onBarDrag.bind(this));\n\n    if (needsHorizontalScrollBar) {\n      this.hbar.on('.drag', null).call(onBarDrag);\n    }\n\n    if (needsVerticalScrollBar) {\n      this.vbar.on('.drag', null).call(onBarDrag);\n    }\n  } // set scrollbox translation\n\n\n  this.setTranslate(translateX, translateY);\n};\n/**\r\n * If present, remove clip-path and scrollbars\r\n *\r\n * @method\r\n */\n\n\nScrollBox.prototype.disable = function disable() {\n  if (this.hbar || this.vbar) {\n    this.bg.attr({\n      width: 0,\n      height: 0\n    });\n    this.container.on('wheel', null).on('.drag', null).call(Drawing.setClipUrl, null);\n    delete this._clipRect;\n  }\n\n  if (this.hbar) {\n    this.hbar.on('.drag', null);\n    this.hbar.remove();\n    delete this.hbar;\n    delete this._hbarXMin;\n    delete this._hbarTranslateMax;\n  }\n\n  if (this.vbar) {\n    this.vbar.on('.drag', null);\n    this.vbar.remove();\n    delete this.vbar;\n    delete this._vbarYMin;\n    delete this._vbarTranslateMax;\n  }\n};\n/**\r\n * Handles scroll box drag events\r\n *\r\n * @method\r\n */\n\n\nScrollBox.prototype._onBoxDrag = function _onBoxDrag() {\n  var translateX = this.translateX;\n  var translateY = this.translateY;\n\n  if (this.hbar) {\n    translateX -= d3.event.dx;\n  }\n\n  if (this.vbar) {\n    translateY -= d3.event.dy;\n  }\n\n  this.setTranslate(translateX, translateY);\n};\n/**\r\n * Handles scroll box wheel events\r\n *\r\n * @method\r\n */\n\n\nScrollBox.prototype._onBoxWheel = function _onBoxWheel() {\n  var translateX = this.translateX;\n  var translateY = this.translateY;\n\n  if (this.hbar) {\n    translateX += d3.event.deltaY;\n  }\n\n  if (this.vbar) {\n    translateY += d3.event.deltaY;\n  }\n\n  this.setTranslate(translateX, translateY);\n};\n/**\r\n * Handles scroll bar drag events\r\n *\r\n * @method\r\n */\n\n\nScrollBox.prototype._onBarDrag = function _onBarDrag() {\n  var translateX = this.translateX;\n  var translateY = this.translateY;\n\n  if (this.hbar) {\n    var xMin = translateX + this._hbarXMin;\n    var xMax = xMin + this._hbarTranslateMax;\n    var x = Lib.constrain(d3.event.x, xMin, xMax);\n    var xf = (x - xMin) / (xMax - xMin);\n    var translateXMax = this.position.w - this._box.w;\n    translateX = xf * translateXMax;\n  }\n\n  if (this.vbar) {\n    var yMin = translateY + this._vbarYMin;\n    var yMax = yMin + this._vbarTranslateMax;\n    var y = Lib.constrain(d3.event.y, yMin, yMax);\n    var yf = (y - yMin) / (yMax - yMin);\n    var translateYMax = this.position.h - this._box.h;\n    translateY = yf * translateYMax;\n  }\n\n  this.setTranslate(translateX, translateY);\n};\n/**\r\n * Set clip path and scroll bar translate transform\r\n *\r\n * @method\r\n * @param {number}  [translateX=0]  Horizontal offset (in pixels)\r\n * @param {number}  [translateY=0]  Vertical offset (in pixels)\r\n */\n\n\nScrollBox.prototype.setTranslate = function setTranslate(translateX, translateY) {\n  // store translateX and translateY (needed by mouse event handlers)\n  var translateXMax = this.position.w - this._box.w;\n  var translateYMax = this.position.h - this._box.h;\n  translateX = Lib.constrain(translateX || 0, 0, translateXMax);\n  translateY = Lib.constrain(translateY || 0, 0, translateYMax);\n  this.translateX = translateX;\n  this.translateY = translateY;\n  this.container.call(Drawing.setTranslate, this._box.l - this.position.l - translateX, this._box.t - this.position.t - translateY);\n\n  if (this._clipRect) {\n    this._clipRect.attr({\n      x: Math.floor(this.position.l + translateX - 0.5),\n      y: Math.floor(this.position.t + translateY - 0.5)\n    });\n  }\n\n  if (this.hbar) {\n    var xf = translateX / translateXMax;\n    this.hbar.call(Drawing.setTranslate, translateX + xf * this._hbarTranslateMax, translateY);\n  }\n\n  if (this.vbar) {\n    var yf = translateY / translateYMax;\n    this.vbar.call(Drawing.setTranslate, translateX, translateY + yf * this._vbarTranslateMax);\n  }\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/components/updatemenus/scrollbox.js"],"names":["module","exports","ScrollBox","d3","require","Color","Drawing","Lib","gd","container","id","position","translateX","translateY","hbar","vbar","bg","selectAll","data","exit","on","remove","enter","append","classed","style","attr","opacity","x","y","width","height","barWidth","barLength","barRadius","barPad","barColor","prototype","enable","fullLayout","_fullLayout","fullWidth","fullHeight","l","w","t","h","direction","isDown","isLeft","isRight","isUp","boxW","boxH","boxL","boxR","boxT","boxB","isVertical","Math","min","max","_box","needsHorizontalScrollBar","hbarW","hbarH","hbarL","hbarT","call","fill","_hbarXMin","_hbarTranslateMax","needsVerticalScrollBar","vbarW","vbarH","vbarL","vbarT","_vbarYMin","_vbarTranslateMax","clipId","clipL","clipR","clipT","clipB","clipPath","_topdefs","_clipRect","select","floor","ceil","setClipUrl","onBoxDrag","behavior","drag","event","sourceEvent","preventDefault","_onBoxDrag","bind","_onBoxWheel","onBarDrag","stopPropagation","_onBarDrag","setTranslate","disable","dx","dy","deltaY","xMin","xMax","constrain","xf","translateXMax","yMin","yMax","yf","translateYMax"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nmodule.exports = ScrollBox;\r\n\r\nvar d3 = require('@plotly/d3');\r\n\r\nvar Color = require('../color');\r\nvar Drawing = require('../drawing');\r\n\r\nvar Lib = require('../../lib');\r\n\r\n/**\r\n * Helper class to setup a scroll box\r\n *\r\n * @class\r\n * @param           gd          Plotly's graph div\r\n * @param           container   Container to be scroll-boxed (as a D3 selection)\r\n * @param {string}  id          Id for the clip path to implement the scroll box\r\n */\r\nfunction ScrollBox(gd, container, id) {\r\n    this.gd = gd;\r\n    this.container = container;\r\n    this.id = id;\r\n\r\n    // See ScrollBox.prototype.enable for further definition\r\n    this.position = null;  // scrollbox position\r\n    this.translateX = null;  // scrollbox horizontal translation\r\n    this.translateY = null;  // scrollbox vertical translation\r\n    this.hbar = null;  // horizontal scrollbar D3 selection\r\n    this.vbar = null;  // vertical scrollbar D3 selection\r\n\r\n    // <rect> element to capture pointer events\r\n    this.bg = this.container.selectAll('rect.scrollbox-bg').data([0]);\r\n\r\n    this.bg.exit()\r\n        .on('.drag', null)\r\n        .on('wheel', null)\r\n        .remove();\r\n\r\n    this.bg.enter().append('rect')\r\n        .classed('scrollbox-bg', true)\r\n        .style('pointer-events', 'all')\r\n        .attr({\r\n            opacity: 0,\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n}\r\n\r\n// scroll bar dimensions\r\nScrollBox.barWidth = 2;\r\nScrollBox.barLength = 20;\r\nScrollBox.barRadius = 2;\r\nScrollBox.barPad = 1;\r\nScrollBox.barColor = '#808BA4';\r\n\r\n/**\r\n * If needed, setup a clip path and scrollbars\r\n *\r\n * @method\r\n * @param {Object}  position\r\n * @param {number}  position.l  Left side position (in pixels)\r\n * @param {number}  position.t  Top side (in pixels)\r\n * @param {number}  position.w  Width (in pixels)\r\n * @param {number}  position.h  Height (in pixels)\r\n * @param {string}  [position.direction='down']\r\n *                  Either 'down', 'left', 'right' or 'up'\r\n * @param {number}  [translateX=0]  Horizontal offset (in pixels)\r\n * @param {number}  [translateY=0]  Vertical offset (in pixels)\r\n */\r\nScrollBox.prototype.enable = function enable(position, translateX, translateY) {\r\n    var fullLayout = this.gd._fullLayout;\r\n    var fullWidth = fullLayout.width;\r\n    var fullHeight = fullLayout.height;\r\n\r\n    // compute position of scrollbox\r\n    this.position = position;\r\n\r\n    var l = this.position.l;\r\n    var w = this.position.w;\r\n    var t = this.position.t;\r\n    var h = this.position.h;\r\n    var direction = this.position.direction;\r\n    var isDown = (direction === 'down');\r\n    var isLeft = (direction === 'left');\r\n    var isRight = (direction === 'right');\r\n    var isUp = (direction === 'up');\r\n    var boxW = w;\r\n    var boxH = h;\r\n    var boxL, boxR;\r\n    var boxT, boxB;\r\n\r\n    if(!isDown && !isLeft && !isRight && !isUp) {\r\n        this.position.direction = 'down';\r\n        isDown = true;\r\n    }\r\n\r\n    var isVertical = isDown || isUp;\r\n    if(isVertical) {\r\n        boxL = l;\r\n        boxR = boxL + boxW;\r\n\r\n        if(isDown) {\r\n            // anchor to top side\r\n            boxT = t;\r\n            boxB = Math.min(boxT + boxH, fullHeight);\r\n            boxH = boxB - boxT;\r\n        } else {\r\n            // anchor to bottom side\r\n            boxB = t + boxH;\r\n            boxT = Math.max(boxB - boxH, 0);\r\n            boxH = boxB - boxT;\r\n        }\r\n    } else {\r\n        boxT = t;\r\n        boxB = boxT + boxH;\r\n\r\n        if(isLeft) {\r\n            // anchor to right side\r\n            boxR = l + boxW;\r\n            boxL = Math.max(boxR - boxW, 0);\r\n            boxW = boxR - boxL;\r\n        } else {\r\n            // anchor to left side\r\n            boxL = l;\r\n            boxR = Math.min(boxL + boxW, fullWidth);\r\n            boxW = boxR - boxL;\r\n        }\r\n    }\r\n\r\n    this._box = {\r\n        l: boxL,\r\n        t: boxT,\r\n        w: boxW,\r\n        h: boxH\r\n    };\r\n\r\n    // compute position of horizontal scroll bar\r\n    var needsHorizontalScrollBar = (w > boxW);\r\n    var hbarW = ScrollBox.barLength + 2 * ScrollBox.barPad;\r\n    var hbarH = ScrollBox.barWidth + 2 * ScrollBox.barPad;\r\n    // draw horizontal scrollbar on the bottom side\r\n    var hbarL = l;\r\n    var hbarT = t + h;\r\n\r\n    if(hbarT + hbarH > fullHeight) hbarT = fullHeight - hbarH;\r\n\r\n    var hbar = this.container.selectAll('rect.scrollbar-horizontal').data(\r\n            (needsHorizontalScrollBar) ? [0] : []);\r\n\r\n    hbar.exit()\r\n        .on('.drag', null)\r\n        .remove();\r\n\r\n    hbar.enter().append('rect')\r\n        .classed('scrollbar-horizontal', true)\r\n        .call(Color.fill, ScrollBox.barColor);\r\n\r\n    if(needsHorizontalScrollBar) {\r\n        this.hbar = hbar.attr({\r\n            'rx': ScrollBox.barRadius,\r\n            'ry': ScrollBox.barRadius,\r\n            'x': hbarL,\r\n            'y': hbarT,\r\n            'width': hbarW,\r\n            'height': hbarH\r\n        });\r\n\r\n        // hbar center moves between hbarXMin and hbarXMin + hbarTranslateMax\r\n        this._hbarXMin = hbarL + hbarW / 2;\r\n        this._hbarTranslateMax = boxW - hbarW;\r\n    } else {\r\n        delete this.hbar;\r\n        delete this._hbarXMin;\r\n        delete this._hbarTranslateMax;\r\n    }\r\n\r\n    // compute position of vertical scroll bar\r\n    var needsVerticalScrollBar = (h > boxH);\r\n    var vbarW = ScrollBox.barWidth + 2 * ScrollBox.barPad;\r\n    var vbarH = ScrollBox.barLength + 2 * ScrollBox.barPad;\r\n    // draw vertical scrollbar on the right side\r\n    var vbarL = l + w;\r\n    var vbarT = t;\r\n\r\n    if(vbarL + vbarW > fullWidth) vbarL = fullWidth - vbarW;\r\n\r\n    var vbar = this.container.selectAll('rect.scrollbar-vertical').data(\r\n            (needsVerticalScrollBar) ? [0] : []);\r\n\r\n    vbar.exit()\r\n        .on('.drag', null)\r\n        .remove();\r\n\r\n    vbar.enter().append('rect')\r\n        .classed('scrollbar-vertical', true)\r\n        .call(Color.fill, ScrollBox.barColor);\r\n\r\n    if(needsVerticalScrollBar) {\r\n        this.vbar = vbar.attr({\r\n            'rx': ScrollBox.barRadius,\r\n            'ry': ScrollBox.barRadius,\r\n            'x': vbarL,\r\n            'y': vbarT,\r\n            'width': vbarW,\r\n            'height': vbarH\r\n        });\r\n\r\n        // vbar center moves between vbarYMin and vbarYMin + vbarTranslateMax\r\n        this._vbarYMin = vbarT + vbarH / 2;\r\n        this._vbarTranslateMax = boxH - vbarH;\r\n    } else {\r\n        delete this.vbar;\r\n        delete this._vbarYMin;\r\n        delete this._vbarTranslateMax;\r\n    }\r\n\r\n    // setup a clip path (if scroll bars are needed)\r\n    var clipId = this.id;\r\n    var clipL = boxL - 0.5;\r\n    var clipR = (needsVerticalScrollBar) ? boxR + vbarW + 0.5 : boxR + 0.5;\r\n    var clipT = boxT - 0.5;\r\n    var clipB = (needsHorizontalScrollBar) ? boxB + hbarH + 0.5 : boxB + 0.5;\r\n\r\n    var clipPath = fullLayout._topdefs.selectAll('#' + clipId)\r\n        .data((needsHorizontalScrollBar || needsVerticalScrollBar) ? [0] : []);\r\n\r\n    clipPath.exit().remove();\r\n\r\n    clipPath.enter()\r\n        .append('clipPath').attr('id', clipId)\r\n        .append('rect');\r\n\r\n    if(needsHorizontalScrollBar || needsVerticalScrollBar) {\r\n        this._clipRect = clipPath.select('rect').attr({\r\n            x: Math.floor(clipL),\r\n            y: Math.floor(clipT),\r\n            width: Math.ceil(clipR) - Math.floor(clipL),\r\n            height: Math.ceil(clipB) - Math.floor(clipT)\r\n        });\r\n\r\n        this.container.call(Drawing.setClipUrl, clipId, this.gd);\r\n\r\n        this.bg.attr({\r\n            x: l,\r\n            y: t,\r\n            width: w,\r\n            height: h\r\n        });\r\n    } else {\r\n        this.bg.attr({\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        this.container\r\n            .on('wheel', null)\r\n            .on('.drag', null)\r\n            .call(Drawing.setClipUrl, null);\r\n        delete this._clipRect;\r\n    }\r\n\r\n    // set up drag listeners (if scroll bars are needed)\r\n    if(needsHorizontalScrollBar || needsVerticalScrollBar) {\r\n        var onBoxDrag = d3.behavior.drag()\r\n            .on('dragstart', function() {\r\n                d3.event.sourceEvent.preventDefault();\r\n            })\r\n            .on('drag', this._onBoxDrag.bind(this));\r\n\r\n        this.container\r\n            .on('wheel', null)\r\n            .on('wheel', this._onBoxWheel.bind(this))\r\n            .on('.drag', null)\r\n            .call(onBoxDrag);\r\n\r\n        var onBarDrag = d3.behavior.drag()\r\n            .on('dragstart', function() {\r\n                d3.event.sourceEvent.preventDefault();\r\n                d3.event.sourceEvent.stopPropagation();\r\n            })\r\n            .on('drag', this._onBarDrag.bind(this));\r\n\r\n        if(needsHorizontalScrollBar) {\r\n            this.hbar\r\n                .on('.drag', null)\r\n                .call(onBarDrag);\r\n        }\r\n\r\n        if(needsVerticalScrollBar) {\r\n            this.vbar\r\n                .on('.drag', null)\r\n                .call(onBarDrag);\r\n        }\r\n    }\r\n\r\n    // set scrollbox translation\r\n    this.setTranslate(translateX, translateY);\r\n};\r\n\r\n/**\r\n * If present, remove clip-path and scrollbars\r\n *\r\n * @method\r\n */\r\nScrollBox.prototype.disable = function disable() {\r\n    if(this.hbar || this.vbar) {\r\n        this.bg.attr({\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        this.container\r\n            .on('wheel', null)\r\n            .on('.drag', null)\r\n            .call(Drawing.setClipUrl, null);\r\n        delete this._clipRect;\r\n    }\r\n\r\n    if(this.hbar) {\r\n        this.hbar.on('.drag', null);\r\n        this.hbar.remove();\r\n        delete this.hbar;\r\n        delete this._hbarXMin;\r\n        delete this._hbarTranslateMax;\r\n    }\r\n\r\n    if(this.vbar) {\r\n        this.vbar.on('.drag', null);\r\n        this.vbar.remove();\r\n        delete this.vbar;\r\n        delete this._vbarYMin;\r\n        delete this._vbarTranslateMax;\r\n    }\r\n};\r\n\r\n/**\r\n * Handles scroll box drag events\r\n *\r\n * @method\r\n */\r\nScrollBox.prototype._onBoxDrag = function _onBoxDrag() {\r\n    var translateX = this.translateX;\r\n    var translateY = this.translateY;\r\n\r\n    if(this.hbar) {\r\n        translateX -= d3.event.dx;\r\n    }\r\n\r\n    if(this.vbar) {\r\n        translateY -= d3.event.dy;\r\n    }\r\n\r\n    this.setTranslate(translateX, translateY);\r\n};\r\n\r\n/**\r\n * Handles scroll box wheel events\r\n *\r\n * @method\r\n */\r\nScrollBox.prototype._onBoxWheel = function _onBoxWheel() {\r\n    var translateX = this.translateX;\r\n    var translateY = this.translateY;\r\n\r\n    if(this.hbar) {\r\n        translateX += d3.event.deltaY;\r\n    }\r\n\r\n    if(this.vbar) {\r\n        translateY += d3.event.deltaY;\r\n    }\r\n\r\n    this.setTranslate(translateX, translateY);\r\n};\r\n\r\n/**\r\n * Handles scroll bar drag events\r\n *\r\n * @method\r\n */\r\nScrollBox.prototype._onBarDrag = function _onBarDrag() {\r\n    var translateX = this.translateX;\r\n    var translateY = this.translateY;\r\n\r\n    if(this.hbar) {\r\n        var xMin = translateX + this._hbarXMin;\r\n        var xMax = xMin + this._hbarTranslateMax;\r\n        var x = Lib.constrain(d3.event.x, xMin, xMax);\r\n        var xf = (x - xMin) / (xMax - xMin);\r\n\r\n        var translateXMax = this.position.w - this._box.w;\r\n\r\n        translateX = xf * translateXMax;\r\n    }\r\n\r\n    if(this.vbar) {\r\n        var yMin = translateY + this._vbarYMin;\r\n        var yMax = yMin + this._vbarTranslateMax;\r\n        var y = Lib.constrain(d3.event.y, yMin, yMax);\r\n        var yf = (y - yMin) / (yMax - yMin);\r\n\r\n        var translateYMax = this.position.h - this._box.h;\r\n\r\n        translateY = yf * translateYMax;\r\n    }\r\n\r\n    this.setTranslate(translateX, translateY);\r\n};\r\n\r\n/**\r\n * Set clip path and scroll bar translate transform\r\n *\r\n * @method\r\n * @param {number}  [translateX=0]  Horizontal offset (in pixels)\r\n * @param {number}  [translateY=0]  Vertical offset (in pixels)\r\n */\r\nScrollBox.prototype.setTranslate = function setTranslate(translateX, translateY) {\r\n    // store translateX and translateY (needed by mouse event handlers)\r\n    var translateXMax = this.position.w - this._box.w;\r\n    var translateYMax = this.position.h - this._box.h;\r\n\r\n    translateX = Lib.constrain(translateX || 0, 0, translateXMax);\r\n    translateY = Lib.constrain(translateY || 0, 0, translateYMax);\r\n\r\n    this.translateX = translateX;\r\n    this.translateY = translateY;\r\n\r\n    this.container.call(Drawing.setTranslate,\r\n        this._box.l - this.position.l - translateX,\r\n        this._box.t - this.position.t - translateY);\r\n\r\n    if(this._clipRect) {\r\n        this._clipRect.attr({\r\n            x: Math.floor(this.position.l + translateX - 0.5),\r\n            y: Math.floor(this.position.t + translateY - 0.5)\r\n        });\r\n    }\r\n\r\n    if(this.hbar) {\r\n        var xf = translateX / translateXMax;\r\n\r\n        this.hbar.call(Drawing.setTranslate,\r\n            translateX + xf * this._hbarTranslateMax,\r\n            translateY);\r\n    }\r\n\r\n    if(this.vbar) {\r\n        var yf = translateY / translateYMax;\r\n\r\n        this.vbar.call(Drawing.setTranslate,\r\n            translateX,\r\n            translateY + yf * this._vbarTranslateMax);\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}