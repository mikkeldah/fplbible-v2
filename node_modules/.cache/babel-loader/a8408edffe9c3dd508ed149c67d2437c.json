{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../../lib');\n\nvar Color = require('../../../components/color');\n\nvar Registry = require('../../../registry');\n\nvar handleSubplotDefaults = require('../../subplot_defaults');\n\nvar supplyGl3dAxisLayoutDefaults = require('./axis_defaults');\n\nvar layoutAttributes = require('./layout_attributes');\n\nvar getSubplotData = require('../../get_data').getSubplotData;\n\nvar GL3D = 'gl3d';\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n  var hasNon3D = layoutOut._basePlotModules.length > 1; // some layout-wide attribute are used in all scenes\n  // if 3D is the only visible plot type\n\n  function getDfltFromLayout(attr) {\n    if (hasNon3D) return;\n    var isValid = Lib.validate(layoutIn[attr], layoutAttributes[attr]);\n    if (isValid) return layoutIn[attr];\n  }\n\n  handleSubplotDefaults(layoutIn, layoutOut, fullData, {\n    type: GL3D,\n    attributes: layoutAttributes,\n    handleDefaults: handleGl3dDefaults,\n    fullLayout: layoutOut,\n    font: layoutOut.font,\n    fullData: fullData,\n    getDfltFromLayout: getDfltFromLayout,\n    autotypenumbersDflt: layoutOut.autotypenumbers,\n    paper_bgcolor: layoutOut.paper_bgcolor,\n    calendar: layoutOut.calendar\n  });\n};\n\nfunction handleGl3dDefaults(sceneLayoutIn, sceneLayoutOut, coerce, opts) {\n  /*\r\n   * Scene numbering proceeds as follows\r\n   * scene\r\n   * scene2\r\n   * scene3\r\n   *\r\n   * and d.scene will be undefined or some number or number string\r\n   *\r\n   * Also write back a blank scene object to user layout so that some\r\n   * attributes like aspectratio can be written back dynamically.\r\n   */\n  var bgcolor = coerce('bgcolor');\n  var bgColorCombined = Color.combine(bgcolor, opts.paper_bgcolor);\n  var cameraKeys = ['up', 'center', 'eye'];\n\n  for (var j = 0; j < cameraKeys.length; j++) {\n    coerce('camera.' + cameraKeys[j] + '.x');\n    coerce('camera.' + cameraKeys[j] + '.y');\n    coerce('camera.' + cameraKeys[j] + '.z');\n  }\n\n  coerce('camera.projection.type');\n  /*\r\n   * coerce to positive number (min 0) but also do not accept 0 (>0 not >=0)\r\n   * note that 0's go false with the !! call\r\n   */\n\n  var hasAspect = !!coerce('aspectratio.x') && !!coerce('aspectratio.y') && !!coerce('aspectratio.z');\n  var defaultAspectMode = hasAspect ? 'manual' : 'auto';\n  var aspectMode = coerce('aspectmode', defaultAspectMode);\n  /*\r\n   * We need aspectratio object in all the Layouts as it is dynamically set\r\n   * in the calculation steps, ie, we cant set the correct data now, it happens later.\r\n   * We must also account for the case the user sends bad ratio data with 'manual' set\r\n   * for the mode. In this case we must force change it here as the default coerce\r\n   * misses it above.\r\n   */\n\n  if (!hasAspect) {\n    sceneLayoutIn.aspectratio = sceneLayoutOut.aspectratio = {\n      x: 1,\n      y: 1,\n      z: 1\n    };\n    if (aspectMode === 'manual') sceneLayoutOut.aspectmode = 'auto';\n    /*\r\n     * kind of like autorange - we need the calculated aspectmode back in\r\n     * the input layout or relayout can cause problems later\r\n     */\n\n    sceneLayoutIn.aspectmode = sceneLayoutOut.aspectmode;\n  }\n\n  var fullGl3dData = getSubplotData(opts.fullData, GL3D, opts.id);\n  supplyGl3dAxisLayoutDefaults(sceneLayoutIn, sceneLayoutOut, {\n    font: opts.font,\n    scene: opts.id,\n    data: fullGl3dData,\n    bgColor: bgColorCombined,\n    calendar: opts.calendar,\n    autotypenumbersDflt: opts.autotypenumbersDflt,\n    fullLayout: opts.fullLayout\n  });\n  Registry.getComponentMethod('annotations3d', 'handleDefaults')(sceneLayoutIn, sceneLayoutOut, opts);\n  var dragmode = opts.getDfltFromLayout('dragmode');\n\n  if (dragmode !== false) {\n    if (!dragmode) {\n      dragmode = 'orbit';\n\n      if (sceneLayoutIn.camera && sceneLayoutIn.camera.up) {\n        var x = sceneLayoutIn.camera.up.x;\n        var y = sceneLayoutIn.camera.up.y;\n        var z = sceneLayoutIn.camera.up.z;\n\n        if (z !== 0) {\n          if (!x || !y || !z) {\n            dragmode = 'turntable';\n          } else if (z / Math.sqrt(x * x + y * y + z * z) > 0.999) {\n            dragmode = 'turntable';\n          }\n        }\n      } else {\n        dragmode = 'turntable';\n      }\n    }\n  }\n\n  coerce('dragmode', dragmode);\n  coerce('hovermode', opts.getDfltFromLayout('hovermode'));\n}","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/plots/gl3d/layout/defaults.js"],"names":["Lib","require","Color","Registry","handleSubplotDefaults","supplyGl3dAxisLayoutDefaults","layoutAttributes","getSubplotData","GL3D","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","fullData","hasNon3D","_basePlotModules","length","getDfltFromLayout","attr","isValid","validate","type","attributes","handleDefaults","handleGl3dDefaults","fullLayout","font","autotypenumbersDflt","autotypenumbers","paper_bgcolor","calendar","sceneLayoutIn","sceneLayoutOut","coerce","opts","bgcolor","bgColorCombined","combine","cameraKeys","j","hasAspect","defaultAspectMode","aspectMode","aspectratio","x","y","z","aspectmode","fullGl3dData","id","scene","data","bgColor","getComponentMethod","dragmode","camera","up","Math","sqrt"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Lib = require('../../../lib');\r\nvar Color = require('../../../components/color');\r\nvar Registry = require('../../../registry');\r\n\r\nvar handleSubplotDefaults = require('../../subplot_defaults');\r\nvar supplyGl3dAxisLayoutDefaults = require('./axis_defaults');\r\nvar layoutAttributes = require('./layout_attributes');\r\nvar getSubplotData = require('../../get_data').getSubplotData;\r\n\r\nvar GL3D = 'gl3d';\r\n\r\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\r\n    var hasNon3D = layoutOut._basePlotModules.length > 1;\r\n\r\n    // some layout-wide attribute are used in all scenes\r\n    // if 3D is the only visible plot type\r\n    function getDfltFromLayout(attr) {\r\n        if(hasNon3D) return;\r\n\r\n        var isValid = Lib.validate(layoutIn[attr], layoutAttributes[attr]);\r\n        if(isValid) return layoutIn[attr];\r\n    }\r\n\r\n    handleSubplotDefaults(layoutIn, layoutOut, fullData, {\r\n        type: GL3D,\r\n        attributes: layoutAttributes,\r\n        handleDefaults: handleGl3dDefaults,\r\n        fullLayout: layoutOut,\r\n        font: layoutOut.font,\r\n        fullData: fullData,\r\n        getDfltFromLayout: getDfltFromLayout,\r\n        autotypenumbersDflt: layoutOut.autotypenumbers,\r\n        paper_bgcolor: layoutOut.paper_bgcolor,\r\n        calendar: layoutOut.calendar\r\n    });\r\n};\r\n\r\nfunction handleGl3dDefaults(sceneLayoutIn, sceneLayoutOut, coerce, opts) {\r\n    /*\r\n     * Scene numbering proceeds as follows\r\n     * scene\r\n     * scene2\r\n     * scene3\r\n     *\r\n     * and d.scene will be undefined or some number or number string\r\n     *\r\n     * Also write back a blank scene object to user layout so that some\r\n     * attributes like aspectratio can be written back dynamically.\r\n     */\r\n\r\n    var bgcolor = coerce('bgcolor');\r\n    var bgColorCombined = Color.combine(bgcolor, opts.paper_bgcolor);\r\n\r\n    var cameraKeys = ['up', 'center', 'eye'];\r\n\r\n    for(var j = 0; j < cameraKeys.length; j++) {\r\n        coerce('camera.' + cameraKeys[j] + '.x');\r\n        coerce('camera.' + cameraKeys[j] + '.y');\r\n        coerce('camera.' + cameraKeys[j] + '.z');\r\n    }\r\n\r\n    coerce('camera.projection.type');\r\n\r\n    /*\r\n     * coerce to positive number (min 0) but also do not accept 0 (>0 not >=0)\r\n     * note that 0's go false with the !! call\r\n     */\r\n    var hasAspect = !!coerce('aspectratio.x') &&\r\n                    !!coerce('aspectratio.y') &&\r\n                    !!coerce('aspectratio.z');\r\n\r\n    var defaultAspectMode = hasAspect ? 'manual' : 'auto';\r\n    var aspectMode = coerce('aspectmode', defaultAspectMode);\r\n\r\n    /*\r\n     * We need aspectratio object in all the Layouts as it is dynamically set\r\n     * in the calculation steps, ie, we cant set the correct data now, it happens later.\r\n     * We must also account for the case the user sends bad ratio data with 'manual' set\r\n     * for the mode. In this case we must force change it here as the default coerce\r\n     * misses it above.\r\n     */\r\n    if(!hasAspect) {\r\n        sceneLayoutIn.aspectratio = sceneLayoutOut.aspectratio = {x: 1, y: 1, z: 1};\r\n\r\n        if(aspectMode === 'manual') sceneLayoutOut.aspectmode = 'auto';\r\n\r\n        /*\r\n         * kind of like autorange - we need the calculated aspectmode back in\r\n         * the input layout or relayout can cause problems later\r\n         */\r\n        sceneLayoutIn.aspectmode = sceneLayoutOut.aspectmode;\r\n    }\r\n\r\n    var fullGl3dData = getSubplotData(opts.fullData, GL3D, opts.id);\r\n\r\n    supplyGl3dAxisLayoutDefaults(sceneLayoutIn, sceneLayoutOut, {\r\n        font: opts.font,\r\n        scene: opts.id,\r\n        data: fullGl3dData,\r\n        bgColor: bgColorCombined,\r\n        calendar: opts.calendar,\r\n        autotypenumbersDflt: opts.autotypenumbersDflt,\r\n        fullLayout: opts.fullLayout\r\n    });\r\n\r\n    Registry.getComponentMethod('annotations3d', 'handleDefaults')(\r\n        sceneLayoutIn, sceneLayoutOut, opts\r\n    );\r\n\r\n    var dragmode = opts.getDfltFromLayout('dragmode');\r\n\r\n    if(dragmode !== false) {\r\n        if(!dragmode) {\r\n            dragmode = 'orbit';\r\n\r\n            if(sceneLayoutIn.camera &&\r\n                sceneLayoutIn.camera.up) {\r\n                var x = sceneLayoutIn.camera.up.x;\r\n                var y = sceneLayoutIn.camera.up.y;\r\n                var z = sceneLayoutIn.camera.up.z;\r\n\r\n                if(z !== 0) {\r\n                    if(!x || !y || !z) {\r\n                        dragmode = 'turntable';\r\n                    } else if(z / Math.sqrt(x * x + y * y + z * z) > 0.999) {\r\n                        dragmode = 'turntable';\r\n                    }\r\n                }\r\n            } else {\r\n                dragmode = 'turntable';\r\n            }\r\n        }\r\n    }\r\n\r\n    coerce('dragmode', dragmode);\r\n    coerce('hovermode', opts.getDfltFromLayout('hovermode'));\r\n}\r\n"]},"metadata":{},"sourceType":"script"}