{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../../lib');\n\nvar strTranslate = Lib.strTranslate;\n\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nvar constants = require('./constants');\n\nvar unsupportedBrowsers = Lib.isIOS() || Lib.isSafari() || Lib.isIE();\n\nmodule.exports = function plot(gd, plotinfo, cdimage, imageLayer) {\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  var supportsPixelatedImage = !(unsupportedBrowsers || gd._context._exportedPlot);\n  Lib.makeTraceGroups(imageLayer, cdimage, 'im').each(function (cd) {\n    var plotGroup = d3.select(this);\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    var realImage = (trace.zsmooth === 'fast' || trace.zsmooth === false && supportsPixelatedImage) && !trace._hasZ && trace._hasSource && xa.type === 'linear' && ya.type === 'linear';\n    trace._realImage = realImage;\n    var z = cd0.z;\n    var x0 = cd0.x0;\n    var y0 = cd0.y0;\n    var w = cd0.w;\n    var h = cd0.h;\n    var dx = trace.dx;\n    var dy = trace.dy;\n    var left, right, temp, top, bottom, i; // in case of log of a negative\n\n    i = 0;\n\n    while (left === undefined && i < w) {\n      left = xa.c2p(x0 + i * dx);\n      i++;\n    }\n\n    i = w;\n\n    while (right === undefined && i > 0) {\n      right = xa.c2p(x0 + i * dx);\n      i--;\n    }\n\n    i = 0;\n\n    while (top === undefined && i < h) {\n      top = ya.c2p(y0 + i * dy);\n      i++;\n    }\n\n    i = h;\n\n    while (bottom === undefined && i > 0) {\n      bottom = ya.c2p(y0 + i * dy);\n      i--;\n    }\n\n    if (right < left) {\n      temp = right;\n      right = left;\n      left = temp;\n    }\n\n    if (bottom < top) {\n      temp = top;\n      top = bottom;\n      bottom = temp;\n    } // Reduce image size when zoomed in to save memory\n\n\n    if (!realImage) {\n      var extra = 0.5; // half the axis size\n\n      left = Math.max(-extra * xa._length, left);\n      right = Math.min((1 + extra) * xa._length, right);\n      top = Math.max(-extra * ya._length, top);\n      bottom = Math.min((1 + extra) * ya._length, bottom);\n    }\n\n    var imageWidth = Math.round(right - left);\n    var imageHeight = Math.round(bottom - top); // if image is entirely off-screen, don't even draw it\n\n    var isOffScreen = imageWidth <= 0 || imageHeight <= 0;\n\n    if (isOffScreen) {\n      var noImage = plotGroup.selectAll('image').data([]);\n      noImage.exit().remove();\n      return;\n    } // Create a new canvas and draw magnified pixels on it\n\n\n    function drawMagnifiedPixelsOnCanvas(readPixel) {\n      var canvas = document.createElement('canvas');\n      canvas.width = imageWidth;\n      canvas.height = imageHeight;\n      var context = canvas.getContext('2d');\n\n      var ipx = function (i) {\n        return Lib.constrain(Math.round(xa.c2p(x0 + i * dx) - left), 0, imageWidth);\n      };\n\n      var jpx = function (j) {\n        return Lib.constrain(Math.round(ya.c2p(y0 + j * dy) - top), 0, imageHeight);\n      };\n\n      var cr = constants.colormodel[trace.colormodel];\n      var colormodel = cr.colormodel || trace.colormodel;\n      var fmt = cr.fmt;\n      var c;\n\n      for (i = 0; i < cd0.w; i++) {\n        var ipx0 = ipx(i);\n        var ipx1 = ipx(i + 1);\n        if (ipx1 === ipx0 || isNaN(ipx1) || isNaN(ipx0)) continue;\n\n        for (var j = 0; j < cd0.h; j++) {\n          var jpx0 = jpx(j);\n          var jpx1 = jpx(j + 1);\n          if (jpx1 === jpx0 || isNaN(jpx1) || isNaN(jpx0) || !readPixel(i, j)) continue;\n          c = trace._scaler(readPixel(i, j));\n\n          if (c) {\n            context.fillStyle = colormodel + '(' + fmt(c).join(',') + ')';\n          } else {\n            // Return a transparent pixel\n            context.fillStyle = 'rgba(0,0,0,0)';\n          }\n\n          context.fillRect(ipx0, jpx0, ipx1 - ipx0, jpx1 - jpx0);\n        }\n      }\n\n      return canvas;\n    }\n\n    var image3 = plotGroup.selectAll('image').data([cd]);\n    image3.enter().append('svg:image').attr({\n      xmlns: xmlnsNamespaces.svg,\n      preserveAspectRatio: 'none'\n    });\n    image3.exit().remove();\n    var style = trace.zsmooth === false ? constants.pixelatedStyle : '';\n\n    if (realImage) {\n      var xRange = Lib.simpleMap(xa.range, xa.r2l);\n      var yRange = Lib.simpleMap(ya.range, ya.r2l);\n      var flipX = xRange[1] < xRange[0];\n      var flipY = yRange[1] > yRange[0];\n\n      if (flipX || flipY) {\n        var tx = left + imageWidth / 2;\n        var ty = top + imageHeight / 2;\n        style += 'transform:' + strTranslate(tx + 'px', ty + 'px') + 'scale(' + (flipX ? -1 : 1) + ',' + (flipY ? -1 : 1) + ')' + strTranslate(-tx + 'px', -ty + 'px') + ';';\n      }\n    }\n\n    image3.attr('style', style);\n    var p = new Promise(function (resolve) {\n      if (trace._hasZ) {\n        resolve();\n      } else if (trace._hasSource) {\n        // Check if canvas already exists and has the right data\n        if (trace._canvas && trace._canvas.el.width === w && trace._canvas.el.height === h && trace._canvas.source === trace.source) {\n          resolve();\n        } else {\n          // Create a canvas and transfer image onto it to access pixel information\n          var canvas = document.createElement('canvas');\n          canvas.width = w;\n          canvas.height = h;\n          var context = canvas.getContext('2d');\n          trace._image = trace._image || new Image();\n          var image = trace._image;\n\n          image.onload = function () {\n            context.drawImage(image, 0, 0);\n            trace._canvas = {\n              el: canvas,\n              source: trace.source\n            };\n            resolve();\n          };\n\n          image.setAttribute('src', trace.source);\n        }\n      }\n    }).then(function () {\n      var href, canvas;\n\n      if (trace._hasZ) {\n        canvas = drawMagnifiedPixelsOnCanvas(function (i, j) {\n          return z[j][i];\n        });\n        href = canvas.toDataURL('image/png');\n      } else if (trace._hasSource) {\n        if (realImage) {\n          href = trace.source;\n        } else {\n          var context = trace._canvas.el.getContext('2d');\n\n          var data = context.getImageData(0, 0, w, h).data;\n          canvas = drawMagnifiedPixelsOnCanvas(function (i, j) {\n            var index = 4 * (j * w + i);\n            return [data[index], data[index + 1], data[index + 2], data[index + 3]];\n          });\n          href = canvas.toDataURL('image/png');\n        }\n      }\n\n      image3.attr({\n        'xlink:href': href,\n        height: imageHeight,\n        width: imageWidth,\n        x: left,\n        y: top\n      });\n    });\n\n    gd._promises.push(p);\n  });\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/image/plot.js"],"names":["d3","require","Lib","strTranslate","xmlnsNamespaces","constants","unsupportedBrowsers","isIOS","isSafari","isIE","module","exports","plot","gd","plotinfo","cdimage","imageLayer","xa","xaxis","ya","yaxis","supportsPixelatedImage","_context","_exportedPlot","makeTraceGroups","each","cd","plotGroup","select","cd0","trace","realImage","zsmooth","_hasZ","_hasSource","type","_realImage","z","x0","y0","w","h","dx","dy","left","right","temp","top","bottom","i","undefined","c2p","extra","Math","max","_length","min","imageWidth","round","imageHeight","isOffScreen","noImage","selectAll","data","exit","remove","drawMagnifiedPixelsOnCanvas","readPixel","canvas","document","createElement","width","height","context","getContext","ipx","constrain","jpx","j","cr","colormodel","fmt","c","ipx0","ipx1","isNaN","jpx0","jpx1","_scaler","fillStyle","join","fillRect","image3","enter","append","attr","xmlns","svg","preserveAspectRatio","style","pixelatedStyle","xRange","simpleMap","range","r2l","yRange","flipX","flipY","tx","ty","p","Promise","resolve","_canvas","el","source","_image","Image","image","onload","drawImage","setAttribute","then","href","toDataURL","getImageData","index","x","y","_promises","push"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar d3 = require('@plotly/d3');\r\nvar Lib = require('../../lib');\r\nvar strTranslate = Lib.strTranslate;\r\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\r\nvar constants = require('./constants');\r\n\r\nvar unsupportedBrowsers = Lib.isIOS() || Lib.isSafari() || Lib.isIE();\r\n\r\nmodule.exports = function plot(gd, plotinfo, cdimage, imageLayer) {\r\n    var xa = plotinfo.xaxis;\r\n    var ya = plotinfo.yaxis;\r\n\r\n    var supportsPixelatedImage = !(unsupportedBrowsers || gd._context._exportedPlot);\r\n\r\n    Lib.makeTraceGroups(imageLayer, cdimage, 'im').each(function(cd) {\r\n        var plotGroup = d3.select(this);\r\n        var cd0 = cd[0];\r\n        var trace = cd0.trace;\r\n        var realImage = (\r\n            ((trace.zsmooth === 'fast') || (trace.zsmooth === false && supportsPixelatedImage)) &&\r\n            !trace._hasZ && trace._hasSource && xa.type === 'linear' && ya.type === 'linear'\r\n        );\r\n        trace._realImage = realImage;\r\n\r\n        var z = cd0.z;\r\n        var x0 = cd0.x0;\r\n        var y0 = cd0.y0;\r\n        var w = cd0.w;\r\n        var h = cd0.h;\r\n        var dx = trace.dx;\r\n        var dy = trace.dy;\r\n\r\n        var left, right, temp, top, bottom, i;\r\n        // in case of log of a negative\r\n        i = 0;\r\n        while(left === undefined && i < w) {\r\n            left = xa.c2p(x0 + i * dx);\r\n            i++;\r\n        }\r\n        i = w;\r\n        while(right === undefined && i > 0) {\r\n            right = xa.c2p(x0 + i * dx);\r\n            i--;\r\n        }\r\n        i = 0;\r\n        while(top === undefined && i < h) {\r\n            top = ya.c2p(y0 + i * dy);\r\n            i++;\r\n        }\r\n        i = h;\r\n        while(bottom === undefined && i > 0) {\r\n            bottom = ya.c2p(y0 + i * dy);\r\n            i--;\r\n        }\r\n\r\n        if(right < left) {\r\n            temp = right;\r\n            right = left;\r\n            left = temp;\r\n        }\r\n\r\n        if(bottom < top) {\r\n            temp = top;\r\n            top = bottom;\r\n            bottom = temp;\r\n        }\r\n\r\n        // Reduce image size when zoomed in to save memory\r\n        if(!realImage) {\r\n            var extra = 0.5; // half the axis size\r\n            left = Math.max(-extra * xa._length, left);\r\n            right = Math.min((1 + extra) * xa._length, right);\r\n            top = Math.max(-extra * ya._length, top);\r\n            bottom = Math.min((1 + extra) * ya._length, bottom);\r\n        }\r\n\r\n        var imageWidth = Math.round(right - left);\r\n        var imageHeight = Math.round(bottom - top);\r\n\r\n        // if image is entirely off-screen, don't even draw it\r\n        var isOffScreen = (imageWidth <= 0 || imageHeight <= 0);\r\n        if(isOffScreen) {\r\n            var noImage = plotGroup.selectAll('image').data([]);\r\n            noImage.exit().remove();\r\n            return;\r\n        }\r\n\r\n        // Create a new canvas and draw magnified pixels on it\r\n        function drawMagnifiedPixelsOnCanvas(readPixel) {\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = imageWidth;\r\n            canvas.height = imageHeight;\r\n            var context = canvas.getContext('2d');\r\n\r\n            var ipx = function(i) {return Lib.constrain(Math.round(xa.c2p(x0 + i * dx) - left), 0, imageWidth);};\r\n            var jpx = function(j) {return Lib.constrain(Math.round(ya.c2p(y0 + j * dy) - top), 0, imageHeight);};\r\n\r\n            var cr = constants.colormodel[trace.colormodel];\r\n            var colormodel = (cr.colormodel || trace.colormodel);\r\n            var fmt = cr.fmt;\r\n            var c;\r\n            for(i = 0; i < cd0.w; i++) {\r\n                var ipx0 = ipx(i); var ipx1 = ipx(i + 1);\r\n                if(ipx1 === ipx0 || isNaN(ipx1) || isNaN(ipx0)) continue;\r\n                for(var j = 0; j < cd0.h; j++) {\r\n                    var jpx0 = jpx(j); var jpx1 = jpx(j + 1);\r\n                    if(jpx1 === jpx0 || isNaN(jpx1) || isNaN(jpx0) || !readPixel(i, j)) continue;\r\n                    c = trace._scaler(readPixel(i, j));\r\n                    if(c) {\r\n                        context.fillStyle = colormodel + '(' + fmt(c).join(',') + ')';\r\n                    } else {\r\n                        // Return a transparent pixel\r\n                        context.fillStyle = 'rgba(0,0,0,0)';\r\n                    }\r\n                    context.fillRect(ipx0, jpx0, ipx1 - ipx0, jpx1 - jpx0);\r\n                }\r\n            }\r\n\r\n            return canvas;\r\n        }\r\n\r\n        var image3 = plotGroup.selectAll('image')\r\n            .data([cd]);\r\n\r\n        image3.enter().append('svg:image').attr({\r\n            xmlns: xmlnsNamespaces.svg,\r\n            preserveAspectRatio: 'none'\r\n        });\r\n\r\n        image3.exit().remove();\r\n\r\n        var style = (trace.zsmooth === false) ? constants.pixelatedStyle : '';\r\n\r\n        if(realImage) {\r\n            var xRange = Lib.simpleMap(xa.range, xa.r2l);\r\n            var yRange = Lib.simpleMap(ya.range, ya.r2l);\r\n\r\n            var flipX = xRange[1] < xRange[0];\r\n            var flipY = yRange[1] > yRange[0];\r\n            if(flipX || flipY) {\r\n                var tx = left + imageWidth / 2;\r\n                var ty = top + imageHeight / 2;\r\n                style += 'transform:' +\r\n                    strTranslate(tx + 'px', ty + 'px') +\r\n                    'scale(' + (flipX ? -1 : 1) + ',' + (flipY ? -1 : 1) + ')' +\r\n                    strTranslate(-tx + 'px', -ty + 'px') + ';';\r\n            }\r\n        }\r\n        image3.attr('style', style);\r\n\r\n        var p = new Promise(function(resolve) {\r\n            if(trace._hasZ) {\r\n                resolve();\r\n            } else if(trace._hasSource) {\r\n                // Check if canvas already exists and has the right data\r\n                if(\r\n                    trace._canvas &&\r\n                    trace._canvas.el.width === w &&\r\n                    trace._canvas.el.height === h &&\r\n                    trace._canvas.source === trace.source\r\n                ) {\r\n                    resolve();\r\n                } else {\r\n                    // Create a canvas and transfer image onto it to access pixel information\r\n                    var canvas = document.createElement('canvas');\r\n                    canvas.width = w;\r\n                    canvas.height = h;\r\n                    var context = canvas.getContext('2d');\r\n\r\n                    trace._image = trace._image || new Image();\r\n                    var image = trace._image;\r\n                    image.onload = function() {\r\n                        context.drawImage(image, 0, 0);\r\n                        trace._canvas = {\r\n                            el: canvas,\r\n                            source: trace.source\r\n                        };\r\n                        resolve();\r\n                    };\r\n                    image.setAttribute('src', trace.source);\r\n                }\r\n            }\r\n        })\r\n        .then(function() {\r\n            var href, canvas;\r\n            if(trace._hasZ) {\r\n                canvas = drawMagnifiedPixelsOnCanvas(function(i, j) {return z[j][i];});\r\n                href = canvas.toDataURL('image/png');\r\n            } else if(trace._hasSource) {\r\n                if(realImage) {\r\n                    href = trace.source;\r\n                } else {\r\n                    var context = trace._canvas.el.getContext('2d');\r\n                    var data = context.getImageData(0, 0, w, h).data;\r\n                    canvas = drawMagnifiedPixelsOnCanvas(function(i, j) {\r\n                        var index = 4 * (j * w + i);\r\n                        return [\r\n                            data[index],\r\n                            data[index + 1],\r\n                            data[index + 2],\r\n                            data[index + 3]\r\n                        ];\r\n                    });\r\n                    href = canvas.toDataURL('image/png');\r\n                }\r\n            }\r\n\r\n            image3.attr({\r\n                'xlink:href': href,\r\n                height: imageHeight,\r\n                width: imageWidth,\r\n                x: left,\r\n                y: top\r\n            });\r\n        });\r\n\r\n        gd._promises.push(p);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"script"}