{"ast":null,"code":"'use strict';\n\nvar constants = require('./constants');\n\nmodule.exports = {\n  editType: 'modebar',\n  orientation: {\n    valType: 'enumerated',\n    values: ['v', 'h'],\n    dflt: 'h',\n    editType: 'modebar',\n    description: 'Sets the orientation of the modebar.'\n  },\n  bgcolor: {\n    valType: 'color',\n    editType: 'modebar',\n    description: 'Sets the background color of the modebar.'\n  },\n  color: {\n    valType: 'color',\n    editType: 'modebar',\n    description: 'Sets the color of the icons in the modebar.'\n  },\n  activecolor: {\n    valType: 'color',\n    editType: 'modebar',\n    description: 'Sets the color of the active or hovered on icons in the modebar.'\n  },\n  uirevision: {\n    valType: 'any',\n    editType: 'none',\n    description: ['Controls persistence of user-driven changes related to the modebar,', 'including `hovermode`, `dragmode`, and `showspikes` at both the', 'root level and inside subplots. Defaults to `layout.uirevision`.'].join(' ')\n  },\n  add: {\n    valType: 'string',\n    arrayOk: true,\n    dflt: '',\n    editType: 'modebar',\n    description: ['Determines which predefined modebar buttons to add.', 'Please note that these buttons will only be shown if they are', 'compatible with all trace types used in a graph.', 'Similar to `config.modeBarButtonsToAdd` option.', 'This may include *' + constants.backButtons.join('*, *') + '*.'].join(' ')\n  },\n  remove: {\n    valType: 'string',\n    arrayOk: true,\n    dflt: '',\n    editType: 'modebar',\n    description: ['Determines which predefined modebar buttons to remove.', 'Similar to `config.modeBarButtonsToRemove` option.', 'This may include *' + constants.foreButtons.join('*, *') + '*.'].join(' ')\n  }\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/components/modebar/attributes.js"],"names":["constants","require","module","exports","editType","orientation","valType","values","dflt","description","bgcolor","color","activecolor","uirevision","join","add","arrayOk","backButtons","remove","foreButtons"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAAE,SADG;AAGbC,EAAAA,WAAW,EAAE;AACTC,IAAAA,OAAO,EAAE,YADA;AAETC,IAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,CAFC;AAGTC,IAAAA,IAAI,EAAE,GAHG;AAITJ,IAAAA,QAAQ,EAAE,SAJD;AAKTK,IAAAA,WAAW,EAAE;AALJ,GAHA;AAUbC,EAAAA,OAAO,EAAE;AACLJ,IAAAA,OAAO,EAAE,OADJ;AAELF,IAAAA,QAAQ,EAAE,SAFL;AAGLK,IAAAA,WAAW,EAAE;AAHR,GAVI;AAebE,EAAAA,KAAK,EAAE;AACHL,IAAAA,OAAO,EAAE,OADN;AAEHF,IAAAA,QAAQ,EAAE,SAFP;AAGHK,IAAAA,WAAW,EAAE;AAHV,GAfM;AAoBbG,EAAAA,WAAW,EAAE;AACTN,IAAAA,OAAO,EAAE,OADA;AAETF,IAAAA,QAAQ,EAAE,SAFD;AAGTK,IAAAA,WAAW,EAAE;AAHJ,GApBA;AAyBbI,EAAAA,UAAU,EAAE;AACRP,IAAAA,OAAO,EAAE,KADD;AAERF,IAAAA,QAAQ,EAAE,MAFF;AAGRK,IAAAA,WAAW,EAAE,CACT,qEADS,EAET,iEAFS,EAGT,kEAHS,EAIXK,IAJW,CAIN,GAJM;AAHL,GAzBC;AAkCbC,EAAAA,GAAG,EAAE;AACDT,IAAAA,OAAO,EAAE,QADR;AAEDU,IAAAA,OAAO,EAAE,IAFR;AAGDR,IAAAA,IAAI,EAAE,EAHL;AAIDJ,IAAAA,QAAQ,EAAE,SAJT;AAKDK,IAAAA,WAAW,EAAE,CACT,qDADS,EAET,+DAFS,EAGT,kDAHS,EAIT,iDAJS,EAKT,uBAAuBT,SAAS,CAACiB,WAAV,CAAsBH,IAAtB,CAA2B,MAA3B,CAAvB,GAA4D,IALnD,EAMXA,IANW,CAMN,GANM;AALZ,GAlCQ;AA+CbI,EAAAA,MAAM,EAAE;AACJZ,IAAAA,OAAO,EAAE,QADL;AAEJU,IAAAA,OAAO,EAAE,IAFL;AAGJR,IAAAA,IAAI,EAAE,EAHF;AAIJJ,IAAAA,QAAQ,EAAE,SAJN;AAKJK,IAAAA,WAAW,EAAE,CACT,wDADS,EAET,oDAFS,EAGT,uBAAuBT,SAAS,CAACmB,WAAV,CAAsBL,IAAtB,CAA2B,MAA3B,CAAvB,GAA4D,IAHnD,EAIXA,IAJW,CAIN,GAJM;AALT;AA/CK,CAAjB","sourcesContent":["'use strict';\r\n\r\nvar constants = require('./constants');\r\n\r\nmodule.exports = {\r\n    editType: 'modebar',\r\n\r\n    orientation: {\r\n        valType: 'enumerated',\r\n        values: ['v', 'h'],\r\n        dflt: 'h',\r\n        editType: 'modebar',\r\n        description: 'Sets the orientation of the modebar.'\r\n    },\r\n    bgcolor: {\r\n        valType: 'color',\r\n        editType: 'modebar',\r\n        description: 'Sets the background color of the modebar.'\r\n    },\r\n    color: {\r\n        valType: 'color',\r\n        editType: 'modebar',\r\n        description: 'Sets the color of the icons in the modebar.'\r\n    },\r\n    activecolor: {\r\n        valType: 'color',\r\n        editType: 'modebar',\r\n        description: 'Sets the color of the active or hovered on icons in the modebar.'\r\n    },\r\n    uirevision: {\r\n        valType: 'any',\r\n        editType: 'none',\r\n        description: [\r\n            'Controls persistence of user-driven changes related to the modebar,',\r\n            'including `hovermode`, `dragmode`, and `showspikes` at both the',\r\n            'root level and inside subplots. Defaults to `layout.uirevision`.'\r\n        ].join(' ')\r\n    },\r\n    add: {\r\n        valType: 'string',\r\n        arrayOk: true,\r\n        dflt: '',\r\n        editType: 'modebar',\r\n        description: [\r\n            'Determines which predefined modebar buttons to add.',\r\n            'Please note that these buttons will only be shown if they are',\r\n            'compatible with all trace types used in a graph.',\r\n            'Similar to `config.modeBarButtonsToAdd` option.',\r\n            'This may include *' + constants.backButtons.join('*, *') + '*.'\r\n        ].join(' ')\r\n    },\r\n    remove: {\r\n        valType: 'string',\r\n        arrayOk: true,\r\n        dflt: '',\r\n        editType: 'modebar',\r\n        description: [\r\n            'Determines which predefined modebar buttons to remove.',\r\n            'Similar to `config.modeBarButtonsToRemove` option.',\r\n            'This may include *' + constants.foreButtons.join('*, *') + '*.'\r\n        ].join(' ')\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}