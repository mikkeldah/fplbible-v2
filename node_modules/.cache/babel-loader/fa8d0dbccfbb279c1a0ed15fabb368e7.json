{"ast":null,"code":"'use strict';\n\nvar Color = require('../../components/color');\n\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\n\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\n\nvar subTypes = require('./subtypes');\n/*\r\n * opts: object of flags to control features not all marker users support\r\n *   noLine: caller does not support marker lines\r\n *   gradient: caller supports gradients\r\n *   noSelect: caller does not support selected/unselected attribute containers\r\n */\n\n\nmodule.exports = function markerDefaults(traceIn, traceOut, defaultColor, layout, coerce, opts) {\n  var isBubble = subTypes.isBubble(traceIn);\n  var lineColor = (traceIn.line || {}).color;\n  var defaultMLC;\n  opts = opts || {}; // marker.color inherit from line.color (even if line.color is an array)\n\n  if (lineColor) defaultColor = lineColor;\n  coerce('marker.symbol');\n  coerce('marker.opacity', isBubble ? 0.7 : 1);\n  coerce('marker.size');\n  coerce('marker.color', defaultColor);\n\n  if (hasColorscale(traceIn, 'marker')) {\n    colorscaleDefaults(traceIn, traceOut, layout, coerce, {\n      prefix: 'marker.',\n      cLetter: 'c'\n    });\n  }\n\n  if (!opts.noSelect) {\n    coerce('selected.marker.color');\n    coerce('unselected.marker.color');\n    coerce('selected.marker.size');\n    coerce('unselected.marker.size');\n  }\n\n  if (!opts.noLine) {\n    // if there's a line with a different color than the marker, use\n    // that line color as the default marker line color\n    // (except when it's an array)\n    // mostly this is for transparent markers to behave nicely\n    if (lineColor && !Array.isArray(lineColor) && traceOut.marker.color !== lineColor) {\n      defaultMLC = lineColor;\n    } else if (isBubble) defaultMLC = Color.background;else defaultMLC = Color.defaultLine;\n\n    coerce('marker.line.color', defaultMLC);\n\n    if (hasColorscale(traceIn, 'marker.line')) {\n      colorscaleDefaults(traceIn, traceOut, layout, coerce, {\n        prefix: 'marker.line.',\n        cLetter: 'c'\n      });\n    }\n\n    coerce('marker.line.width', isBubble ? 1 : 0);\n  }\n\n  if (isBubble) {\n    coerce('marker.sizeref');\n    coerce('marker.sizemin');\n    coerce('marker.sizemode');\n  }\n\n  if (opts.gradient) {\n    var gradientType = coerce('marker.gradient.type');\n\n    if (gradientType !== 'none') {\n      coerce('marker.gradient.color');\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/scatter/marker_defaults.js"],"names":["Color","require","hasColorscale","colorscaleDefaults","subTypes","module","exports","markerDefaults","traceIn","traceOut","defaultColor","layout","coerce","opts","isBubble","lineColor","line","color","defaultMLC","prefix","cLetter","noSelect","noLine","Array","isArray","marker","background","defaultLine","gradient","gradientType"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Color = require('../../components/color');\r\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\r\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\r\n\r\nvar subTypes = require('./subtypes');\r\n\r\n/*\r\n * opts: object of flags to control features not all marker users support\r\n *   noLine: caller does not support marker lines\r\n *   gradient: caller supports gradients\r\n *   noSelect: caller does not support selected/unselected attribute containers\r\n */\r\nmodule.exports = function markerDefaults(traceIn, traceOut, defaultColor, layout, coerce, opts) {\r\n    var isBubble = subTypes.isBubble(traceIn);\r\n    var lineColor = (traceIn.line || {}).color;\r\n    var defaultMLC;\r\n\r\n    opts = opts || {};\r\n\r\n    // marker.color inherit from line.color (even if line.color is an array)\r\n    if(lineColor) defaultColor = lineColor;\r\n\r\n    coerce('marker.symbol');\r\n    coerce('marker.opacity', isBubble ? 0.7 : 1);\r\n    coerce('marker.size');\r\n\r\n    coerce('marker.color', defaultColor);\r\n    if(hasColorscale(traceIn, 'marker')) {\r\n        colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: 'marker.', cLetter: 'c'});\r\n    }\r\n\r\n    if(!opts.noSelect) {\r\n        coerce('selected.marker.color');\r\n        coerce('unselected.marker.color');\r\n        coerce('selected.marker.size');\r\n        coerce('unselected.marker.size');\r\n    }\r\n\r\n    if(!opts.noLine) {\r\n        // if there's a line with a different color than the marker, use\r\n        // that line color as the default marker line color\r\n        // (except when it's an array)\r\n        // mostly this is for transparent markers to behave nicely\r\n        if(lineColor && !Array.isArray(lineColor) && (traceOut.marker.color !== lineColor)) {\r\n            defaultMLC = lineColor;\r\n        } else if(isBubble) defaultMLC = Color.background;\r\n        else defaultMLC = Color.defaultLine;\r\n\r\n        coerce('marker.line.color', defaultMLC);\r\n        if(hasColorscale(traceIn, 'marker.line')) {\r\n            colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: 'marker.line.', cLetter: 'c'});\r\n        }\r\n\r\n        coerce('marker.line.width', isBubble ? 1 : 0);\r\n    }\r\n\r\n    if(isBubble) {\r\n        coerce('marker.sizeref');\r\n        coerce('marker.sizemin');\r\n        coerce('marker.sizemode');\r\n    }\r\n\r\n    if(opts.gradient) {\r\n        var gradientType = coerce('marker.gradient.type');\r\n        if(gradientType !== 'none') {\r\n            coerce('marker.gradient.color');\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}