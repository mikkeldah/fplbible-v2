{"ast":null,"code":"'use strict';\n\nvar Lib = require('../lib');\n\nvar helpers = require('./helpers');\n/*\n* substantial portions of this code from FileSaver.js\n* https://github.com/eligrey/FileSaver.js\n* License: https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.1.20160328\n*\n* By Eli Grey, http://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*/\n\n\nfunction fileSaver(url, name, format) {\n  var saveLink = document.createElement('a');\n  var canUseSaveLink = ('download' in saveLink);\n  var promise = new Promise(function (resolve, reject) {\n    var blob;\n    var objectUrl; // Safari doesn't allow downloading of blob urls\n\n    if (Lib.isSafari()) {\n      var prefix = format === 'svg' ? ',' : ';base64,';\n      helpers.octetStream(prefix + encodeURIComponent(url));\n      return resolve(name);\n    } // IE 10+ (native saveAs)\n\n\n    if (Lib.isIE()) {\n      // At this point we are only dealing with a decoded SVG as\n      // a data URL (since IE only supports SVG)\n      blob = helpers.createBlob(url, 'svg');\n      window.navigator.msSaveBlob(blob, name);\n      blob = null;\n      return resolve(name);\n    }\n\n    if (canUseSaveLink) {\n      blob = helpers.createBlob(url, format);\n      objectUrl = helpers.createObjectURL(blob);\n      saveLink.href = objectUrl;\n      saveLink.download = name;\n      document.body.appendChild(saveLink);\n      saveLink.click();\n      document.body.removeChild(saveLink);\n      helpers.revokeObjectURL(objectUrl);\n      blob = null;\n      return resolve(name);\n    }\n\n    reject(new Error('download error'));\n  });\n  return promise;\n}\n\nmodule.exports = fileSaver;","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/snapshot/filesaver.js"],"names":["Lib","require","helpers","fileSaver","url","name","format","saveLink","document","createElement","canUseSaveLink","promise","Promise","resolve","reject","blob","objectUrl","isSafari","prefix","octetStream","encodeURIComponent","isIE","createBlob","window","navigator","msSaveBlob","createObjectURL","href","download","body","appendChild","click","removeChild","revokeObjectURL","Error","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsC;AAClC,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAf;AACA,MAAIC,cAAc,IAAG,cAAcH,QAAjB,CAAlB;AAEA,MAAII,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAChD,QAAIC,IAAJ;AACA,QAAIC,SAAJ,CAFgD,CAIhD;;AACA,QAAGhB,GAAG,CAACiB,QAAJ,EAAH,EAAmB;AACf,UAAIC,MAAM,GAAGZ,MAAM,KAAK,KAAX,GAAmB,GAAnB,GAAyB,UAAtC;AACAJ,MAAAA,OAAO,CAACiB,WAAR,CAAoBD,MAAM,GAAGE,kBAAkB,CAAChB,GAAD,CAA/C;AACA,aAAOS,OAAO,CAACR,IAAD,CAAd;AACH,KAT+C,CAWhD;;;AACA,QAAGL,GAAG,CAACqB,IAAJ,EAAH,EAAe;AACX;AACA;AACAN,MAAAA,IAAI,GAAGb,OAAO,CAACoB,UAAR,CAAmBlB,GAAnB,EAAwB,KAAxB,CAAP;AACAmB,MAAAA,MAAM,CAACC,SAAP,CAAiBC,UAAjB,CAA4BV,IAA5B,EAAkCV,IAAlC;AACAU,MAAAA,IAAI,GAAG,IAAP;AACA,aAAOF,OAAO,CAACR,IAAD,CAAd;AACH;;AAED,QAAGK,cAAH,EAAmB;AACfK,MAAAA,IAAI,GAAGb,OAAO,CAACoB,UAAR,CAAmBlB,GAAnB,EAAwBE,MAAxB,CAAP;AACAU,MAAAA,SAAS,GAAGd,OAAO,CAACwB,eAAR,CAAwBX,IAAxB,CAAZ;AAEAR,MAAAA,QAAQ,CAACoB,IAAT,GAAgBX,SAAhB;AACAT,MAAAA,QAAQ,CAACqB,QAAT,GAAoBvB,IAApB;AACAG,MAAAA,QAAQ,CAACqB,IAAT,CAAcC,WAAd,CAA0BvB,QAA1B;AACAA,MAAAA,QAAQ,CAACwB,KAAT;AAEAvB,MAAAA,QAAQ,CAACqB,IAAT,CAAcG,WAAd,CAA0BzB,QAA1B;AACAL,MAAAA,OAAO,CAAC+B,eAAR,CAAwBjB,SAAxB;AACAD,MAAAA,IAAI,GAAG,IAAP;AAEA,aAAOF,OAAO,CAACR,IAAD,CAAd;AACH;;AAEDS,IAAAA,MAAM,CAAC,IAAIoB,KAAJ,CAAU,gBAAV,CAAD,CAAN;AACH,GAtCa,CAAd;AAwCA,SAAOvB,OAAP;AACH;;AAGDwB,MAAM,CAACC,OAAP,GAAiBjC,SAAjB","sourcesContent":["'use strict';\n\nvar Lib = require('../lib');\nvar helpers = require('./helpers');\n\n/*\n* substantial portions of this code from FileSaver.js\n* https://github.com/eligrey/FileSaver.js\n* License: https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.1.20160328\n*\n* By Eli Grey, http://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*/\nfunction fileSaver(url, name, format) {\n    var saveLink = document.createElement('a');\n    var canUseSaveLink = 'download' in saveLink;\n\n    var promise = new Promise(function(resolve, reject) {\n        var blob;\n        var objectUrl;\n\n        // Safari doesn't allow downloading of blob urls\n        if(Lib.isSafari()) {\n            var prefix = format === 'svg' ? ',' : ';base64,';\n            helpers.octetStream(prefix + encodeURIComponent(url));\n            return resolve(name);\n        }\n\n        // IE 10+ (native saveAs)\n        if(Lib.isIE()) {\n            // At this point we are only dealing with a decoded SVG as\n            // a data URL (since IE only supports SVG)\n            blob = helpers.createBlob(url, 'svg');\n            window.navigator.msSaveBlob(blob, name);\n            blob = null;\n            return resolve(name);\n        }\n\n        if(canUseSaveLink) {\n            blob = helpers.createBlob(url, format);\n            objectUrl = helpers.createObjectURL(blob);\n\n            saveLink.href = objectUrl;\n            saveLink.download = name;\n            document.body.appendChild(saveLink);\n            saveLink.click();\n\n            document.body.removeChild(saveLink);\n            helpers.revokeObjectURL(objectUrl);\n            blob = null;\n\n            return resolve(name);\n        }\n\n        reject(new Error('download error'));\n    });\n\n    return promise;\n}\n\n\nmodule.exports = fileSaver;\n"]},"metadata":{},"sourceType":"script"}