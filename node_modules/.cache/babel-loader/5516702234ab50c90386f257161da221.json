{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar tinycolor = require('tinycolor2');\n\nvar Color = require('../../components/color');\n\nvar extendedColorWayList = {};\n\nfunction calc(gd, trace) {\n  var cd = [];\n  var fullLayout = gd._fullLayout;\n  var hiddenLabels = fullLayout.hiddenlabels || [];\n  var labels = trace.labels;\n  var colors = trace.marker.colors || [];\n  var vals = trace.values;\n  var len = trace._length;\n  var hasValues = trace._hasValues && len;\n  var i, pt;\n\n  if (trace.dlabel) {\n    labels = new Array(len);\n\n    for (i = 0; i < len; i++) {\n      labels[i] = String(trace.label0 + i * trace.dlabel);\n    }\n  }\n\n  var allThisTraceLabels = {};\n  var pullColor = makePullColorFn(fullLayout['_' + trace.type + 'colormap']);\n  var vTotal = 0;\n  var isAggregated = false;\n\n  for (i = 0; i < len; i++) {\n    var v, label, hidden;\n\n    if (hasValues) {\n      v = vals[i];\n      if (!isNumeric(v)) continue;\n      v = +v;\n      if (v < 0) continue;\n    } else v = 1;\n\n    label = labels[i];\n    if (label === undefined || label === '') label = i;\n    label = String(label);\n    var thisLabelIndex = allThisTraceLabels[label];\n\n    if (thisLabelIndex === undefined) {\n      allThisTraceLabels[label] = cd.length;\n      hidden = hiddenLabels.indexOf(label) !== -1;\n      if (!hidden) vTotal += v;\n      cd.push({\n        v: v,\n        label: label,\n        color: pullColor(colors[i], label),\n        i: i,\n        pts: [i],\n        hidden: hidden\n      });\n    } else {\n      isAggregated = true;\n      pt = cd[thisLabelIndex];\n      pt.v += v;\n      pt.pts.push(i);\n      if (!pt.hidden) vTotal += v;\n\n      if (pt.color === false && colors[i]) {\n        pt.color = pullColor(colors[i], label);\n      }\n    }\n  }\n\n  var shouldSort = trace.type === 'funnelarea' ? isAggregated : trace.sort;\n  if (shouldSort) cd.sort(function (a, b) {\n    return b.v - a.v;\n  }); // include the sum of all values in the first point\n\n  if (cd[0]) cd[0].vTotal = vTotal;\n  return cd;\n}\n\nfunction makePullColorFn(colorMap) {\n  return function pullColor(color, id) {\n    if (!color) return false;\n    color = tinycolor(color);\n    if (!color.isValid()) return false;\n    color = Color.addOpacity(color, color.getAlpha());\n    if (!colorMap[id]) colorMap[id] = color;\n    return color;\n  };\n}\n/*\r\n * `calc` filled in (and collated) explicit colors.\r\n * Now we need to propagate these explicit colors to other traces,\r\n * and fill in default colors.\r\n * This is done after sorting, so we pick defaults\r\n * in the order slices will be displayed\r\n */\n\n\nfunction crossTraceCalc(gd, plotinfo) {\n  // TODO: should we name the second argument opts?\n  var desiredType = (plotinfo || {}).type;\n  if (!desiredType) desiredType = 'pie';\n  var fullLayout = gd._fullLayout;\n  var calcdata = gd.calcdata;\n  var colorWay = fullLayout[desiredType + 'colorway'];\n  var colorMap = fullLayout['_' + desiredType + 'colormap'];\n\n  if (fullLayout['extend' + desiredType + 'colors']) {\n    colorWay = generateExtendedColors(colorWay, extendedColorWayList);\n  }\n\n  var dfltColorCount = 0;\n\n  for (var i = 0; i < calcdata.length; i++) {\n    var cd = calcdata[i];\n    var traceType = cd[0].trace.type;\n    if (traceType !== desiredType) continue;\n\n    for (var j = 0; j < cd.length; j++) {\n      var pt = cd[j];\n\n      if (pt.color === false) {\n        // have we seen this label and assigned a color to it in a previous trace?\n        if (colorMap[pt.label]) {\n          pt.color = colorMap[pt.label];\n        } else {\n          colorMap[pt.label] = pt.color = colorWay[dfltColorCount % colorWay.length];\n          dfltColorCount++;\n        }\n      }\n    }\n  }\n}\n/**\r\n * pick a default color from the main default set, augmented by\r\n * itself lighter then darker before repeating\r\n */\n\n\nfunction generateExtendedColors(colorList, extendedColorWays) {\n  var i;\n  var colorString = JSON.stringify(colorList);\n  var colors = extendedColorWays[colorString];\n\n  if (!colors) {\n    colors = colorList.slice();\n\n    for (i = 0; i < colorList.length; i++) {\n      colors.push(tinycolor(colorList[i]).lighten(20).toHexString());\n    }\n\n    for (i = 0; i < colorList.length; i++) {\n      colors.push(tinycolor(colorList[i]).darken(20).toHexString());\n    }\n\n    extendedColorWays[colorString] = colors;\n  }\n\n  return colors;\n}\n\nmodule.exports = {\n  calc: calc,\n  crossTraceCalc: crossTraceCalc,\n  makePullColorFn: makePullColorFn,\n  generateExtendedColors: generateExtendedColors\n};","map":{"version":3,"sources":["C:/Users/mikke/VSC/fantasy-django-react/fantasy-django/fantasy-react-app/node_modules/plotly.js/src/traces/pie/calc.js"],"names":["isNumeric","require","tinycolor","Color","extendedColorWayList","calc","gd","trace","cd","fullLayout","_fullLayout","hiddenLabels","hiddenlabels","labels","colors","marker","vals","values","len","_length","hasValues","_hasValues","i","pt","dlabel","Array","String","label0","allThisTraceLabels","pullColor","makePullColorFn","type","vTotal","isAggregated","v","label","hidden","undefined","thisLabelIndex","length","indexOf","push","color","pts","shouldSort","sort","a","b","colorMap","id","isValid","addOpacity","getAlpha","crossTraceCalc","plotinfo","desiredType","calcdata","colorWay","generateExtendedColors","dfltColorCount","traceType","j","colorList","extendedColorWays","colorString","JSON","stringify","slice","lighten","toHexString","darken","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar isNumeric = require('fast-isnumeric');\r\nvar tinycolor = require('tinycolor2');\r\n\r\nvar Color = require('../../components/color');\r\n\r\nvar extendedColorWayList = {};\r\n\r\nfunction calc(gd, trace) {\r\n    var cd = [];\r\n\r\n    var fullLayout = gd._fullLayout;\r\n    var hiddenLabels = fullLayout.hiddenlabels || [];\r\n\r\n    var labels = trace.labels;\r\n    var colors = trace.marker.colors || [];\r\n    var vals = trace.values;\r\n    var len = trace._length;\r\n    var hasValues = trace._hasValues && len;\r\n\r\n    var i, pt;\r\n\r\n    if(trace.dlabel) {\r\n        labels = new Array(len);\r\n        for(i = 0; i < len; i++) {\r\n            labels[i] = String(trace.label0 + i * trace.dlabel);\r\n        }\r\n    }\r\n\r\n    var allThisTraceLabels = {};\r\n    var pullColor = makePullColorFn(fullLayout['_' + trace.type + 'colormap']);\r\n    var vTotal = 0;\r\n    var isAggregated = false;\r\n\r\n    for(i = 0; i < len; i++) {\r\n        var v, label, hidden;\r\n        if(hasValues) {\r\n            v = vals[i];\r\n            if(!isNumeric(v)) continue;\r\n            v = +v;\r\n            if(v < 0) continue;\r\n        } else v = 1;\r\n\r\n        label = labels[i];\r\n        if(label === undefined || label === '') label = i;\r\n        label = String(label);\r\n\r\n        var thisLabelIndex = allThisTraceLabels[label];\r\n        if(thisLabelIndex === undefined) {\r\n            allThisTraceLabels[label] = cd.length;\r\n\r\n            hidden = hiddenLabels.indexOf(label) !== -1;\r\n\r\n            if(!hidden) vTotal += v;\r\n\r\n            cd.push({\r\n                v: v,\r\n                label: label,\r\n                color: pullColor(colors[i], label),\r\n                i: i,\r\n                pts: [i],\r\n                hidden: hidden\r\n            });\r\n        } else {\r\n            isAggregated = true;\r\n\r\n            pt = cd[thisLabelIndex];\r\n            pt.v += v;\r\n            pt.pts.push(i);\r\n            if(!pt.hidden) vTotal += v;\r\n\r\n            if(pt.color === false && colors[i]) {\r\n                pt.color = pullColor(colors[i], label);\r\n            }\r\n        }\r\n    }\r\n\r\n    var shouldSort = (trace.type === 'funnelarea') ? isAggregated : trace.sort;\r\n    if(shouldSort) cd.sort(function(a, b) { return b.v - a.v; });\r\n\r\n    // include the sum of all values in the first point\r\n    if(cd[0]) cd[0].vTotal = vTotal;\r\n\r\n    return cd;\r\n}\r\n\r\nfunction makePullColorFn(colorMap) {\r\n    return function pullColor(color, id) {\r\n        if(!color) return false;\r\n\r\n        color = tinycolor(color);\r\n        if(!color.isValid()) return false;\r\n\r\n        color = Color.addOpacity(color, color.getAlpha());\r\n        if(!colorMap[id]) colorMap[id] = color;\r\n\r\n        return color;\r\n    };\r\n}\r\n\r\n/*\r\n * `calc` filled in (and collated) explicit colors.\r\n * Now we need to propagate these explicit colors to other traces,\r\n * and fill in default colors.\r\n * This is done after sorting, so we pick defaults\r\n * in the order slices will be displayed\r\n */\r\nfunction crossTraceCalc(gd, plotinfo) { // TODO: should we name the second argument opts?\r\n    var desiredType = (plotinfo || {}).type;\r\n    if(!desiredType) desiredType = 'pie';\r\n\r\n    var fullLayout = gd._fullLayout;\r\n    var calcdata = gd.calcdata;\r\n    var colorWay = fullLayout[desiredType + 'colorway'];\r\n    var colorMap = fullLayout['_' + desiredType + 'colormap'];\r\n\r\n    if(fullLayout['extend' + desiredType + 'colors']) {\r\n        colorWay = generateExtendedColors(colorWay, extendedColorWayList);\r\n    }\r\n    var dfltColorCount = 0;\r\n\r\n    for(var i = 0; i < calcdata.length; i++) {\r\n        var cd = calcdata[i];\r\n        var traceType = cd[0].trace.type;\r\n        if(traceType !== desiredType) continue;\r\n\r\n        for(var j = 0; j < cd.length; j++) {\r\n            var pt = cd[j];\r\n            if(pt.color === false) {\r\n                // have we seen this label and assigned a color to it in a previous trace?\r\n                if(colorMap[pt.label]) {\r\n                    pt.color = colorMap[pt.label];\r\n                } else {\r\n                    colorMap[pt.label] = pt.color = colorWay[dfltColorCount % colorWay.length];\r\n                    dfltColorCount++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * pick a default color from the main default set, augmented by\r\n * itself lighter then darker before repeating\r\n */\r\nfunction generateExtendedColors(colorList, extendedColorWays) {\r\n    var i;\r\n    var colorString = JSON.stringify(colorList);\r\n    var colors = extendedColorWays[colorString];\r\n    if(!colors) {\r\n        colors = colorList.slice();\r\n\r\n        for(i = 0; i < colorList.length; i++) {\r\n            colors.push(tinycolor(colorList[i]).lighten(20).toHexString());\r\n        }\r\n\r\n        for(i = 0; i < colorList.length; i++) {\r\n            colors.push(tinycolor(colorList[i]).darken(20).toHexString());\r\n        }\r\n        extendedColorWays[colorString] = colors;\r\n    }\r\n\r\n    return colors;\r\n}\r\n\r\nmodule.exports = {\r\n    calc: calc,\r\n    crossTraceCalc: crossTraceCalc,\r\n\r\n    makePullColorFn: makePullColorFn,\r\n    generateExtendedColors: generateExtendedColors\r\n};\r\n"]},"metadata":{},"sourceType":"script"}